{"version":3,"file":"tree.jquery.debug.js","sources":["src/dataLoader.ts","src/position.ts","src/util.ts","src/dragAndDropHandler/dragElement.ts","src/dragAndDropHandler/iterateVisibleNodes.ts","src/dragAndDropHandler/generateHitAreas.ts","src/dragAndDropHandler/index.ts","src/elementsRenderer.ts","src/keyHandler.ts","src/mouseUtils.ts","src/mouseHandler.ts","src/nodeUtils.ts","src/node.ts","src/nodeElement/borderDropHint.ts","src/nodeElement/ghostDropHint.ts","src/nodeElement/index.ts","src/nodeElement/folderElement.ts","src/saveStateHandler.ts","src/scrollHandler/containerScrollParent.ts","src/scrollHandler/documentScrollParent.ts","src/scrollHandler/createScrollParent.ts","src/scrollHandler.ts","src/selectNodeHandler.ts","src/simple.widget.ts","src/version.ts","src/tree.jquery.ts"],"sourcesContent":["import { LoadData, TriggerEvent } from \"./jqtreeMethodTypes\";\nimport { DataFilter, OnLoadFailed, OnLoading } from \"./jqtreeOptions\";\nimport { Node } from \"./node\";\n\nexport type HandleFinishedLoading = () => void;\n\ninterface DataLoaderParams {\n    dataFilter?: DataFilter;\n    loadData: LoadData;\n    onLoadFailed?: OnLoadFailed;\n    onLoading?: OnLoading;\n    treeElement: HTMLElement;\n    triggerEvent: TriggerEvent;\n}\n\nexport default class DataLoader {\n    private dataFilter?: DataFilter;\n    private loadData: LoadData;\n    private onLoadFailed?: OnLoadFailed;\n    private onLoading?: OnLoading;\n    private treeElement: HTMLElement;\n    private triggerEvent: TriggerEvent;\n\n    constructor({\n        dataFilter,\n        loadData,\n        onLoadFailed,\n        onLoading,\n        treeElement,\n        triggerEvent,\n    }: DataLoaderParams) {\n        this.dataFilter = dataFilter;\n        this.loadData = loadData;\n        this.onLoadFailed = onLoadFailed;\n        this.onLoading = onLoading;\n        this.treeElement = treeElement;\n        this.triggerEvent = triggerEvent;\n    }\n\n    private addLoadingClass(element: HTMLElement): void {\n        element.classList.add(\"jqtree-loading\");\n    }\n\n    private getDomElement(parentNode: Node | null): HTMLElement {\n        if (parentNode?.element) {\n            return parentNode.element;\n        } else {\n            return this.treeElement;\n        }\n    }\n\n    private notifyLoading(\n        isLoading: boolean,\n        node: Node | null,\n        element: HTMLElement,\n    ): void {\n        const $el = jQuery(element);\n\n        if (this.onLoading) {\n            this.onLoading(isLoading, node, $el);\n        }\n\n        this.triggerEvent(\"tree.loading_data\", {\n            $el,\n            isLoading,\n            node,\n        });\n    }\n\n    private parseData(data: NodeData[] | string): NodeData[] {\n        const getParsedData = () => {\n            if (typeof data === \"string\") {\n                return JSON.parse(data) as NodeData[];\n            } else {\n                return data;\n            }\n        };\n\n        const parsedData = getParsedData();\n\n        if (this.dataFilter) {\n            return this.dataFilter(parsedData);\n        } else {\n            return parsedData;\n        }\n    }\n\n    private removeLoadingClass(element: HTMLElement): void {\n        element.classList.remove(\"jqtree-loading\");\n    }\n\n    private submitRequest(\n        urlInfoInput: JQuery.AjaxSettings | string,\n        handleSuccess: JQuery.Ajax.SuccessCallback<any>,\n        handleError: JQuery.Ajax.ErrorCallback<any>,\n    ): void {\n        const urlInfo =\n            typeof urlInfoInput === \"string\"\n                ? { url: urlInfoInput }\n                : urlInfoInput;\n\n        const ajaxSettings: JQuery.AjaxSettings = {\n            cache: false,\n            dataType: \"json\",\n            error: handleError,\n            method: \"GET\",\n            success: handleSuccess,\n            ...urlInfo,\n        };\n\n        ajaxSettings.method = ajaxSettings.method?.toUpperCase() ?? \"GET\";\n\n        void jQuery.ajax(ajaxSettings);\n    }\n\n    public loadFromUrl(\n        urlInfo: JQuery.AjaxSettings | null | string,\n        parentNode: Node | null,\n        onFinished: HandleFinishedLoading | null,\n    ): void {\n        if (!urlInfo) {\n            return;\n        }\n\n        const element = this.getDomElement(parentNode);\n        this.addLoadingClass(element);\n        this.notifyLoading(true, parentNode, element);\n\n        const stopLoading = (): void => {\n            this.removeLoadingClass(element);\n            this.notifyLoading(false, parentNode, element);\n        };\n\n        const handleSuccess = (data: NodeData[] | string): void => {\n            stopLoading();\n            this.loadData(this.parseData(data), parentNode);\n\n            if (onFinished && typeof onFinished === \"function\") {\n                onFinished();\n            }\n        };\n\n        const handleError = (jqXHR: JQuery.jqXHR): void => {\n            stopLoading();\n\n            if (this.onLoadFailed) {\n                this.onLoadFailed(jqXHR);\n            }\n        };\n\n        this.submitRequest(urlInfo, handleSuccess, handleError);\n    }\n}\n","export enum Position {\n    Before = 1,\n    After,\n    Inside,\n    None,\n}\n\nconst positionNames: Record<string, Position> = {\n    after: Position.After,\n    before: Position.Before,\n    inside: Position.Inside,\n    none: Position.None,\n};\n\nexport const getPositionName = (position: Position): string => {\n    for (const name in positionNames) {\n        if (Object.prototype.hasOwnProperty.call(positionNames, name)) {\n            if (positionNames[name] === position) {\n                return name;\n            }\n        }\n    }\n\n    return \"\";\n};\n\nexport const getPosition = (name: string): Position | undefined =>\n    positionNames[name];\n","export const isInt = (n: unknown): boolean =>\n    typeof n === \"number\" && n % 1 === 0;\n\nexport const isFunction = (v: unknown): boolean => typeof v === \"function\";\n\nexport const getBoolString = (value: unknown): string =>\n    value ? \"true\" : \"false\";\n\nexport const getOffsetTop = (element: HTMLElement) =>\n    getElementPosition(element).top;\n\nexport const getElementPosition = (element: HTMLElement) => {\n    const rect = element.getBoundingClientRect();\n\n    return {\n        left: rect.x + window.scrollX,\n        top: rect.y + window.scrollY,\n    };\n};\n","interface DragElementParams {\n    autoEscape: boolean;\n    nodeName: string;\n    offsetX: number;\n    offsetY: number;\n    treeElement: HTMLElement;\n}\n\nclass DragElement {\n    private element: HTMLElement;\n    private offsetX: number;\n    private offsetY: number;\n\n    constructor({\n        autoEscape,\n        nodeName,\n        offsetX,\n        offsetY,\n        treeElement,\n    }: DragElementParams) {\n        this.offsetX = offsetX;\n        this.offsetY = offsetY;\n\n        this.element = this.createElement(nodeName, autoEscape);\n\n        treeElement.appendChild(this.element);\n    }\n\n    private createElement(nodeName: string, autoEscape: boolean) {\n        const element = document.createElement(\"span\");\n        element.classList.add(\"jqtree-title\", \"jqtree-dragging\");\n\n        if (autoEscape) {\n            element.textContent = nodeName;\n        } else {\n            element.innerHTML = nodeName;\n        }\n\n        element.style.position = \"absolute\";\n\n        return element;\n    }\n\n    public move(pageX: number, pageY: number): void {\n        this.element.style.left = `${pageX - this.offsetX}px`;\n        this.element.style.top = `${pageY - this.offsetY}px`;\n    }\n\n    public remove(): void {\n        this.element.remove();\n    }\n}\n\nexport default DragElement;\n","import { Node } from \"../node\";\n\ninterface Options {\n    handleAfterOpenFolder: (node: Node, nextNode: Node | null) => void;\n    handleClosedFolder: (\n        node: Node,\n        nextNode: Node | null,\n        element: HTMLElement,\n    ) => void;\n    handleFirstNode: (node: Node) => void;\n    handleNode: (\n        node: Node,\n        nextNode: Node | null,\n        element: HTMLElement,\n    ) => void;\n\n    /*\n    override\n    return\n        - true: continue iterating\n        - false: stop iterating\n    */\n    handleOpenFolder: (node: Node, element: HTMLElement) => boolean;\n}\n\nconst iterateVisibleNodes = (\n    tree: Node,\n    {\n        handleAfterOpenFolder,\n        handleClosedFolder,\n        handleFirstNode,\n        handleNode,\n        handleOpenFolder,\n    }: Options,\n) => {\n    let isFirstNode = true;\n\n    const iterate = (node: Node, nextNode: Node | null): void => {\n        let mustIterateInside =\n            (node.is_open || !node.element) && node.hasChildren();\n\n        let element: HTMLElement | null = null;\n\n        // Is the element visible?\n        if (node.element?.offsetParent) {\n            element = node.element;\n\n            if (isFirstNode) {\n                handleFirstNode(node);\n                isFirstNode = false;\n            }\n\n            if (!node.hasChildren()) {\n                handleNode(node, nextNode, node.element);\n            } else if (node.is_open) {\n                if (!handleOpenFolder(node, node.element)) {\n                    mustIterateInside = false;\n                }\n            } else {\n                handleClosedFolder(node, nextNode, element);\n            }\n        }\n\n        if (mustIterateInside) {\n            const childrenLength = node.children.length;\n            node.children.forEach((_, i) => {\n                const child = node.children[i];\n\n                if (child) {\n                    if (i === childrenLength - 1) {\n                        iterate(child, null);\n                    } else {\n                        const nextChild = node.children[i + 1];\n\n                        if (nextChild) {\n                            iterate(child, nextChild);\n                        }\n                    }\n                }\n            });\n\n            if (node.is_open && element) {\n                handleAfterOpenFolder(node, nextNode);\n            }\n        }\n    };\n\n    iterate(tree, null);\n};\n\nexport default iterateVisibleNodes;\n","import { Node } from \"../node\";\nimport { Position } from \"../position\";\nimport { getOffsetTop } from \"../util\";\nimport iterateVisibleNodes from \"./iterateVisibleNodes\";\nimport { HitArea } from \"./types\";\n\ninterface HitPosition {\n    node: Node;\n    position: Position;\n    top: number;\n}\n\nexport const generateHitPositions = (\n    tree: Node,\n    currentNode: Node,\n): HitPosition[] => {\n    const hitPositions: HitPosition[] = [];\n    let lastTop = 0;\n\n    const addHitPosition = (node: Node, position: number, top: number) => {\n        hitPositions.push({\n            node,\n            position,\n            top,\n        });\n        lastTop = top;\n    };\n\n    const handleAfterOpenFolder = (node: Node, nextNode: Node | null) => {\n        if (node === currentNode || nextNode === currentNode) {\n            // Cannot move before or after current item\n            addHitPosition(node, Position.None, lastTop);\n        } else {\n            addHitPosition(node, Position.After, lastTop);\n        }\n    };\n\n    const handleClosedFolder = (\n        node: Node,\n        nextNode: Node | null,\n        element: HTMLElement,\n    ) => {\n        const top = getOffsetTop(element);\n\n        if (node === currentNode) {\n            // Cannot move after current item\n            addHitPosition(node, Position.None, top);\n        } else {\n            addHitPosition(node, Position.Inside, top);\n\n            // Cannot move before current item\n            if (nextNode !== currentNode) {\n                addHitPosition(node, Position.After, top);\n            }\n        }\n    };\n\n    const handleFirstNode = (node: Node) => {\n        if (node !== currentNode && node.element) {\n            addHitPosition(node, Position.Before, getOffsetTop(node.element));\n        }\n    };\n\n    const handleNode = (\n        node: Node,\n        nextNode: Node | null,\n        element: HTMLElement,\n    ) => {\n        const top = getOffsetTop(element);\n\n        if (node === currentNode) {\n            // Cannot move inside current item\n            addHitPosition(node, Position.None, top);\n        } else {\n            addHitPosition(node, Position.Inside, top);\n        }\n\n        if (nextNode === currentNode || node === currentNode) {\n            // Cannot move before or after current item\n            addHitPosition(node, Position.None, top);\n        } else {\n            addHitPosition(node, Position.After, top);\n        }\n    };\n\n    const handleOpenFolder = (node: Node, element: HTMLElement) => {\n        if (node === currentNode) {\n            // Cannot move inside current item\n\n            // Dnd over the current element is not possible: add a position with type None for the top and the bottom.\n            const top = getOffsetTop(element);\n            const height = element.clientHeight;\n            addHitPosition(node, Position.None, top);\n\n            if (height > 5) {\n                // Subtract 5 pixels to allow more space for the next element.\n                addHitPosition(node, Position.None, top + height - 5);\n            }\n\n            // Stop iterating\n            return false;\n        }\n\n        // Cannot move before current item\n        if (node.children[0] !== currentNode) {\n            addHitPosition(node, Position.Inside, getOffsetTop(element));\n        }\n\n        // Continue iterating\n        return true;\n    };\n\n    iterateVisibleNodes(tree, {\n        handleAfterOpenFolder,\n        handleClosedFolder,\n        handleFirstNode,\n        handleNode,\n        handleOpenFolder,\n    });\n\n    return hitPositions;\n};\n\nexport const generateHitAreasForGroup = (\n    hitAreas: HitArea[],\n    positionsInGroup: HitPosition[],\n    top: number,\n    bottom: number,\n) => {\n    // limit positions in group\n    const positionCount = Math.min(positionsInGroup.length, 4);\n\n    const areaHeight = Math.round((bottom - top) / positionCount);\n    let areaTop = top;\n\n    for (let i = 0; i < positionCount; i++) {\n        const position = positionsInGroup[i] as HitPosition;\n\n        if (position.position !== Position.None) {\n            hitAreas.push({\n                bottom: areaTop + areaHeight,\n                node: position.node,\n                position: position.position,\n                top: areaTop,\n            });\n        }\n\n        areaTop += areaHeight;\n    }\n};\n\nexport const generateHitAreasFromPositions = (\n    hitPositions: HitPosition[],\n    treeBottom: number,\n): HitArea[] => {\n    if (!hitPositions.length) {\n        return [];\n    }\n\n    let previousTop = (hitPositions[0] as HitPosition).top;\n    let group: HitPosition[] = [];\n    const hitAreas: HitArea[] = [];\n\n    for (const position of hitPositions) {\n        if (position.top !== previousTop && group.length) {\n            generateHitAreasForGroup(\n                hitAreas,\n                group,\n                previousTop,\n                position.top,\n            );\n\n            previousTop = position.top;\n            group = [];\n        }\n\n        group.push(position);\n    }\n\n    generateHitAreasForGroup(hitAreas, group, previousTop, treeBottom);\n\n    return hitAreas;\n};\n\nconst generateHitAreas = (tree: Node, currentNode: Node, treeBottom: number) =>\n    generateHitAreasFromPositions(\n        generateHitPositions(tree, currentNode),\n        treeBottom,\n    );\n\nexport default generateHitAreas;\n","import {\n    GetScrollLeft,\n    GetTree,\n    OpenNode,\n    RefreshElements,\n    TriggerEvent,\n} from \"../jqtreeMethodTypes\";\nimport {\n    DragMethod,\n    OnCanMove,\n    OnCanMoveTo,\n    OnIsMoveHandle,\n} from \"../jqtreeOptions\";\nimport { PositionInfo } from \"../mouseUtils\";\nimport { Node } from \"../node\";\nimport NodeElement from \"../nodeElement\";\nimport { getPositionName, Position } from \"../position\";\nimport { getElementPosition } from \"../util\";\nimport DragElement from \"./dragElement\";\nimport generateHitAreas from \"./generateHitAreas\";\nimport { DropHint, HitArea } from \"./types\";\n\ninterface Dimensions {\n    bottom: number;\n    left: number;\n    right: number;\n    top: number;\n}\n\ntype GetNodeElement = (element: HTMLElement) => NodeElement | null;\ntype GetNodeElementForNode = (node: Node) => NodeElement;\n\ninterface DragAndDropHandlerParams {\n    autoEscape?: boolean;\n    getNodeElement: GetNodeElement;\n    getNodeElementForNode: GetNodeElementForNode;\n    getScrollLeft: GetScrollLeft;\n    getTree: GetTree;\n    onCanMove?: OnCanMove;\n    onCanMoveTo?: OnCanMoveTo;\n    onDragMove?: DragMethod;\n    onDragStop?: DragMethod;\n    onIsMoveHandle?: OnIsMoveHandle;\n    openFolderDelay: false | number;\n    openNode: OpenNode;\n    refreshElements: RefreshElements;\n    slide: boolean;\n    treeElement: HTMLElement;\n    triggerEvent: TriggerEvent;\n}\n\nexport class DragAndDropHandler {\n    private autoEscape?: boolean;\n    private dragElement: DragElement | null;\n    private getNodeElement: GetNodeElement;\n    private getNodeElementForNode: GetNodeElementForNode;\n\n    private getScrollLeft: GetScrollLeft;\n    private getTree: GetTree;\n    private onCanMove?: OnCanMove;\n    private onCanMoveTo?: OnCanMoveTo;\n    private onDragMove?: DragMethod;\n    private onDragStop?: DragMethod;\n    private onIsMoveHandle?: OnIsMoveHandle;\n    private openFolderDelay: false | number;\n    private openFolderTimer: null | number;\n    private openNode: OpenNode;\n    private previousGhost: DropHint | null;\n    private refreshElements: RefreshElements;\n    private slide: boolean;\n    private treeElement: HTMLElement;\n    private triggerEvent: TriggerEvent;\n    public currentItem: NodeElement | null;\n    public hitAreas: HitArea[];\n    public hoveredArea: HitArea | null;\n    public isDragging: boolean;\n\n    constructor({\n        autoEscape,\n        getNodeElement,\n        getNodeElementForNode,\n        getScrollLeft,\n        getTree,\n        onCanMove,\n        onCanMoveTo,\n        onDragMove,\n        onDragStop,\n        onIsMoveHandle,\n        openNode,\n        refreshElements,\n        slide,\n        treeElement,\n        triggerEvent,\n    }: DragAndDropHandlerParams) {\n        this.autoEscape = autoEscape;\n        this.getNodeElement = getNodeElement;\n        this.getNodeElementForNode = getNodeElementForNode;\n        this.getScrollLeft = getScrollLeft;\n        this.getTree = getTree;\n        this.onCanMove = onCanMove;\n        this.onCanMoveTo = onCanMoveTo;\n        this.onDragMove = onDragMove;\n        this.onDragStop = onDragStop;\n        this.onIsMoveHandle = onIsMoveHandle;\n        this.openNode = openNode;\n        this.refreshElements = refreshElements;\n        this.slide = slide;\n        this.treeElement = treeElement;\n        this.triggerEvent = triggerEvent;\n\n        this.hoveredArea = null;\n        this.hitAreas = [];\n        this.isDragging = false;\n        this.currentItem = null;\n    }\n\n    private canMoveToArea(area: HitArea): boolean {\n        if (!this.onCanMoveTo) {\n            return true;\n        }\n\n        if (!this.currentItem) {\n            return false;\n        }\n\n        const positionName = getPositionName(area.position);\n\n        return this.onCanMoveTo(this.currentItem.node, area.node, positionName);\n    }\n\n    private clear(): void {\n        if (this.dragElement) {\n            this.dragElement.remove();\n            this.dragElement = null;\n        }\n    }\n\n    private findHoveredArea(x: number, y: number): HitArea | null {\n        const dimensions = this.getTreeDimensions();\n\n        if (\n            x < dimensions.left ||\n            y < dimensions.top ||\n            x > dimensions.right ||\n            y > dimensions.bottom\n        ) {\n            return null;\n        }\n\n        let low = 0;\n        let high = this.hitAreas.length;\n        while (low < high) {\n            const mid = (low + high) >> 1;\n            const area = this.hitAreas[mid];\n\n            if (!area) {\n                return null;\n            }\n\n            if (y < area.top) {\n                high = mid;\n            } else if (y > area.bottom) {\n                low = mid + 1;\n            } else {\n                return area;\n            }\n        }\n\n        return null;\n    }\n\n    private generateHitAreas(): void {\n        const tree = this.getTree();\n\n        if (!this.currentItem || !tree) {\n            this.hitAreas = [];\n        } else {\n            this.hitAreas = generateHitAreas(\n                tree,\n                this.currentItem.node,\n                this.getTreeDimensions().bottom,\n            );\n        }\n    }\n\n    private getTreeDimensions(): Dimensions {\n        // Return the dimensions of the tree. Add a margin to the bottom to allow\n        // to drag-and-drop after the last element.\n        const treePosition = getElementPosition(this.treeElement);\n        const left = treePosition.left + this.getScrollLeft();\n        const top = treePosition.top;\n\n        return {\n            bottom: top + this.treeElement.clientHeight + 16,\n            left,\n            right: left + this.treeElement.clientWidth,\n            top,\n        };\n    }\n\n    private moveItem(positionInfo: PositionInfo): void {\n        if (\n            this.currentItem &&\n            this.hoveredArea &&\n            this.hoveredArea.position !== Position.None &&\n            this.canMoveToArea(this.hoveredArea)\n        ) {\n            const movedNode = this.currentItem.node;\n            const targetNode = this.hoveredArea.node;\n            const position = this.hoveredArea.position;\n            const previousParent = movedNode.parent;\n\n            if (position === Position.Inside) {\n                this.hoveredArea.node.is_open = true;\n            }\n\n            const doMove = (): void => {\n                const tree = this.getTree();\n\n                if (tree) {\n                    tree.moveNode(movedNode, targetNode, position);\n\n                    this.treeElement.textContent = \"\";\n                    this.refreshElements(null);\n                }\n            };\n\n            const event = this.triggerEvent(\"tree.move\", {\n                move_info: {\n                    do_move: doMove,\n                    moved_node: movedNode,\n                    original_event: positionInfo.originalEvent,\n                    position: getPositionName(position),\n                    previous_parent: previousParent,\n                    target_node: targetNode,\n                },\n            });\n\n            if (!event.isDefaultPrevented()) {\n                doMove();\n            }\n        }\n    }\n\n    private mustCaptureElement(element: HTMLElement): boolean {\n        const nodeName = element.nodeName;\n\n        return (\n            nodeName !== \"INPUT\" &&\n            nodeName !== \"SELECT\" &&\n            nodeName !== \"TEXTAREA\"\n        );\n    }\n\n    private mustOpenFolderTimer(area: HitArea): boolean {\n        const node = area.node;\n\n        return (\n            node.isFolder() &&\n            !node.is_open &&\n            area.position === Position.Inside\n        );\n    }\n\n    private removeDropHint(): void {\n        if (this.previousGhost) {\n            this.previousGhost.remove();\n        }\n    }\n\n    private removeHitAreas(): void {\n        this.hitAreas = [];\n    }\n\n    private removeHover(): void {\n        this.hoveredArea = null;\n    }\n\n    private startOpenFolderTimer(folder: Node): void {\n        const openFolder = (): void => {\n            this.openNode(folder, this.slide, () => {\n                this.refresh();\n                this.updateDropHint();\n            });\n        };\n\n        this.stopOpenFolderTimer();\n\n        const openFolderDelay = this.openFolderDelay;\n\n        if (openFolderDelay !== false) {\n            this.openFolderTimer = window.setTimeout(\n                openFolder,\n                openFolderDelay,\n            );\n        }\n    }\n\n    private stopOpenFolderTimer(): void {\n        if (this.openFolderTimer) {\n            clearTimeout(this.openFolderTimer);\n            this.openFolderTimer = null;\n        }\n    }\n\n    private updateDropHint(): void {\n        if (!this.hoveredArea) {\n            return;\n        }\n\n        // remove previous drop hint\n        this.removeDropHint();\n\n        // add new drop hint\n        const nodeElement = this.getNodeElementForNode(this.hoveredArea.node);\n        this.previousGhost = nodeElement.addDropHint(this.hoveredArea.position);\n    }\n\n    public mouseCapture(positionInfo: PositionInfo): boolean | null {\n        const element = positionInfo.target;\n\n        if (!this.mustCaptureElement(element)) {\n            return null;\n        }\n\n        if (this.onIsMoveHandle && !this.onIsMoveHandle(jQuery(element))) {\n            return null;\n        }\n\n        let nodeElement = this.getNodeElement(element);\n\n        if (nodeElement && this.onCanMove) {\n            if (!this.onCanMove(nodeElement.node)) {\n                nodeElement = null;\n            }\n        }\n\n        this.currentItem = nodeElement;\n        return this.currentItem != null;\n    }\n\n    public mouseDrag(positionInfo: PositionInfo): boolean {\n        if (!this.currentItem || !this.dragElement) {\n            return false;\n        }\n\n        this.dragElement.move(positionInfo.pageX, positionInfo.pageY);\n\n        const area = this.findHoveredArea(\n            positionInfo.pageX,\n            positionInfo.pageY,\n        );\n\n        if (area && this.canMoveToArea(area)) {\n            if (!area.node.isFolder()) {\n                this.stopOpenFolderTimer();\n            }\n\n            if (this.hoveredArea !== area) {\n                this.hoveredArea = area;\n\n                // If this is a closed folder, start timer to open it\n                if (this.mustOpenFolderTimer(area)) {\n                    this.startOpenFolderTimer(area.node);\n                } else {\n                    this.stopOpenFolderTimer();\n                }\n\n                this.updateDropHint();\n            }\n        } else {\n            this.removeDropHint();\n            this.stopOpenFolderTimer();\n            this.hoveredArea = area;\n        }\n\n        if (!area) {\n            if (this.onDragMove) {\n                this.onDragMove(\n                    this.currentItem.node,\n                    positionInfo.originalEvent,\n                );\n            }\n        }\n\n        return true;\n    }\n\n    public mouseStart(positionInfo: PositionInfo): boolean {\n        if (!this.currentItem) {\n            return false;\n        }\n\n        this.refresh();\n\n        const { left, top } = getElementPosition(positionInfo.target);\n\n        const node = this.currentItem.node;\n\n        this.dragElement = new DragElement({\n            autoEscape: this.autoEscape ?? true,\n            nodeName: node.name,\n            offsetX: positionInfo.pageX - left,\n            offsetY: positionInfo.pageY - top,\n            treeElement: this.treeElement,\n        });\n\n        this.isDragging = true;\n        this.currentItem.element.classList.add(\"jqtree-moving\");\n\n        return true;\n    }\n\n    public mouseStop(positionInfo: PositionInfo): boolean {\n        this.moveItem(positionInfo);\n        this.clear();\n        this.removeHover();\n        this.removeDropHint();\n        this.removeHitAreas();\n\n        const currentItem = this.currentItem;\n\n        if (this.currentItem) {\n            this.currentItem.element.classList.remove(\"jqtree-moving\");\n            this.currentItem = null;\n        }\n\n        this.isDragging = false;\n\n        if (!this.hoveredArea && currentItem) {\n            if (this.onDragStop) {\n                this.onDragStop(currentItem.node, positionInfo.originalEvent);\n            }\n        }\n\n        return false;\n    }\n\n    public refresh(): void {\n        this.removeHitAreas();\n\n        if (this.currentItem) {\n            this.generateHitAreas();\n\n            this.currentItem = this.getNodeElementForNode(\n                this.currentItem.node,\n            );\n\n            if (this.isDragging) {\n                this.currentItem.element.classList.add(\"jqtree-moving\");\n            }\n        }\n    }\n}\n","import { GetTree, IsNodeSelected } from \"./jqtreeMethodTypes\";\nimport { IconElement, OnCreateLi } from \"./jqtreeOptions\";\nimport { Node } from \"./node\";\nimport { getBoolString } from \"./util\";\n\ninterface ElementsRendererParams {\n    $element: JQuery;\n    autoEscape: boolean;\n    buttonLeft: boolean;\n    closedIcon?: IconElement;\n    dragAndDrop: boolean;\n    getTree: GetTree;\n    isNodeSelected: IsNodeSelected;\n    onCreateLi?: OnCreateLi;\n    openedIcon?: IconElement;\n    rtl?: boolean;\n    showEmptyFolder: boolean;\n    tabIndex?: number;\n}\n\nexport default class ElementsRenderer {\n    private $element: JQuery;\n    private autoEscape: boolean;\n    private buttonLeft: boolean;\n    private dragAndDrop: boolean;\n    private getTree: GetTree;\n    private isNodeSelected: IsNodeSelected;\n    private onCreateLi?: OnCreateLi;\n    private rtl?: boolean;\n    private showEmptyFolder: boolean;\n    private tabIndex?: number;\n\n    public closedIconElement?: HTMLElement | Text;\n    public openedIconElement?: HTMLElement | Text;\n\n    constructor({\n        $element,\n        autoEscape,\n        buttonLeft,\n        closedIcon,\n        dragAndDrop,\n        getTree,\n        isNodeSelected,\n        onCreateLi,\n        openedIcon,\n        rtl,\n        showEmptyFolder,\n        tabIndex,\n    }: ElementsRendererParams) {\n        this.autoEscape = autoEscape;\n        this.buttonLeft = buttonLeft;\n        this.dragAndDrop = dragAndDrop;\n        this.$element = $element;\n        this.getTree = getTree;\n        this.isNodeSelected = isNodeSelected;\n        this.onCreateLi = onCreateLi;\n        this.rtl = rtl;\n        this.showEmptyFolder = showEmptyFolder;\n        this.tabIndex = tabIndex;\n        this.openedIconElement = this.createButtonElement(openedIcon ?? \"+\");\n        this.closedIconElement = this.createButtonElement(closedIcon ?? \"-\");\n    }\n\n    private attachNodeData(node: Node, li: HTMLElement): void {\n        node.element = li;\n        jQuery(li).data(\"node\", node);\n    }\n\n    private createButtonElement(\n        value: IconElement,\n    ): HTMLElement | Text | undefined {\n        if (typeof value === \"string\") {\n            // convert value to html\n            const div = document.createElement(\"div\");\n            div.innerHTML = value;\n\n            return document.createTextNode(div.innerHTML);\n        } else if ((value as HTMLElement).nodeType) {\n            return value as HTMLElement;\n        } else {\n            return jQuery(value)[0];\n        }\n    }\n\n    private createDomElements(\n        element: Element,\n        children: Node[],\n        isRootNode: boolean,\n        level: number,\n    ): void {\n        const ul = this.createUl(isRootNode);\n        element.appendChild(ul);\n\n        for (const child of children) {\n            const li = this.createLi(child, level);\n            ul.appendChild(li);\n\n            if (child.hasChildren()) {\n                this.createDomElements(li, child.children, false, level + 1);\n            }\n        }\n    }\n\n    private createFolderLi(\n        node: Node,\n        level: number,\n        isSelected: boolean,\n    ): HTMLLIElement {\n        const buttonClasses = this.getButtonClasses(node);\n        const folderClasses = this.getFolderClasses(node, isSelected);\n\n        const iconElement = node.is_open\n            ? this.openedIconElement\n            : this.closedIconElement;\n\n        // li\n        const li = document.createElement(\"li\");\n        li.className = `jqtree_common ${folderClasses}`;\n        li.setAttribute(\"role\", \"none\");\n\n        // div\n        const div = document.createElement(\"div\");\n        div.className = \"jqtree-element jqtree_common\";\n        div.setAttribute(\"role\", \"none\");\n\n        li.appendChild(div);\n\n        // button link\n        const buttonLink = document.createElement(\"a\");\n        buttonLink.className = buttonClasses;\n\n        if (iconElement) {\n            buttonLink.appendChild(iconElement.cloneNode(true));\n        }\n\n        if (this.buttonLeft) {\n            div.appendChild(buttonLink);\n        }\n\n        // title span\n        const titleSpan = this.createTitleSpan(\n            node.name,\n            isSelected,\n            true,\n            level,\n        );\n        titleSpan.setAttribute(\"aria-expanded\", getBoolString(node.is_open));\n        div.appendChild(titleSpan);\n\n        if (!this.buttonLeft) {\n            div.appendChild(buttonLink);\n        }\n\n        return li;\n    }\n\n    /* Create the <li> element\n     * Attach it to node.element.\n     * Call onCreateLi\n     */\n    private createLi(node: Node, level: number): HTMLLIElement {\n        const isSelected = Boolean(this.isNodeSelected(node));\n\n        const mustShowFolder =\n            node.isFolder() || (node.isEmptyFolder && this.showEmptyFolder);\n\n        const li = mustShowFolder\n            ? this.createFolderLi(node, level, isSelected)\n            : this.createNodeLi(node, level, isSelected);\n\n        this.attachNodeData(node, li);\n\n        if (this.onCreateLi) {\n            this.onCreateLi(node, jQuery(li), isSelected);\n        }\n\n        return li;\n    }\n\n    private createNodeLi(\n        node: Node,\n        level: number,\n        isSelected: boolean,\n    ): HTMLLIElement {\n        const liClasses = [\"jqtree_common\"];\n\n        if (isSelected) {\n            liClasses.push(\"jqtree-selected\");\n        }\n\n        const classString = liClasses.join(\" \");\n\n        // li\n        const li = document.createElement(\"li\");\n        li.className = classString;\n        li.setAttribute(\"role\", \"none\");\n\n        // div\n        const div = document.createElement(\"div\");\n        div.className = \"jqtree-element jqtree_common\";\n        div.setAttribute(\"role\", \"none\");\n\n        li.appendChild(div);\n\n        // title span\n        const titleSpan = this.createTitleSpan(\n            node.name,\n            isSelected,\n            false,\n            level,\n        );\n        div.appendChild(titleSpan);\n\n        return li;\n    }\n\n    private createTitleSpan(\n        nodeName: string,\n        isSelected: boolean,\n        isFolder: boolean,\n        level: number,\n    ): HTMLSpanElement {\n        const titleSpan = document.createElement(\"span\");\n\n        let classes = \"jqtree-title jqtree_common\";\n\n        if (isFolder) {\n            classes += \" jqtree-title-folder\";\n        }\n\n        classes += ` jqtree-title-button-${this.buttonLeft ? \"left\" : \"right\"}`;\n\n        titleSpan.className = classes;\n\n        if (isSelected) {\n            const tabIndex = this.tabIndex;\n\n            if (tabIndex !== undefined) {\n                titleSpan.setAttribute(\"tabindex\", `${tabIndex}`);\n            }\n        }\n\n        this.setTreeItemAriaAttributes(titleSpan, nodeName, level, isSelected);\n\n        if (this.autoEscape) {\n            titleSpan.textContent = nodeName;\n        } else {\n            titleSpan.innerHTML = nodeName;\n        }\n\n        return titleSpan;\n    }\n\n    private createUl(isRootNode: boolean): HTMLUListElement {\n        let classString;\n        let role;\n\n        if (!isRootNode) {\n            classString = \"\";\n            role = \"group\";\n        } else {\n            classString = \"jqtree-tree\";\n            role = \"tree\";\n\n            if (this.rtl) {\n                classString += \" jqtree-rtl\";\n            }\n        }\n\n        if (this.dragAndDrop) {\n            classString += \" jqtree-dnd\";\n        }\n\n        const ul = document.createElement(\"ul\");\n        ul.className = `jqtree_common ${classString}`;\n\n        ul.setAttribute(\"role\", role);\n\n        return ul;\n    }\n\n    private getButtonClasses(node: Node): string {\n        const classes = [\"jqtree-toggler\", \"jqtree_common\"];\n\n        if (!node.is_open) {\n            classes.push(\"jqtree-closed\");\n        }\n\n        if (this.buttonLeft) {\n            classes.push(\"jqtree-toggler-left\");\n        } else {\n            classes.push(\"jqtree-toggler-right\");\n        }\n\n        return classes.join(\" \");\n    }\n\n    private getFolderClasses(node: Node, isSelected: boolean): string {\n        const classes = [\"jqtree-folder\"];\n\n        if (!node.is_open) {\n            classes.push(\"jqtree-closed\");\n        }\n\n        if (isSelected) {\n            classes.push(\"jqtree-selected\");\n        }\n\n        if (node.is_loading) {\n            classes.push(\"jqtree-loading\");\n        }\n\n        return classes.join(\" \");\n    }\n\n    private setTreeItemAriaAttributes(\n        element: HTMLElement,\n        name: string,\n        level: number,\n        isSelected: boolean,\n    ) {\n        element.setAttribute(\"aria-label\", name);\n        element.setAttribute(\"aria-level\", `${level}`);\n        element.setAttribute(\"aria-selected\", getBoolString(isSelected));\n        element.setAttribute(\"role\", \"treeitem\");\n    }\n\n    public render(fromNode: Node | null): void {\n        if (fromNode?.parent) {\n            this.renderFromNode(fromNode);\n        } else {\n            this.renderFromRoot();\n        }\n    }\n\n    public renderFromNode(node: Node): void {\n        if (!node.element) {\n            return;\n        }\n\n        // remember current li\n        const $previousLi = jQuery(node.element);\n\n        // create element\n        const li = this.createLi(node, node.getLevel());\n\n        // add element to dom\n        $previousLi.after(li);\n\n        // remove previous li\n        $previousLi.remove();\n\n        // create children\n        this.createDomElements(li, node.children, false, node.getLevel() + 1);\n    }\n\n    public renderFromRoot(): void {\n        this.$element.empty();\n\n        const tree = this.getTree();\n\n        if (this.$element[0] && tree) {\n            this.createDomElements(this.$element[0], tree.children, true, 1);\n        }\n    }\n}\n","import {\n    CloseNode,\n    GetSelectedNode,\n    IsFocusOnTree,\n    OpenNode,\n    SelectNode,\n} from \"./jqtreeMethodTypes\";\nimport { Node } from \"./node\";\n\ninterface KeyHandlerParams {\n    closeNode: CloseNode;\n    getSelectedNode: GetSelectedNode;\n    isFocusOnTree: IsFocusOnTree;\n    keyboardSupport: boolean;\n    openNode: OpenNode;\n    selectNode: SelectNode;\n}\n\nexport default class KeyHandler {\n    private closeNode: CloseNode;\n    private getSelectedNode: GetSelectedNode;\n\n    private handleKeyDown = (e: KeyboardEvent): void => {\n        if (!this.canHandleKeyboard()) {\n            return;\n        }\n\n        let isKeyHandled = false;\n\n        const selectedNode = this.getSelectedNode();\n        if (selectedNode) {\n            switch (e.key) {\n                case \"ArrowDown\":\n                    isKeyHandled = this.moveDown(selectedNode);\n                    break;\n\n                case \"ArrowLeft\":\n                    isKeyHandled = this.moveLeft(selectedNode);\n                    break;\n\n                case \"ArrowRight\":\n                    isKeyHandled = this.moveRight(selectedNode);\n                    break;\n\n                case \"ArrowUp\":\n                    isKeyHandled = this.moveUp(selectedNode);\n                    break;\n            }\n        }\n\n        if (isKeyHandled) {\n            e.preventDefault();\n        }\n    };\n\n    private isFocusOnTree: IsFocusOnTree;\n    private keyboardSupport: boolean;\n    private openNode: OpenNode;\n    private originalSelectNode: SelectNode;\n\n    constructor({\n        closeNode,\n        getSelectedNode,\n        isFocusOnTree,\n        keyboardSupport,\n        openNode,\n        selectNode,\n    }: KeyHandlerParams) {\n        this.closeNode = closeNode;\n        this.getSelectedNode = getSelectedNode;\n        this.isFocusOnTree = isFocusOnTree;\n        this.keyboardSupport = keyboardSupport;\n        this.openNode = openNode;\n        this.originalSelectNode = selectNode;\n\n        if (keyboardSupport) {\n            document.addEventListener(\"keydown\", this.handleKeyDown);\n        }\n    }\n\n    private canHandleKeyboard(): boolean {\n        return this.keyboardSupport && this.isFocusOnTree();\n    }\n\n    private moveLeft(selectedNode: Node): boolean {\n        if (selectedNode.isFolder() && selectedNode.is_open) {\n            // Left on an open node closes the node\n            this.closeNode(selectedNode);\n            return true;\n        } else {\n            // Left on a closed or end node moves focus to the node's parent\n            return this.selectNode(selectedNode.getParent());\n        }\n    }\n\n    private moveRight(selectedNode: Node): boolean {\n        if (!selectedNode.isFolder()) {\n            return false;\n        } else {\n            // folder node\n            if (selectedNode.is_open) {\n                // Right moves to the first child of an open node\n                return this.selectNode(selectedNode.getNextVisibleNode());\n            } else {\n                // Right expands a closed node\n                this.openNode(selectedNode);\n                return true;\n            }\n        }\n    }\n\n    /* Select the node.\n     * Don't do anything if the node is null.\n     * Result: a different node was selected.\n     */\n    private selectNode(node: Node | null): boolean {\n        if (!node) {\n            return false;\n        } else {\n            this.originalSelectNode(node);\n\n            return true;\n        }\n    }\n\n    public deinit(): void {\n        if (this.keyboardSupport) {\n            document.removeEventListener(\"keydown\", this.handleKeyDown);\n        }\n    }\n\n    public moveDown(selectedNode: Node): boolean {\n        return this.selectNode(selectedNode.getNextVisibleNode());\n    }\n\n    public moveUp(selectedNode: Node): boolean {\n        return this.selectNode(selectedNode.getPreviousVisibleNode());\n    }\n}\n","export interface PositionInfo {\n    originalEvent: Event;\n    pageX: number;\n    pageY: number;\n    target: HTMLElement;\n}\n\nexport const getPositionInfoFromMouseEvent = (e: MouseEvent): PositionInfo => ({\n    originalEvent: e,\n    pageX: e.pageX,\n    pageY: e.pageY,\n    target: e.target as HTMLElement,\n});\n\nexport const getPositionInfoFromTouch = (\n    touch: Touch,\n    e: TouchEvent,\n): PositionInfo => ({\n    originalEvent: e,\n    pageX: touch.pageX,\n    pageY: touch.pageY,\n    target: touch.target as HTMLElement,\n});\n","import { TriggerEvent } from \"./jqtreeMethodTypes\";\nimport {\n    getPositionInfoFromMouseEvent,\n    getPositionInfoFromTouch,\n    PositionInfo,\n} from \"./mouseUtils\";\nimport { Node } from \"./node\";\n\ninterface ClickTarget {\n    node: Node;\n    type: \"button\" | \"label\";\n}\n\ntype GetNode = (element: HTMLElement) => Node | null;\n\ninterface MouseHandlerParams {\n    element: HTMLElement;\n    getMouseDelay: () => number;\n    getNode: GetNode;\n    onClickButton: (node: Node) => void;\n    onClickTitle: (node: Node) => void;\n    onMouseCapture: (positionInfo: PositionInfo) => boolean | null;\n    onMouseDrag: (positionInfo: PositionInfo) => void;\n    onMouseStart: (positionInfo: PositionInfo) => boolean;\n    onMouseStop: (positionInfo: PositionInfo) => void;\n    triggerEvent: TriggerEvent;\n    useContextMenu: boolean;\n}\n\nclass MouseHandler {\n    private element: HTMLElement;\n    private getMouseDelay: () => number;\n    private getNode: GetNode;\n\n    private handleClick = (e: MouseEvent): void => {\n        if (!e.target) {\n            return;\n        }\n\n        const clickTarget = this.getClickTarget(e.target as HTMLElement);\n\n        if (!clickTarget) {\n            return;\n        }\n\n        switch (clickTarget.type) {\n            case \"button\":\n                this.onClickButton(clickTarget.node);\n\n                e.preventDefault();\n                e.stopPropagation();\n                break;\n\n            case \"label\": {\n                const event = this.triggerEvent(\"tree.click\", {\n                    click_event: e,\n                    node: clickTarget.node,\n                });\n\n                if (!event.isDefaultPrevented()) {\n                    this.onClickTitle(clickTarget.node);\n                }\n                break;\n            }\n        }\n    };\n\n    private handleContextmenu = (e: MouseEvent) => {\n        if (!e.target) {\n            return;\n        }\n\n        const div = (e.target as HTMLElement).closest<HTMLElement>(\n            \"ul.jqtree-tree .jqtree-element\",\n        );\n\n        if (div) {\n            const node = this.getNode(div);\n            if (node) {\n                e.preventDefault();\n                e.stopPropagation();\n\n                this.triggerEvent(\"tree.contextmenu\", {\n                    click_event: e,\n                    node,\n                });\n                return false;\n            }\n        }\n\n        return null;\n    };\n\n    private handleDblclick = (e: MouseEvent): void => {\n        if (!e.target) {\n            return;\n        }\n\n        const clickTarget = this.getClickTarget(e.target as HTMLElement);\n\n        if (clickTarget?.type === \"label\") {\n            this.triggerEvent(\"tree.dblclick\", {\n                click_event: e,\n                node: clickTarget.node,\n            });\n        }\n    };\n\n    private isMouseDelayMet: boolean;\n    private isMouseStarted: boolean;\n    private mouseDelayTimer: null | number;\n\n    private mouseDown = (e: MouseEvent): void => {\n        // Left mouse button?\n        if (e.button !== 0) {\n            return;\n        }\n\n        const result = this.handleMouseDown(getPositionInfoFromMouseEvent(e));\n\n        if (result && e.cancelable) {\n            e.preventDefault();\n        }\n    };\n\n    private mouseDownInfo: null | PositionInfo;\n\n    private mouseMove = (e: MouseEvent): void => {\n        this.handleMouseMove(e, getPositionInfoFromMouseEvent(e));\n    };\n\n    private mouseUp = (e: MouseEvent): void => {\n        this.handleMouseUp(getPositionInfoFromMouseEvent(e));\n    };\n\n    private onClickButton: (node: Node) => void;\n    private onClickTitle: (node: Node) => void;\n    private onMouseCapture: (positionInfo: PositionInfo) => boolean | null;\n    private onMouseDrag: (positionInfo: PositionInfo) => void;\n    private onMouseStart: (positionInfo: PositionInfo) => boolean;\n    private onMouseStop: (positionInfo: PositionInfo) => void;\n\n    private touchEnd = (e: TouchEvent): void => {\n        if (e.touches.length > 1) {\n            return;\n        }\n\n        const touch = e.touches[0];\n\n        if (!touch) {\n            return;\n        }\n\n        this.handleMouseUp(getPositionInfoFromTouch(touch, e));\n    };\n\n    private touchMove = (e: TouchEvent): void => {\n        if (e.touches.length > 1) {\n            return;\n        }\n\n        const touch = e.touches[0];\n\n        if (!touch) {\n            return;\n        }\n\n        this.handleMouseMove(e, getPositionInfoFromTouch(touch, e));\n    };\n\n    private touchStart = (e: TouchEvent): void => {\n        if (e.touches.length > 1) {\n            return;\n        }\n\n        const touch = e.touches[0];\n\n        if (!touch) {\n            return;\n        }\n\n        this.handleMouseDown(getPositionInfoFromTouch(touch, e));\n    };\n\n    private triggerEvent: TriggerEvent;\n    private useContextMenu: boolean;\n\n    constructor({\n        element,\n        getMouseDelay,\n        getNode,\n        onClickButton,\n        onClickTitle,\n        onMouseCapture,\n        onMouseDrag,\n        onMouseStart,\n        onMouseStop,\n        triggerEvent,\n        useContextMenu,\n    }: MouseHandlerParams) {\n        this.element = element;\n        this.getMouseDelay = getMouseDelay;\n        this.getNode = getNode;\n        this.onClickButton = onClickButton;\n        this.onClickTitle = onClickTitle;\n        this.onMouseCapture = onMouseCapture;\n        this.onMouseDrag = onMouseDrag;\n        this.onMouseStart = onMouseStart;\n        this.onMouseStop = onMouseStop;\n        this.triggerEvent = triggerEvent;\n        this.useContextMenu = useContextMenu;\n\n        element.addEventListener(\"click\", this.handleClick);\n        element.addEventListener(\"dblclick\", this.handleDblclick);\n        element.addEventListener(\"mousedown\", this.mouseDown, {\n            passive: false,\n        });\n        element.addEventListener(\"touchstart\", this.touchStart, {\n            passive: false,\n        });\n\n        if (useContextMenu) {\n            element.addEventListener(\"contextmenu\", this.handleContextmenu);\n        }\n\n        this.isMouseStarted = false;\n        this.mouseDelayTimer = null;\n        this.isMouseDelayMet = false;\n        this.mouseDownInfo = null;\n    }\n\n    private getClickTarget(element: HTMLElement): ClickTarget | null {\n        const button = element.closest<HTMLElement>(\".jqtree-toggler\");\n\n        if (button) {\n            const node = this.getNode(button);\n\n            if (node) {\n                return {\n                    node,\n                    type: \"button\",\n                };\n            }\n        } else {\n            const jqTreeElement =\n                element.closest<HTMLElement>(\".jqtree-element\");\n\n            if (jqTreeElement) {\n                const node = this.getNode(jqTreeElement);\n                if (node) {\n                    return {\n                        node,\n                        type: \"label\",\n                    };\n                }\n            }\n        }\n\n        return null;\n    }\n\n    private handleMouseDown(positionInfo: PositionInfo): boolean {\n        // We may have missed mouseup (out of window)\n        if (this.isMouseStarted) {\n            this.handleMouseUp(positionInfo);\n        }\n\n        this.mouseDownInfo = positionInfo;\n\n        if (!this.onMouseCapture(positionInfo)) {\n            return false;\n        }\n\n        this.handleStartMouse();\n\n        return true;\n    }\n\n    private handleMouseMove(\n        e: MouseEvent | TouchEvent,\n        positionInfo: PositionInfo,\n    ): void {\n        if (this.isMouseStarted) {\n            this.onMouseDrag(positionInfo);\n\n            if (e.cancelable) {\n                e.preventDefault();\n            }\n            return;\n        }\n\n        if (!this.isMouseDelayMet) {\n            return;\n        }\n\n        if (this.mouseDownInfo) {\n            this.isMouseStarted = this.onMouseStart(this.mouseDownInfo);\n        }\n\n        if (this.isMouseStarted) {\n            this.onMouseDrag(positionInfo);\n\n            if (e.cancelable) {\n                e.preventDefault();\n            }\n        } else {\n            this.handleMouseUp(positionInfo);\n        }\n    }\n\n    private handleMouseUp(positionInfo: PositionInfo): void {\n        this.removeMouseMoveEventListeners();\n        this.isMouseDelayMet = false;\n        this.mouseDownInfo = null;\n\n        if (this.isMouseStarted) {\n            this.isMouseStarted = false;\n            this.onMouseStop(positionInfo);\n        }\n    }\n\n    private handleStartMouse(): void {\n        document.addEventListener(\"mousemove\", this.mouseMove, {\n            passive: false,\n        });\n        document.addEventListener(\"touchmove\", this.touchMove, {\n            passive: false,\n        });\n        document.addEventListener(\"mouseup\", this.mouseUp, { passive: false });\n        document.addEventListener(\"touchend\", this.touchEnd, {\n            passive: false,\n        });\n\n        const mouseDelay = this.getMouseDelay();\n\n        if (mouseDelay) {\n            this.startMouseDelayTimer(mouseDelay);\n        } else {\n            this.isMouseDelayMet = true;\n        }\n    }\n\n    private removeMouseMoveEventListeners() {\n        document.removeEventListener(\"mousemove\", this.mouseMove);\n        document.removeEventListener(\"touchmove\", this.touchMove);\n        document.removeEventListener(\"mouseup\", this.mouseUp);\n        document.removeEventListener(\"touchend\", this.touchEnd);\n    }\n\n    private startMouseDelayTimer(mouseDelay: number): void {\n        if (this.mouseDelayTimer) {\n            clearTimeout(this.mouseDelayTimer);\n        }\n\n        this.mouseDelayTimer = window.setTimeout(() => {\n            if (this.mouseDownInfo) {\n                this.isMouseDelayMet = true;\n            }\n        }, mouseDelay);\n\n        this.isMouseDelayMet = false;\n    }\n\n    public deinit(): void {\n        this.element.removeEventListener(\"click\", this.handleClick);\n        this.element.removeEventListener(\"dblclick\", this.handleDblclick);\n\n        if (this.useContextMenu) {\n            this.element.removeEventListener(\n                \"contextmenu\",\n                this.handleContextmenu,\n            );\n        }\n\n        this.element.removeEventListener(\"mousedown\", this.mouseDown);\n        this.element.removeEventListener(\"touchstart\", this.touchStart);\n        this.removeMouseMoveEventListeners();\n    }\n}\n\nexport default MouseHandler;\n","interface NodeRecordWithChildren extends NodeRecord {\n    children: NodeData[];\n}\n\nexport const isNodeRecordWithChildren = (\n    data: NodeData,\n): data is NodeRecordWithChildren =>\n    typeof data === \"object\" &&\n    \"children\" in data &&\n    data.children instanceof Array;\n","import { isNodeRecordWithChildren } from \"./nodeUtils\";\nimport { Position } from \"./position\";\n\ntype IterateCallback = (node: Node, level: number) => boolean;\n\nexport class Node implements INode {\n    [key: string]: unknown;\n\n    public children: Node[];\n    public element?: HTMLElement;\n    public id?: NodeId;\n    public idMapping: Map<NodeId, Node>;\n    public is_loading: boolean;\n    public is_open: boolean;\n    public isEmptyFolder: boolean;\n    public load_on_demand: boolean;\n    public name: string;\n    public nodeClass?: typeof Node;\n    public parent: Node | null;\n    public tree?: Node;\n\n    constructor(\n        nodeData: NodeData | null = null,\n        isRoot = false,\n        nodeClass = Node,\n    ) {\n        this.name = \"\";\n        this.load_on_demand = false;\n\n        this.isEmptyFolder =\n            nodeData != null &&\n            isNodeRecordWithChildren(nodeData) &&\n            nodeData.children.length === 0;\n\n        this.setData(nodeData);\n\n        this.children = [];\n        this.parent = null;\n\n        if (isRoot) {\n            this.idMapping = new Map<NodeId, Node>();\n            this.tree = this;\n            this.nodeClass = nodeClass;\n        }\n    }\n\n    private createNode(nodeData?: NodeData): Node {\n        const nodeClass = this.getNodeClass();\n        return new nodeClass(nodeData);\n    }\n\n    private doRemoveChild(node: Node): void {\n        this.children.splice(this.getChildIndex(node), 1);\n        this.tree?.removeNodeFromIndex(node);\n    }\n\n    private getNodeClass(): typeof Node {\n        return this.nodeClass ?? this.tree?.nodeClass ?? Node;\n    }\n\n    // Load children data from nodeInfo if it has children\n    private loadChildrenFromData(nodeInfo: NodeData) {\n        if (isNodeRecordWithChildren(nodeInfo) && nodeInfo.children.length) {\n            this.loadFromData(nodeInfo.children);\n        }\n    }\n\n    private setParent(parent: Node): void {\n        this.parent = parent;\n        this.tree = parent.tree;\n        this.tree?.addNodeToIndex(this);\n    }\n\n    public addAfter(nodeInfo: NodeData): Node | null {\n        if (!this.parent) {\n            return null;\n        } else {\n            const node = this.createNode(nodeInfo);\n\n            const childIndex = this.parent.getChildIndex(this);\n            this.parent.addChildAtPosition(node, childIndex + 1);\n\n            node.loadChildrenFromData(nodeInfo);\n            return node;\n        }\n    }\n\n    public addBefore(nodeInfo: NodeData): Node | null {\n        if (!this.parent) {\n            return null;\n        } else {\n            const node = this.createNode(nodeInfo);\n\n            const childIndex = this.parent.getChildIndex(this);\n            this.parent.addChildAtPosition(node, childIndex);\n\n            node.loadChildrenFromData(nodeInfo);\n            return node;\n        }\n    }\n\n    /*\n    Add child.\n\n    tree.addChild(\n        new Node('child1')\n    );\n    */\n    public addChild(node: Node): void {\n        this.children.push(node);\n        node.setParent(this);\n    }\n\n    /*\n    Add child at position. Index starts at 0.\n\n    tree.addChildAtPosition(\n        new Node('abc'),\n        1\n    );\n    */\n    public addChildAtPosition(node: Node, index: number): void {\n        this.children.splice(index, 0, node);\n        node.setParent(this);\n    }\n\n    public addNodeToIndex(node: Node): void {\n        if (node.id != null) {\n            this.idMapping.set(node.id, node);\n        }\n    }\n\n    public addParent(nodeInfo: NodeData): Node | null {\n        if (!this.parent) {\n            return null;\n        } else {\n            const newParent = this.createNode(nodeInfo);\n\n            if (this.tree) {\n                newParent.setParent(this.tree);\n            }\n            const originalParent = this.parent;\n\n            for (const child of originalParent.children) {\n                newParent.addChild(child);\n            }\n\n            originalParent.children = [];\n            originalParent.addChild(newParent);\n            return newParent;\n        }\n    }\n\n    public append(nodeInfo: NodeData): Node {\n        const node = this.createNode(nodeInfo);\n        this.addChild(node);\n\n        node.loadChildrenFromData(nodeInfo);\n        return node;\n    }\n\n    public filter(f: (node: Node) => boolean): Node[] {\n        const result: Node[] = [];\n\n        this.iterate((node: Node) => {\n            if (f(node)) {\n                result.push(node);\n            }\n\n            return true;\n        });\n\n        return result;\n    }\n\n    /*\n    Get child index.\n\n    var index = getChildIndex(node);\n    */\n    public getChildIndex(node: Node): number {\n        return this.children.indexOf(node);\n    }\n\n    /*\n    Get the tree as data.\n    */\n    public getData(includeParent = false): NodeRecord[] {\n        const getDataFromNodes = (nodes: Node[]): Record<string, unknown>[] => {\n            return nodes.map((node) => {\n                const tmpNode: Record<string, unknown> = {};\n\n                for (const k in node) {\n                    if (\n                        [\n                            \"parent\",\n                            \"children\",\n                            \"element\",\n                            \"idMapping\",\n                            \"load_on_demand\",\n                            \"nodeClass\",\n                            \"tree\",\n                            \"isEmptyFolder\",\n                        ].indexOf(k) === -1 &&\n                        Object.prototype.hasOwnProperty.call(node, k)\n                    ) {\n                        const v = node[k];\n                        tmpNode[k] = v;\n                    }\n                }\n\n                if (node.hasChildren()) {\n                    tmpNode.children = getDataFromNodes(node.children);\n                }\n\n                return tmpNode;\n            });\n        };\n\n        if (includeParent) {\n            return getDataFromNodes([this]);\n        } else {\n            return getDataFromNodes(this.children);\n        }\n    }\n\n    public getLastChild(): Node | null {\n        if (!this.hasChildren()) {\n            return null;\n        } else {\n            const lastChild = this.children[this.children.length - 1];\n\n            if (!lastChild) {\n                return null;\n            }\n\n            if (!(lastChild.hasChildren() && lastChild.is_open)) {\n                return lastChild;\n            } else {\n                return lastChild.getLastChild();\n            }\n        }\n    }\n\n    public getLevel(): number {\n        let level = 0;\n        let node: Node = this; // eslint-disable-line @typescript-eslint/no-this-alias\n\n        while (node.parent) {\n            level += 1;\n            node = node.parent;\n        }\n\n        return level;\n    }\n\n    public getNextNode(includeChildren = true): Node | null {\n        if (includeChildren && this.hasChildren()) {\n            return this.children[0] ?? null;\n        } else if (!this.parent) {\n            return null;\n        } else {\n            const nextSibling = this.getNextSibling();\n\n            if (nextSibling) {\n                return nextSibling;\n            } else {\n                return this.parent.getNextNode(false);\n            }\n        }\n    }\n\n    public getNextSibling(): Node | null {\n        if (!this.parent) {\n            return null;\n        } else {\n            const nextIndex = this.parent.getChildIndex(this) + 1;\n            if (nextIndex < this.parent.children.length) {\n                return this.parent.children[nextIndex] ?? null;\n            } else {\n                return null;\n            }\n        }\n    }\n\n    public getNextVisibleNode(): Node | null {\n        if (this.hasChildren() && this.is_open) {\n            // First child\n            return this.children[0] ?? null;\n        } else {\n            if (!this.parent) {\n                return null;\n            } else {\n                const nextSibling = this.getNextSibling();\n                if (nextSibling) {\n                    // Next sibling\n                    return nextSibling;\n                } else {\n                    // Next node of parent\n                    return this.parent.getNextNode(false);\n                }\n            }\n        }\n    }\n\n    public getNodeByCallback(callback: (node: Node) => boolean): Node | null {\n        let result: Node | null = null;\n\n        this.iterate((node: Node) => {\n            if (result) {\n                return false;\n            } else if (callback(node)) {\n                result = node;\n                return false;\n            } else {\n                return true;\n            }\n        });\n\n        return result;\n    }\n\n    public getNodeById(nodeId: NodeId): Node | null {\n        return this.idMapping.get(nodeId) ?? null;\n    }\n\n    public getNodeByName(name: string): Node | null {\n        return this.getNodeByCallback((node: Node) => node.name === name);\n    }\n\n    public getNodeByNameMustExist(name: string): Node {\n        const node = this.getNodeByCallback((n: Node) => n.name === name);\n\n        if (!node) {\n            throw new Error(`Node with name ${name} not found`);\n        }\n\n        return node;\n    }\n\n    public getNodesByProperty(key: string, value: unknown): Node[] {\n        return this.filter((node: Node) => node[key] === value);\n    }\n\n    public getParent(): Node | null {\n        // Return parent except if it is the root node\n        if (!this.parent) {\n            return null;\n        } else if (!this.parent.parent) {\n            // Root node -> null\n            return null;\n        } else {\n            return this.parent;\n        }\n    }\n\n    public getPreviousNode(): Node | null {\n        if (!this.parent) {\n            return null;\n        } else {\n            const previousSibling = this.getPreviousSibling();\n\n            if (!previousSibling) {\n                return this.getParent();\n            } else if (previousSibling.hasChildren()) {\n                return previousSibling.getLastChild();\n            } else {\n                return previousSibling;\n            }\n        }\n    }\n\n    public getPreviousSibling(): Node | null {\n        if (!this.parent) {\n            return null;\n        } else {\n            const previousIndex = this.parent.getChildIndex(this) - 1;\n            if (previousIndex >= 0) {\n                return this.parent.children[previousIndex] ?? null;\n            } else {\n                return null;\n            }\n        }\n    }\n\n    public getPreviousVisibleNode(): Node | null {\n        if (!this.parent) {\n            return null;\n        } else {\n            const previousSibling = this.getPreviousSibling();\n\n            if (!previousSibling) {\n                return this.getParent();\n            } else if (\n                !previousSibling.hasChildren() ||\n                !previousSibling.is_open\n            ) {\n                // Previous sibling\n                return previousSibling;\n            } else {\n                // Last child of previous sibling\n                return previousSibling.getLastChild();\n            }\n        }\n    }\n\n    /*\n    Does the tree have children?\n\n    if (tree.hasChildren()) {\n        //\n    }\n    */\n    public hasChildren(): boolean {\n        return this.children.length !== 0;\n    }\n\n    // Init Node from data without making it the root of the tree\n    public initFromData(data: NodeData): void {\n        const addNode = (nodeData: NodeData): void => {\n            this.setData(nodeData);\n\n            if (\n                isNodeRecordWithChildren(nodeData) &&\n                nodeData.children.length\n            ) {\n                addChildren(nodeData.children);\n            }\n        };\n\n        const addChildren = (childrenData: NodeData[]): void => {\n            for (const child of childrenData) {\n                const node = this.createNode();\n                node.initFromData(child);\n                this.addChild(node);\n            }\n        };\n\n        addNode(data);\n    }\n\n    public isFolder(): boolean {\n        return this.hasChildren() || this.load_on_demand;\n    }\n\n    public isParentOf(node: Node): boolean {\n        let parent = node.parent;\n\n        while (parent) {\n            if (parent === this) {\n                return true;\n            }\n\n            parent = parent.parent;\n        }\n\n        return false;\n    }\n\n    /*\n    Iterate over all the nodes in the tree.\n\n    Calls callback with (node, level).\n\n    The callback must return true to continue the iteration on current node.\n\n    tree.iterate(\n        function(node, level) {\n           console.log(node.name);\n\n           // stop iteration after level 2\n           return (level <= 2);\n        }\n    );\n\n    */\n    public iterate(callback: IterateCallback): void {\n        const _iterate = (node: Node, level: number): void => {\n            for (const child of node.children) {\n                const result = callback(child, level);\n\n                if (result && child.hasChildren()) {\n                    _iterate(child, level + 1);\n                }\n            }\n        };\n\n        _iterate(this, 0);\n    }\n\n    /*\n    Create tree from data.\n\n    Structure of data is:\n    [\n        {\n            name: 'node1',\n            children: [\n                { name: 'child1' },\n                { name: 'child2' }\n            ]\n        },\n        {\n            name: 'node2'\n        }\n    ]\n    */\n    public loadFromData(data: NodeData[]): this {\n        this.removeChildren();\n\n        for (const childData of data) {\n            const node = this.createNode(childData);\n            this.addChild(node);\n\n            if (isNodeRecordWithChildren(childData)) {\n                node.loadFromData(childData.children);\n            }\n        }\n\n        return this;\n    }\n\n    /*\n    Move node relative to another node.\n\n    Argument position: Position.BEFORE, Position.AFTER or Position.Inside\n\n    // move node1 after node2\n    tree.moveNode(node1, node2, Position.AFTER);\n    */\n    public moveNode(\n        movedNode: Node,\n        targetNode: Node,\n        position: Position,\n    ): boolean {\n        if (!movedNode.parent || movedNode.isParentOf(targetNode)) {\n            // - Node is parent of target node\n            // - Or, parent is empty\n            return false;\n        } else {\n            movedNode.parent.doRemoveChild(movedNode);\n\n            switch (position) {\n                case Position.After: {\n                    if (targetNode.parent) {\n                        targetNode.parent.addChildAtPosition(\n                            movedNode,\n                            targetNode.parent.getChildIndex(targetNode) + 1,\n                        );\n                        return true;\n                    }\n                    return false;\n                }\n\n                case Position.Before: {\n                    if (targetNode.parent) {\n                        targetNode.parent.addChildAtPosition(\n                            movedNode,\n                            targetNode.parent.getChildIndex(targetNode),\n                        );\n                        return true;\n                    }\n                    return false;\n                }\n\n                case Position.Inside: {\n                    // move inside as first child\n                    targetNode.addChildAtPosition(movedNode, 0);\n                    return true;\n                }\n\n                default:\n                    return false;\n            }\n        }\n    }\n\n    public prepend(nodeInfo: NodeData): Node {\n        const node = this.createNode(nodeInfo);\n        this.addChildAtPosition(node, 0);\n\n        node.loadChildrenFromData(nodeInfo);\n        return node;\n    }\n\n    public remove(): void {\n        if (this.parent) {\n            this.parent.removeChild(this);\n            this.parent = null;\n        }\n    }\n\n    /*\n    Remove child. This also removes the children of the node.\n\n    tree.removeChild(tree.children[0]);\n    */\n    public removeChild(node: Node): void {\n        // remove children from the index\n        node.removeChildren();\n\n        this.doRemoveChild(node);\n    }\n\n    public removeChildren(): void {\n        this.iterate((child: Node) => {\n            this.tree?.removeNodeFromIndex(child);\n            return true;\n        });\n\n        this.children = [];\n    }\n\n    public removeNodeFromIndex(node: Node): void {\n        if (node.id != null) {\n            this.idMapping.delete(node.id);\n        }\n    }\n\n    /*\n    Set the data of this node.\n\n    setData(string): set the name of the node\n    setData(object): set attributes of the node\n\n    Examples:\n        setData('node1')\n\n        setData({ name: 'node1', id: 1});\n\n        setData({ name: 'node2', id: 2, color: 'green'});\n\n    * This is an internal function; it is not in the docs\n    * Does not remove existing node values\n    */\n    public setData(o: NodeData | null): void {\n        if (!o) {\n            return;\n        } else if (typeof o === \"string\") {\n            this.name = o;\n        } else if (typeof o === \"object\") {\n            for (const key in o) {\n                if (Object.prototype.hasOwnProperty.call(o, key)) {\n                    const value = o[key];\n\n                    if (key === \"label\" || key === \"name\") {\n                        // You can use the 'label' key instead of 'name'; this is a legacy feature\n                        if (typeof value === \"string\") {\n                            this.name = value;\n                        }\n                    } else if (key !== \"children\" && key !== \"parent\") {\n                        // You can't update the children or the parent using this function\n                        this[key] = value;\n                    }\n                }\n            }\n        }\n    }\n}\n","import { DropHint } from \"../dragAndDropHandler/types\";\n\nclass BorderDropHint implements DropHint {\n    private hint?: HTMLElement;\n\n    constructor(element: HTMLElement, scrollLeft: number) {\n        const div = element.querySelector(\":scope > .jqtree-element\");\n\n        if (!div) {\n            this.hint = undefined;\n            return;\n        }\n\n        const width = Math.max(element.offsetWidth + scrollLeft - 4, 0);\n        const height = Math.max(element.clientHeight - 4, 0);\n\n        const hint = document.createElement(\"span\");\n        hint.className = \"jqtree-border\";\n        hint.style.width = `${width}px`;\n        hint.style.height = `${height}px`;\n\n        this.hint = hint;\n\n        div.append(this.hint);\n    }\n\n    public remove(): void {\n        this.hint?.remove();\n    }\n}\n\nexport default BorderDropHint;\n","import { DropHint } from \"../dragAndDropHandler/types\";\nimport { Node } from \"../node\";\nimport { Position } from \"../position\";\n\nclass GhostDropHint implements DropHint {\n    private element: HTMLElement;\n    private ghost: HTMLElement;\n    private node: Node;\n\n    constructor(node: Node, element: HTMLElement, position: Position) {\n        this.element = element;\n        this.node = node;\n        this.ghost = this.createGhostElement();\n\n        switch (position) {\n            case Position.After:\n                this.moveAfter();\n                break;\n\n            case Position.Before:\n                this.moveBefore();\n                break;\n\n            case Position.Inside: {\n                if (node.isFolder() && node.is_open) {\n                    this.moveInsideOpenFolder();\n                } else {\n                    this.moveInside();\n                }\n            }\n        }\n    }\n\n    private createGhostElement() {\n        const ghost = document.createElement(\"li\");\n        ghost.className = \"jqtree_common jqtree-ghost\";\n\n        const circleSpan = document.createElement(\"span\");\n        circleSpan.className = \"jqtree_common jqtree-circle\";\n        ghost.append(circleSpan);\n\n        const lineSpan = document.createElement(\"span\");\n        lineSpan.className = \"jqtree_common jqtree-line\";\n        ghost.append(lineSpan);\n\n        return ghost;\n    }\n\n    private moveAfter(): void {\n        this.element.after(this.ghost);\n    }\n\n    private moveBefore(): void {\n        this.element.before(this.ghost);\n    }\n\n    private moveInside(): void {\n        this.element.after(this.ghost);\n        this.ghost.classList.add(\"jqtree-inside\");\n    }\n\n    private moveInsideOpenFolder(): void {\n        const childElement = this.node.children[0]?.element;\n\n        if (childElement) {\n            childElement.before(this.ghost);\n        }\n    }\n\n    public remove(): void {\n        this.ghost.remove();\n    }\n}\n\nexport default GhostDropHint;\n","import { DropHint } from \"../dragAndDropHandler/types\";\nimport { GetScrollLeft } from \"../jqtreeMethodTypes\";\nimport { Node } from \"../node\";\nimport { Position } from \"../position\";\nimport BorderDropHint from \"./borderDropHint\";\nimport GhostDropHint from \"./ghostDropHint\";\n\nexport interface NodeElementParams {\n    getScrollLeft: GetScrollLeft;\n    node: Node;\n    tabIndex?: number;\n    treeElement: HTMLElement;\n}\n\nclass NodeElement {\n    private getScrollLeft: GetScrollLeft;\n    private tabIndex?: number;\n    private treeElement: HTMLElement;\n    public element: HTMLElement;\n    public node: Node;\n\n    constructor({\n        getScrollLeft,\n        node,\n        tabIndex,\n        treeElement,\n    }: NodeElementParams) {\n        this.getScrollLeft = getScrollLeft;\n        this.tabIndex = tabIndex;\n        this.treeElement = treeElement;\n\n        this.init(node);\n    }\n\n    protected getTitleSpan(): HTMLSpanElement {\n        return this.element.querySelector(\n            \":scope > .jqtree-element > span.jqtree-title\",\n        ) as HTMLSpanElement;\n    }\n\n    protected getUl(): HTMLUListElement {\n        return this.element.querySelector(\":scope > ul\") as HTMLUListElement;\n    }\n\n    protected mustShowBorderDropHint(position: Position): boolean {\n        return position === Position.Inside;\n    }\n\n    public addDropHint(position: number): DropHint {\n        if (this.mustShowBorderDropHint(position)) {\n            return new BorderDropHint(this.element, this.getScrollLeft());\n        } else {\n            return new GhostDropHint(this.node, this.element, position);\n        }\n    }\n\n    public deselect(): void {\n        this.element.classList.remove(\"jqtree-selected\");\n\n        const titleSpan = this.getTitleSpan();\n        titleSpan.removeAttribute(\"tabindex\");\n        titleSpan.setAttribute(\"aria-selected\", \"false\");\n\n        titleSpan.blur();\n    }\n\n    public init(node: Node): void {\n        this.node = node;\n\n        if (!node.element) {\n            node.element = this.treeElement;\n        }\n\n        this.element = node.element;\n    }\n\n    public select(mustSetFocus: boolean): void {\n        this.element.classList.add(\"jqtree-selected\");\n\n        const titleSpan = this.getTitleSpan();\n        const tabIndex = this.tabIndex;\n\n        // Check for null or undefined\n        if (tabIndex != null) {\n            titleSpan.setAttribute(\"tabindex\", tabIndex.toString());\n        }\n\n        titleSpan.setAttribute(\"aria-selected\", \"true\");\n\n        if (mustSetFocus) {\n            titleSpan.focus();\n        }\n    }\n}\n\nexport default NodeElement;\n","import { OnFinishOpenNode, TriggerEvent } from \"../jqtreeMethodTypes\";\nimport { Position } from \"../position\";\nimport NodeElement, { NodeElementParams } from \"./index\";\n\ninterface FolderElementParams extends NodeElementParams {\n    closedIconElement?: HTMLElement | Text;\n    openedIconElement?: HTMLElement | Text;\n    triggerEvent: TriggerEvent;\n}\n\nclass FolderElement extends NodeElement {\n    private closedIconElement?: HTMLElement | Text;\n    private openedIconElement?: HTMLElement | Text;\n    private triggerEvent: TriggerEvent;\n\n    constructor({\n        closedIconElement,\n        getScrollLeft,\n        node,\n        openedIconElement,\n        tabIndex,\n        treeElement,\n        triggerEvent,\n    }: FolderElementParams) {\n        super({\n            getScrollLeft,\n            node,\n            tabIndex,\n            treeElement,\n        });\n\n        this.closedIconElement = closedIconElement;\n        this.openedIconElement = openedIconElement;\n        this.triggerEvent = triggerEvent;\n    }\n\n    protected mustShowBorderDropHint(position: Position): boolean {\n        return !this.node.is_open && position === Position.Inside;\n    }\n\n    private getButton(): HTMLLinkElement {\n        return this.element.querySelector(\n            \":scope > .jqtree-element > a.jqtree-toggler\",\n        ) as HTMLLinkElement;\n    }\n\n    public close(slide: boolean, animationSpeed: JQuery.Duration): void {\n        if (!this.node.is_open) {\n            return;\n        }\n\n        this.node.is_open = false;\n\n        const button = this.getButton();\n        button.classList.add(\"jqtree-closed\");\n        button.innerHTML = \"\";\n\n        const closedIconElement = this.closedIconElement;\n\n        if (closedIconElement) {\n            const icon = closedIconElement.cloneNode(true);\n            button.appendChild(icon);\n        }\n\n        const doClose = (): void => {\n            this.element.classList.add(\"jqtree-closed\");\n\n            const titleSpan = this.getTitleSpan();\n            titleSpan.setAttribute(\"aria-expanded\", \"false\");\n\n            this.triggerEvent(\"tree.close\", {\n                node: this.node,\n            });\n        };\n\n        if (slide) {\n            jQuery(this.getUl()).slideUp(animationSpeed, doClose);\n        } else {\n            jQuery(this.getUl()).hide();\n            doClose();\n        }\n    }\n\n    public open(\n        onFinished: OnFinishOpenNode | undefined,\n        slide: boolean,\n        animationSpeed: JQuery.Duration,\n    ): void {\n        if (this.node.is_open) {\n            return;\n        }\n\n        this.node.is_open = true;\n\n        const button = this.getButton();\n        button.classList.remove(\"jqtree-closed\");\n        button.innerHTML = \"\";\n\n        const openedIconElement = this.openedIconElement;\n\n        if (openedIconElement) {\n            const icon = openedIconElement.cloneNode(true);\n            button.appendChild(icon);\n        }\n\n        const doOpen = (): void => {\n            this.element.classList.remove(\"jqtree-closed\");\n\n            const titleSpan = this.getTitleSpan();\n            titleSpan.setAttribute(\"aria-expanded\", \"true\");\n\n            if (onFinished) {\n                onFinished(this.node);\n            }\n\n            this.triggerEvent(\"tree.open\", {\n                node: this.node,\n            });\n        };\n\n        if (slide) {\n            jQuery(this.getUl()).slideDown(animationSpeed, doOpen);\n        } else {\n            jQuery(this.getUl()).show();\n            doOpen();\n        }\n    }\n}\n\nexport default FolderElement;\n","import {\n    AddToSelection,\n    GetNodeById,\n    GetSelectedNodes,\n    GetTree,\n    OpenNode,\n    RefreshElements,\n    RemoveFromSelection,\n} from \"./jqtreeMethodTypes\";\nimport { OnGetStateFromStorage, OnSetStateFromStorage } from \"./jqtreeOptions\";\nimport { Node } from \"./node\";\nimport { isInt } from \"./util\";\n\nexport interface SavedState {\n    open_nodes?: NodeId[];\n    selected_node?: NodeId[];\n}\n\ninterface SaveStateHandlerParams {\n    addToSelection: AddToSelection;\n    getNodeById: GetNodeById;\n    getSelectedNodes: GetSelectedNodes;\n    getTree: GetTree;\n    onGetStateFromStorage?: OnGetStateFromStorage;\n    onSetStateFromStorage?: OnSetStateFromStorage;\n    openNode: OpenNode;\n    refreshElements: RefreshElements;\n    removeFromSelection: RemoveFromSelection;\n    saveState: boolean | string;\n}\n\nexport default class SaveStateHandler {\n    private addToSelection: AddToSelection;\n    private getNodeById: GetNodeById;\n    private getSelectedNodes: GetSelectedNodes;\n    private getTree: GetTree;\n    private onGetStateFromStorage?: OnGetStateFromStorage;\n    private onSetStateFromStorage?: OnSetStateFromStorage;\n    private openNode: OpenNode;\n    private refreshElements: RefreshElements;\n    private removeFromSelection: RemoveFromSelection;\n    private saveStateOption: boolean | string;\n\n    constructor({\n        addToSelection,\n        getNodeById,\n        getSelectedNodes,\n        getTree,\n        onGetStateFromStorage,\n        onSetStateFromStorage,\n        openNode,\n        refreshElements,\n        removeFromSelection,\n        saveState,\n    }: SaveStateHandlerParams) {\n        this.addToSelection = addToSelection;\n        this.getNodeById = getNodeById;\n        this.getSelectedNodes = getSelectedNodes;\n        this.getTree = getTree;\n        this.onGetStateFromStorage = onGetStateFromStorage;\n        this.onSetStateFromStorage = onSetStateFromStorage;\n        this.openNode = openNode;\n        this.refreshElements = refreshElements;\n        this.removeFromSelection = removeFromSelection;\n        this.saveStateOption = saveState;\n    }\n\n    private getKeyName(): string {\n        if (typeof this.saveStateOption === \"string\") {\n            return this.saveStateOption;\n        } else {\n            return \"tree\";\n        }\n    }\n\n    private loadFromStorage(): null | string {\n        if (this.onGetStateFromStorage) {\n            return this.onGetStateFromStorage();\n        } else {\n            return localStorage.getItem(this.getKeyName());\n        }\n    }\n\n    private openInitialNodes(nodeIds: NodeId[]): boolean {\n        let mustLoadOnDemand = false;\n\n        for (const nodeId of nodeIds) {\n            const node = this.getNodeById(nodeId);\n\n            if (node) {\n                if (!node.load_on_demand) {\n                    node.is_open = true;\n                } else {\n                    mustLoadOnDemand = true;\n                }\n            }\n        }\n\n        return mustLoadOnDemand;\n    }\n\n    private parseState(jsonData: string): SavedState {\n        const state = JSON.parse(jsonData) as Record<string, unknown>;\n\n        // Check if selected_node is an int (instead of an array)\n        if (state.selected_node && isInt(state.selected_node)) {\n            // Convert to array\n            state.selected_node = [state.selected_node];\n        }\n\n        return state as unknown as SavedState;\n    }\n\n    private resetSelection(): void {\n        const selectedNodes = this.getSelectedNodes();\n\n        selectedNodes.forEach((node) => {\n            this.removeFromSelection(node);\n        });\n    }\n\n    private selectInitialNodes(nodeIds: NodeId[]): boolean {\n        let selectCount = 0;\n\n        for (const nodeId of nodeIds) {\n            const node = this.getNodeById(nodeId);\n\n            if (node) {\n                selectCount += 1;\n\n                this.addToSelection(node);\n            }\n        }\n\n        return selectCount !== 0;\n    }\n\n    public getNodeIdToBeSelected(): NodeId | null {\n        const state = this.getStateFromStorage();\n\n        if (state?.selected_node) {\n            return state.selected_node[0] ?? null;\n        } else {\n            return null;\n        }\n    }\n\n    public getState(): SavedState {\n        const getOpenNodeIds = (): NodeId[] => {\n            const openNodes: NodeId[] = [];\n\n            this.getTree()?.iterate((node: Node) => {\n                if (node.is_open && node.id && node.hasChildren()) {\n                    openNodes.push(node.id);\n                }\n                return true;\n            });\n\n            return openNodes;\n        };\n\n        const getSelectedNodeIds = (): NodeId[] => {\n            const selectedNodeIds: NodeId[] = [];\n\n            this.getSelectedNodes().forEach((node) => {\n                if (node.id != null) {\n                    selectedNodeIds.push(node.id);\n                }\n            });\n\n            return selectedNodeIds;\n        };\n\n        return {\n            open_nodes: getOpenNodeIds(),\n            selected_node: getSelectedNodeIds(),\n        };\n    }\n\n    public getStateFromStorage(): null | SavedState {\n        const jsonData = this.loadFromStorage();\n\n        if (jsonData) {\n            return this.parseState(jsonData) as unknown as SavedState;\n        } else {\n            return null;\n        }\n    }\n\n    public saveState(): void {\n        const state = JSON.stringify(this.getState());\n\n        if (this.onSetStateFromStorage) {\n            this.onSetStateFromStorage(state);\n        } else {\n            localStorage.setItem(this.getKeyName(), state);\n        }\n    }\n\n    /*\n    Set initial state\n    Don't handle nodes that are loaded on demand\n\n    result: must load on demand (boolean)\n    */\n    public setInitialState(state: SavedState): boolean {\n        let mustLoadOnDemand = false;\n\n        if (state.open_nodes) {\n            mustLoadOnDemand = this.openInitialNodes(state.open_nodes);\n        }\n\n        this.resetSelection();\n\n        if (state.selected_node) {\n            this.selectInitialNodes(state.selected_node);\n        }\n\n        return mustLoadOnDemand;\n    }\n\n    public setInitialStateOnDemand(\n        state: SavedState,\n        cbFinished: () => void,\n    ): void {\n        let loadingCount = 0;\n        let nodeIds = state.open_nodes;\n\n        const openNodes = (): void => {\n            if (!nodeIds) {\n                return;\n            }\n\n            const newNodesIds = [];\n\n            for (const nodeId of nodeIds) {\n                const node = this.getNodeById(nodeId);\n\n                if (!node) {\n                    newNodesIds.push(nodeId);\n                } else {\n                    if (!node.is_loading) {\n                        if (node.load_on_demand) {\n                            loadAndOpenNode(node);\n                        } else {\n                            this.openNode(node, false);\n                        }\n                    }\n                }\n            }\n\n            nodeIds = newNodesIds;\n\n            if (state.selected_node) {\n                if (this.selectInitialNodes(state.selected_node)) {\n                    this.refreshElements(null);\n                }\n            }\n\n            if (loadingCount === 0) {\n                cbFinished();\n            }\n        };\n\n        const loadAndOpenNode = (node: Node): void => {\n            loadingCount += 1;\n            this.openNode(node, false, () => {\n                loadingCount -= 1;\n                openNodes();\n            });\n        };\n\n        openNodes();\n    }\n}\n","import type { ScrollParent } from \"./types\";\n\nimport { getElementPosition, getOffsetTop } from '../util'\n\ntype HorizontalScrollDirection = \"left\" | \"right\";\ntype VerticalScrollDirection = \"bottom\" | \"top\";\n\ninterface Params {\n    container: HTMLElement;\n    refreshHitAreas: () => void;\n}\n\nexport default class ContainerScrollParent implements ScrollParent {\n    private container: HTMLElement;\n    private horizontalScrollDirection?: HorizontalScrollDirection;\n    private horizontalScrollTimeout?: number;\n    private refreshHitAreas: () => void;\n    private scrollParentBottom?: number;\n    private scrollParentTop?: number;\n    private verticalScrollDirection?: VerticalScrollDirection;\n    private verticalScrollTimeout?: number;\n\n    constructor({ container, refreshHitAreas }: Params) {\n        this.container = container;\n        this.refreshHitAreas = refreshHitAreas;\n    }\n\n    private getNewHorizontalScrollDirection(\n        pageX: number,\n    ): HorizontalScrollDirection | undefined {\n        const scrollParentOffset = getElementPosition(this.container);\n\n        const rightEdge = scrollParentOffset.left + this.container.clientWidth;\n        const leftEdge = scrollParentOffset.left;\n        const isNearRightEdge = pageX > rightEdge - 20;\n        const isNearLeftEdge = pageX < leftEdge + 20;\n\n        if (isNearRightEdge) {\n            return \"right\";\n        } else if (isNearLeftEdge) {\n            return \"left\";\n        }\n\n        return undefined;\n    }\n\n    private getNewVerticalScrollDirection(\n        pageY: number,\n    ): undefined | VerticalScrollDirection {\n        if (pageY < this.getScrollParentTop()) {\n            return \"top\";\n        }\n\n        if (pageY > this.getScrollParentBottom()) {\n            return \"bottom\";\n        }\n\n        return undefined;\n    }\n\n    private getScrollParentBottom() {\n        if (this.scrollParentBottom == null) {\n            this.scrollParentBottom = this.getScrollParentTop() + this.container.clientHeight;\n        }\n\n        return this.scrollParentBottom;\n    }\n\n    private getScrollParentTop() {\n        if (this.scrollParentTop == null) {\n            this.scrollParentTop = getOffsetTop(this.container)\n        }\n\n        return this.scrollParentTop;\n    }\n\n    private scrollHorizontally() {\n        if (!this.horizontalScrollDirection) {\n            return;\n        }\n\n        const distance = this.horizontalScrollDirection === \"left\" ? -20 : 20;\n\n        this.container.scrollBy({\n            behavior: \"instant\",\n            left: distance,\n            top: 0,\n        });\n\n        this.refreshHitAreas();\n\n        setTimeout(this.scrollHorizontally.bind(this), 40);\n    }\n\n    private scrollVertically() {\n        if (!this.verticalScrollDirection) {\n            return;\n        }\n\n        const distance = this.verticalScrollDirection === \"top\" ? -20 : 20;\n\n        this.container.scrollBy({\n            behavior: \"instant\",\n            left: 0,\n            top: distance,\n        });\n\n        this.refreshHitAreas();\n\n        setTimeout(this.scrollVertically.bind(this), 40);\n    }\n\n    public checkHorizontalScrolling(pageX: number): void {\n        const newHorizontalScrollDirection =\n            this.getNewHorizontalScrollDirection(pageX);\n\n        if (this.horizontalScrollDirection !== newHorizontalScrollDirection) {\n            this.horizontalScrollDirection = newHorizontalScrollDirection;\n\n            if (this.horizontalScrollTimeout != null) {\n                window.clearTimeout(this.verticalScrollTimeout);\n            }\n\n            if (newHorizontalScrollDirection) {\n                this.horizontalScrollTimeout = window.setTimeout(\n                    this.scrollHorizontally.bind(this),\n                    40,\n                );\n            }\n        }\n    }\n\n    public checkVerticalScrolling(pageY: number) {\n        const newVerticalScrollDirection =\n            this.getNewVerticalScrollDirection(pageY);\n\n        if (this.verticalScrollDirection !== newVerticalScrollDirection) {\n            this.verticalScrollDirection = newVerticalScrollDirection;\n\n            if (this.verticalScrollTimeout != null) {\n                window.clearTimeout(this.verticalScrollTimeout);\n                this.verticalScrollTimeout = undefined;\n            }\n\n            if (newVerticalScrollDirection) {\n                this.verticalScrollTimeout = window.setTimeout(\n                    this.scrollVertically.bind(this),\n                    40,\n                );\n            }\n        }\n    }\n\n    public getScrollLeft(): number {\n        return this.container.scrollLeft;\n    }\n\n    public scrollToY(top: number): void {\n        this.container.scrollTop = top;\n    }\n\n    public stopScrolling() {\n        this.horizontalScrollDirection = undefined;\n        this.verticalScrollDirection = undefined;\n        this.scrollParentTop = undefined;\n        this.scrollParentBottom = undefined;\n    }\n}\n","import type { ScrollParent } from \"./types\";\n\nimport { getOffsetTop } from \"../util\";\n\ntype HorizontalScrollDirection = \"left\" | \"right\";\ntype VerticalScrollDirection = \"bottom\" | \"top\";\n\ninterface Params {\n    refreshHitAreas: () => void;\n    treeElement: HTMLElement;\n}\n\nexport default class DocumentScrollParent implements ScrollParent {\n    private documentScrollHeight?: number;\n    private documentScrollWidth?: number;\n    private horizontalScrollDirection?: HorizontalScrollDirection;\n    private horizontalScrollTimeout?: number;\n    private refreshHitAreas: () => void;\n    private treeElement: HTMLElement;\n    private verticalScrollDirection?: VerticalScrollDirection;\n    private verticalScrollTimeout?: number;\n\n    constructor({ refreshHitAreas, treeElement }: Params) {\n        this.refreshHitAreas = refreshHitAreas;\n        this.treeElement = treeElement;\n    }\n\n    private canScrollDown() {\n        const documentElement = document.documentElement;\n\n        return (\n            documentElement.scrollTop + documentElement.clientHeight <\n            this.getDocumentScrollHeight()\n        );\n    }\n\n    private canScrollRight() {\n        const documentElement = document.documentElement;\n\n        return (\n            documentElement.scrollLeft + documentElement.clientWidth <\n            this.getDocumentScrollWidth()\n        );\n    }\n\n    private getDocumentScrollHeight() {\n        // Store the original scroll height because the scroll height can increase when the drag element is moved beyond the scroll height.\n        if (this.documentScrollHeight == null) {\n            this.documentScrollHeight = document.documentElement.scrollHeight;\n        }\n\n        return this.documentScrollHeight;\n    }\n\n    private getDocumentScrollWidth() {\n        // Store the original scroll width because the scroll width can increase when the drag element is moved beyond the scroll width.\n        if (this.documentScrollWidth == null) {\n            this.documentScrollWidth = document.documentElement.scrollWidth;\n        }\n\n        return this.documentScrollWidth;\n    }\n\n    private getNewHorizontalScrollDirection(\n        pageX: number,\n    ): HorizontalScrollDirection | undefined {\n        const scrollLeft = document.documentElement.scrollLeft;\n        const windowWidth = window.innerWidth;\n\n        const isNearRightEdge = pageX > windowWidth - 20;\n        const isNearLeftEdge = pageX - scrollLeft < 20;\n\n        if (isNearRightEdge && this.canScrollRight()) {\n            return \"right\";\n        }\n\n        if (isNearLeftEdge) {\n            return \"left\";\n        }\n\n        return undefined;\n    }\n\n    private getNewVerticalScrollDirection(\n        pageY: number,\n    ): undefined | VerticalScrollDirection {\n        const scrollTop = jQuery(document).scrollTop() ?? 0;\n        const distanceTop = pageY - scrollTop;\n\n        if (distanceTop < 20) {\n            return \"top\";\n        }\n\n        const windowHeight = window.innerHeight;\n\n        if (windowHeight - (pageY - scrollTop) < 20 && this.canScrollDown()) {\n            return \"bottom\";\n        }\n\n        return undefined;\n    }\n\n    private scrollHorizontally() {\n        if (!this.horizontalScrollDirection) {\n            return;\n        }\n\n        const distance = this.horizontalScrollDirection === \"left\" ? -20 : 20;\n        window.scrollBy({ behavior: \"instant\", left: distance, top: 0 });\n\n        this.refreshHitAreas();\n\n        setTimeout(this.scrollHorizontally.bind(this), 40);\n    }\n\n    private scrollVertically() {\n        if (!this.verticalScrollDirection) {\n            return;\n        }\n\n        const distance = this.verticalScrollDirection === \"top\" ? -20 : 20;\n        window.scrollBy({ behavior: \"instant\", left: 0, top: distance });\n\n        this.refreshHitAreas();\n\n        setTimeout(this.scrollVertically.bind(this), 40);\n    }\n\n    public checkHorizontalScrolling(pageX: number): void {\n        const newHorizontalScrollDirection =\n            this.getNewHorizontalScrollDirection(pageX);\n\n        if (this.horizontalScrollDirection !== newHorizontalScrollDirection) {\n            this.horizontalScrollDirection = newHorizontalScrollDirection;\n\n            if (this.horizontalScrollTimeout != null) {\n                window.clearTimeout(this.horizontalScrollTimeout);\n            }\n\n            if (newHorizontalScrollDirection) {\n                this.horizontalScrollTimeout = window.setTimeout(\n                    this.scrollHorizontally.bind(this),\n                    40,\n                );\n            }\n        }\n    }\n\n    public checkVerticalScrolling(pageY: number) {\n        const newVerticalScrollDirection =\n            this.getNewVerticalScrollDirection(pageY);\n\n        if (this.verticalScrollDirection !== newVerticalScrollDirection) {\n            this.verticalScrollDirection = newVerticalScrollDirection;\n\n            if (this.verticalScrollTimeout != null) {\n                window.clearTimeout(this.verticalScrollTimeout);\n                this.verticalScrollTimeout = undefined;\n            }\n\n            if (newVerticalScrollDirection) {\n                this.verticalScrollTimeout = window.setTimeout(\n                    this.scrollVertically.bind(this),\n                    40,\n                );\n            }\n        }\n    }\n\n    public getScrollLeft(): number {\n        return document.documentElement.scrollLeft;\n    }\n\n    public scrollToY(top: number): void {\n        const treeTop = getOffsetTop(this.treeElement);\n\n        document.documentElement.scrollTop = top + treeTop;\n    }\n\n    public stopScrolling() {\n        this.horizontalScrollDirection = undefined;\n        this.verticalScrollDirection = undefined;\n        this.documentScrollHeight = undefined;\n        this.documentScrollWidth = undefined;\n    }\n}\n","import type { ScrollParent } from \"./types\";\n\nimport ContainerScrollParent from \"./containerScrollParent\";\nimport DocumentScrollParent from \"./documentScrollParent\";\n\nconst isOverflow = (overflowValue: string) =>\n    overflowValue === \"auto\" || overflowValue === \"scroll\";\n\nconst hasOverFlow = (element: HTMLElement): boolean => {\n    const style = getComputedStyle(element);\n\n    return isOverflow(style.overflowX) || isOverflow(style.overflowY);\n};\n\nconst getParentWithOverflow = (\n    treeElement: HTMLElement,\n): HTMLElement | null => {\n    if (hasOverFlow(treeElement)) {\n        return treeElement;\n    }\n\n    let parent = treeElement.parentElement;\n\n    while (parent) {\n        if (hasOverFlow(parent)) {\n            return parent;\n        }\n\n        parent = parent.parentElement;\n    }\n\n    return null;\n};\n\nconst createScrollParent = (\n    treeElement: HTMLElement,\n    refreshHitAreas: () => void,\n): ScrollParent => {\n    const container = getParentWithOverflow(treeElement);\n\n    if (container && container.tagName !== \"HTML\") {\n        return new ContainerScrollParent({\n            container,\n            refreshHitAreas,\n        });\n    } else {\n        return new DocumentScrollParent({ refreshHitAreas, treeElement });\n    }\n};\n\nexport default createScrollParent;\n","import { PositionInfo } from \"./mouseUtils\";\nimport createScrollParent from \"./scrollHandler/createScrollParent\";\nimport { ScrollParent } from \"./scrollHandler/types\";\n\ninterface ScrollHandlerParams {\n    refreshHitAreas: () => void;\n    treeElement: HTMLElement;\n}\n\nexport default class ScrollHandler {\n    private refreshHitAreas: () => void;\n    private scrollParent?: ScrollParent;\n    private treeElement: HTMLElement;\n\n    constructor({ refreshHitAreas, treeElement }: ScrollHandlerParams) {\n        this.refreshHitAreas = refreshHitAreas;\n        this.scrollParent = undefined;\n        this.treeElement = treeElement;\n    }\n\n    private checkHorizontalScrolling(positionInfo: PositionInfo): void {\n        this.getScrollParent().checkHorizontalScrolling(positionInfo.pageX);\n    }\n\n    private checkVerticalScrolling(positionInfo: PositionInfo): void {\n        this.getScrollParent().checkVerticalScrolling(positionInfo.pageY);\n    }\n\n    private getScrollParent(): ScrollParent {\n        if (!this.scrollParent) {\n            this.scrollParent = createScrollParent(\n                this.treeElement,\n                this.refreshHitAreas,\n            );\n        }\n\n        return this.scrollParent;\n    }\n\n    public checkScrolling(positionInfo: PositionInfo): void {\n        this.checkVerticalScrolling(positionInfo);\n        this.checkHorizontalScrolling(positionInfo);\n    }\n\n    public getScrollLeft(): number {\n        return this.getScrollParent().getScrollLeft();\n    }\n\n    public scrollToY(top: number): void {\n        this.getScrollParent().scrollToY(top);\n    }\n\n    public stopScrolling() {\n        this.getScrollParent().stopScrolling();\n    }\n}\n","import { GetNodeById } from \"./jqtreeMethodTypes\";\nimport { Node } from \"./node\";\n\ninterface SelectNodeHandlerParameters {\n    getNodeById: GetNodeById;\n}\n\nexport default class SelectNodeHandler {\n    private getNodeById: GetNodeById;\n    private selectedNodes: Set<NodeId>;\n    private selectedSingleNode: Node | null;\n\n    constructor({ getNodeById }: SelectNodeHandlerParameters) {\n        this.getNodeById = getNodeById;\n        this.selectedNodes = new Set<NodeId>();\n        this.clear();\n    }\n\n    public addToSelection(node: Node): void {\n        if (node.id != null) {\n            this.selectedNodes.add(node.id);\n        } else {\n            this.selectedSingleNode = node;\n        }\n    }\n\n    public clear(): void {\n        this.selectedNodes.clear();\n        this.selectedSingleNode = null;\n    }\n\n    public getSelectedNode(): false | Node {\n        const selectedNodes = this.getSelectedNodes();\n\n        if (selectedNodes.length) {\n            return selectedNodes[0] ?? false;\n        } else {\n            return false;\n        }\n    }\n\n    public getSelectedNodes(): Node[] {\n        if (this.selectedSingleNode) {\n            return [this.selectedSingleNode];\n        } else {\n            const selectedNodes: Node[] = [];\n\n            this.selectedNodes.forEach((id) => {\n                const node = this.getNodeById(id);\n                if (node) {\n                    selectedNodes.push(node);\n                }\n            });\n\n            return selectedNodes;\n        }\n    }\n\n    public getSelectedNodesUnder(parent: Node): Node[] {\n        if (this.selectedSingleNode) {\n            if (parent.isParentOf(this.selectedSingleNode)) {\n                return [this.selectedSingleNode];\n            } else {\n                return [];\n            }\n        } else {\n            const selectedNodes: Node[] = [];\n\n            this.selectedNodes.forEach((id) => {\n                const node = this.getNodeById(id);\n                if (node && parent.isParentOf(node)) {\n                    selectedNodes.push(node);\n                }\n            });\n\n            return selectedNodes;\n        }\n    }\n\n    public isNodeSelected(node: Node): boolean {\n        if (node.id != null) {\n            return this.selectedNodes.has(node.id);\n        } else if (this.selectedSingleNode) {\n            return this.selectedSingleNode.element === node.element;\n        } else {\n            return false;\n        }\n    }\n\n    public removeFromSelection(node: Node, includeChildren = false): void {\n        if (node.id == null) {\n            if (\n                this.selectedSingleNode &&\n                node.element === this.selectedSingleNode.element\n            ) {\n                this.selectedSingleNode = null;\n            }\n        } else {\n            this.selectedNodes.delete(node.id);\n\n            if (includeChildren) {\n                node.iterate(() => {\n                    if (node.id != null) {\n                        this.selectedNodes.delete(node.id);\n                    }\n                    return true;\n                });\n            }\n        }\n    }\n}\n","const register = (widgetClass: unknown, widgetName: string): void => {\n    const getDataKey = (): string => `simple_widget_${widgetName}`;\n\n    const getWidgetData = (\n        el: HTMLElement,\n        dataKey: string,\n    ): null | SimpleWidget<unknown> => {\n        const widget = jQuery.data(el, dataKey) as unknown;\n\n        if (widget && widget instanceof SimpleWidget) {\n            return widget;\n        } else {\n            return null;\n        }\n    };\n\n    const createWidget = ($el: JQuery, options: unknown): JQuery => {\n        const dataKey = getDataKey();\n\n        for (const el of $el.get()) {\n            const existingWidget = getWidgetData(el, dataKey);\n\n            if (!existingWidget) {\n                const simpleWidgetClass = widgetClass as typeof SimpleWidget;\n                const widget = new simpleWidgetClass(el, options);\n\n                if (!jQuery.data(el, dataKey)) {\n                    jQuery.data(el, dataKey, widget);\n                }\n\n                // Call init after setting data, so we can call methods\n                widget.init();\n            }\n        }\n\n        return $el;\n    };\n\n    const destroyWidget = ($el: JQuery): void => {\n        const dataKey = getDataKey();\n\n        for (const el of $el.get()) {\n            const widget = getWidgetData(el, dataKey);\n\n            if (widget) {\n                widget.destroy();\n            }\n\n            jQuery.removeData(el, dataKey);\n        }\n    };\n\n    const callFunction = (\n        $el: JQuery,\n        functionName: string,\n        args: unknown[],\n    ): unknown => {\n        let result = null;\n\n        for (const el of $el.get()) {\n            const widget = jQuery.data(el, getDataKey()) as unknown;\n\n            if (widget && widget instanceof SimpleWidget) {\n                const simpleWidget = widget as SimpleWidget<unknown>;\n                const widgetFunction = simpleWidget[functionName];\n\n                if (widgetFunction && typeof widgetFunction === \"function\") {\n                    result = widgetFunction.apply(widget, args) as unknown;\n                }\n            }\n        }\n\n        return result;\n    };\n\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    (jQuery.fn as any)[widgetName] = function (\n        this: JQuery,\n        argument1: unknown,\n        ...args: unknown[]\n    ) {\n        if (!argument1) {\n            return createWidget(this, null);\n        } else if (typeof argument1 === \"object\") {\n            const options = argument1 as unknown;\n            return createWidget(this, options);\n        } else if (typeof argument1 === \"string\" && argument1[0] !== \"_\") {\n            const functionName = argument1;\n\n            if (functionName === \"destroy\") {\n                destroyWidget(this);\n                return undefined;\n            } else if (functionName === \"get_widget_class\") {\n                return widgetClass;\n            } else {\n                return callFunction(this, functionName, args);\n            }\n        } else {\n            return undefined;\n        }\n    };\n};\n\nexport default class SimpleWidget<WidgetOptions> {\n    [key: string]: unknown;\n\n    protected static defaults: unknown = {};\n\n    public $el: JQuery;\n\n    public options: WidgetOptions;\n\n    constructor(el: HTMLElement, options: WidgetOptions) {\n        this.$el = jQuery(el);\n\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        const defaults = (this.constructor as any).defaults as WidgetOptions;\n        this.options = { ...defaults, ...options };\n    }\n\n    public static register(widgetClass: unknown, widgetName: string): void {\n        register(widgetClass, widgetName);\n    }\n\n    public deinit(): void {\n        //\n    }\n\n    public destroy(): void {\n        this.deinit();\n    }\n\n    public init(): void {\n        //\n    }\n}\n","const version = \"1.8.7\";\n\nexport default version;\n","import DataLoader, { HandleFinishedLoading } from \"./dataLoader\";\nimport { DragAndDropHandler } from \"./dragAndDropHandler\";\nimport ElementsRenderer from \"./elementsRenderer\";\nimport { OnFinishOpenNode } from \"./jqtreeMethodTypes\";\nimport { JQTreeOptions } from \"./jqtreeOptions\";\nimport KeyHandler from \"./keyHandler\";\nimport MouseHandler from \"./mouseHandler\";\nimport { PositionInfo } from \"./mouseUtils\";\nimport { Node } from \"./node\";\nimport NodeElement from \"./nodeElement\";\nimport FolderElement from \"./nodeElement/folderElement\";\nimport { getPosition } from \"./position\";\nimport SaveStateHandler, { SavedState } from \"./saveStateHandler\";\nimport ScrollHandler from \"./scrollHandler\";\nimport SelectNodeHandler from \"./selectNodeHandler\";\nimport SimpleWidget from \"./simple.widget\";\nimport { getOffsetTop, isFunction } from \"./util\";\nimport __version__ from \"./version\";\n\ninterface SelectNodeOptions {\n    mustSetFocus?: boolean;\n    mustToggle?: boolean;\n}\n\nconst NODE_PARAM_IS_EMPTY = \"Node parameter is empty\";\nconst PARAM_IS_EMPTY = \"Parameter is empty: \";\n\nexport class JqTreeWidget extends SimpleWidget<JQTreeOptions> {\n    protected static defaults: JQTreeOptions = {\n        animationSpeed: \"fast\",\n        autoEscape: true,\n        autoOpen: false, // true / false / int (open n levels starting at 0)\n        buttonLeft: true,\n        // The symbol to use for a closed node - ► BLACK RIGHT-POINTING POINTER\n        // http://www.fileformat.info/info/unicode/char/25ba/index.htm\n        closedIcon: undefined,\n        data: undefined,\n        dataFilter: undefined,\n        dataUrl: undefined,\n        dragAndDrop: false,\n        keyboardSupport: true,\n        nodeClass: Node,\n        onCanMove: undefined, // Can this node be moved?\n        onCanMoveTo: undefined, // Can this node be moved to this position? function(moved_node, target_node, position)\n        onCanSelectNode: undefined,\n        onCreateLi: undefined,\n        onDragMove: undefined,\n        onDragStop: undefined,\n        onGetStateFromStorage: undefined,\n        onIsMoveHandle: undefined,\n        onLoadFailed: undefined,\n        onLoading: undefined,\n        onSetStateFromStorage: undefined,\n        openedIcon: \"&#x25bc;\",\n        openFolderDelay: 500, // The delay for opening a folder during drag and drop; the value is in milliseconds\n        // The symbol to use for an open node - ▼ BLACK DOWN-POINTING TRIANGLE\n        // http://www.fileformat.info/info/unicode/char/25bc/index.htm\n        rtl: undefined, // right-to-left support; true / false (default)\n        saveState: false, // true / false / string (cookie name)\n        selectable: true,\n        showEmptyFolder: false,\n        slide: true, // must display slide animation?\n        startDndDelay: 300, // The delay for starting dnd (in milliseconds)\n        tabIndex: 0,\n        useContextMenu: true,\n    };\n\n    private dataLoader: DataLoader;\n    private dndHandler: DragAndDropHandler;\n    private element: JQuery;\n\n    private isInitialized: boolean;\n    private keyHandler: KeyHandler;\n    private mouseHandler: MouseHandler;\n    private renderer: ElementsRenderer;\n    private saveStateHandler: SaveStateHandler;\n    private scrollHandler: ScrollHandler;\n    private selectNodeHandler: SelectNodeHandler;\n    private tree: Node;\n\n    private connectHandlers() {\n        const {\n            autoEscape,\n            buttonLeft,\n            closedIcon,\n            dataFilter,\n            dragAndDrop,\n            keyboardSupport,\n            onCanMove,\n            onCanMoveTo,\n            onCreateLi,\n            onDragMove,\n            onDragStop,\n            onGetStateFromStorage,\n            onIsMoveHandle,\n            onLoadFailed,\n            onLoading,\n            onSetStateFromStorage,\n            openedIcon,\n            openFolderDelay,\n            rtl,\n            saveState,\n            showEmptyFolder,\n            slide,\n            tabIndex,\n        } = this.options;\n\n        const closeNode = this.closeNode.bind(this);\n        const getNodeElement = this.getNodeElement.bind(this);\n        const getNodeElementForNode = this.getNodeElementForNode.bind(this);\n        const getNodeById = this.getNodeById.bind(this);\n        const getSelectedNode = this.getSelectedNode.bind(this);\n        const getTree = this.getTree.bind(this);\n        const isFocusOnTree = this.isFocusOnTree.bind(this);\n        const loadData = this.loadData.bind(this);\n        const openNode = this.openNodeInternal.bind(this);\n        const refreshElements = this.refreshElements.bind(this);\n        const refreshHitAreas = this.refreshHitAreas.bind(this);\n        const selectNode = this.selectNode.bind(this);\n        const $treeElement = this.element;\n        const treeElement = this.element.get(0) as HTMLElement;\n        const triggerEvent = this.triggerEvent.bind(this);\n\n        const selectNodeHandler = new SelectNodeHandler({\n            getNodeById,\n        });\n\n        const addToSelection =\n            selectNodeHandler.addToSelection.bind(selectNodeHandler);\n        const getSelectedNodes =\n            selectNodeHandler.getSelectedNodes.bind(selectNodeHandler);\n        const isNodeSelected =\n            selectNodeHandler.isNodeSelected.bind(selectNodeHandler);\n        const removeFromSelection =\n            selectNodeHandler.removeFromSelection.bind(selectNodeHandler);\n        const getMouseDelay = () => this.options.startDndDelay ?? 0;\n\n        const dataLoader = new DataLoader({\n            dataFilter,\n            loadData,\n            onLoadFailed,\n            onLoading,\n            treeElement,\n            triggerEvent,\n        });\n\n        const saveStateHandler = new SaveStateHandler({\n            addToSelection,\n            getNodeById,\n            getSelectedNodes,\n            getTree,\n            onGetStateFromStorage,\n            onSetStateFromStorage,\n            openNode,\n            refreshElements,\n            removeFromSelection,\n            saveState,\n        });\n\n        const scrollHandler = new ScrollHandler({\n            refreshHitAreas,\n            treeElement,\n        });\n\n        const getScrollLeft = scrollHandler.getScrollLeft.bind(scrollHandler);\n\n        const dndHandler = new DragAndDropHandler({\n            autoEscape,\n            getNodeElement,\n            getNodeElementForNode,\n            getScrollLeft,\n            getTree,\n            onCanMove,\n            onCanMoveTo,\n            onDragMove,\n            onDragStop,\n            onIsMoveHandle,\n            openFolderDelay,\n            openNode,\n            refreshElements,\n            slide,\n            treeElement,\n            triggerEvent,\n        });\n\n        const keyHandler = new KeyHandler({\n            closeNode,\n            getSelectedNode,\n            isFocusOnTree,\n            keyboardSupport,\n            openNode,\n            selectNode,\n        });\n\n        const renderer = new ElementsRenderer({\n            $element: $treeElement,\n            autoEscape,\n            buttonLeft,\n            closedIcon,\n            dragAndDrop,\n            getTree,\n            isNodeSelected,\n            onCreateLi,\n            openedIcon,\n            rtl,\n            showEmptyFolder,\n            tabIndex,\n        });\n\n        const getNode = this.getNode.bind(this);\n        const onMouseCapture = this.mouseCapture.bind(this);\n        const onMouseDrag = this.mouseDrag.bind(this);\n        const onMouseStart = this.mouseStart.bind(this);\n        const onMouseStop = this.mouseStop.bind(this);\n\n        const mouseHandler = new MouseHandler({\n            element: treeElement,\n            getMouseDelay,\n            getNode,\n            onClickButton: this.toggle.bind(this),\n            onClickTitle: this.doSelectNode.bind(this),\n            onMouseCapture,\n            onMouseDrag,\n            onMouseStart,\n            onMouseStop,\n            triggerEvent,\n            useContextMenu: this.options.useContextMenu,\n        });\n\n        this.dataLoader = dataLoader;\n        this.dndHandler = dndHandler;\n        this.keyHandler = keyHandler;\n        this.mouseHandler = mouseHandler;\n        this.renderer = renderer;\n        this.saveStateHandler = saveStateHandler;\n        this.scrollHandler = scrollHandler;\n        this.selectNodeHandler = selectNodeHandler;\n    }\n\n    private containsElement(element: HTMLElement): boolean {\n        const node = this.getNode(element);\n\n        return node != null && node.tree === this.tree;\n    }\n\n    private createFolderElement(node: Node) {\n        const closedIconElement = this.renderer.closedIconElement;\n        const getScrollLeft = this.scrollHandler.getScrollLeft.bind(\n            this.scrollHandler,\n        );\n        const openedIconElement = this.renderer.openedIconElement;\n        const tabIndex = this.options.tabIndex;\n        const treeElement = this.element.get(0) as HTMLElement;\n        const triggerEvent = this.triggerEvent.bind(this);\n\n        return new FolderElement({\n            closedIconElement,\n            getScrollLeft,\n            node,\n            openedIconElement,\n            tabIndex,\n            treeElement,\n            triggerEvent,\n        });\n    }\n\n    private createNodeElement(node: Node) {\n        const getScrollLeft = this.scrollHandler.getScrollLeft.bind(\n            this.scrollHandler,\n        );\n        const tabIndex = this.options.tabIndex;\n        const treeElement = this.element.get(0) as HTMLElement;\n\n        return new NodeElement({\n            getScrollLeft,\n            node,\n            tabIndex,\n            treeElement,\n        });\n    }\n\n    private deselectCurrentNode(): void {\n        const node = this.getSelectedNode();\n        if (node) {\n            this.removeFromSelection(node);\n        }\n    }\n\n    private deselectNodes(parentNode: Node): void {\n        const selectedNodesUnderParent =\n            this.selectNodeHandler.getSelectedNodesUnder(parentNode);\n        for (const n of selectedNodesUnderParent) {\n            this.selectNodeHandler.removeFromSelection(n);\n        }\n    }\n\n    private doLoadData(data: NodeData[] | null, parentNode: Node | null): void {\n        if (data) {\n            if (parentNode) {\n                this.deselectNodes(parentNode);\n                this.loadSubtree(data, parentNode);\n            } else {\n                this.initTree(data);\n            }\n\n            if (this.isDragging()) {\n                this.dndHandler.refresh();\n            }\n        }\n\n        this.triggerEvent(\"tree.load_data\", {\n            parent_node: parentNode,\n            tree_data: data,\n        });\n    }\n\n    private doLoadDataFromUrl(\n        urlInfoParam: JQuery.AjaxSettings | null | string,\n        parentNode: Node | null,\n        onFinished: HandleFinishedLoading | null,\n    ): void {\n        const urlInfo = urlInfoParam ?? this.getDataUrlInfo(parentNode);\n\n        this.dataLoader.loadFromUrl(urlInfo, parentNode, onFinished);\n    }\n\n    private doSelectNode(\n        node: Node | null,\n        optionsParam?: SelectNodeOptions,\n    ): void {\n        const saveState = (): void => {\n            if (this.options.saveState) {\n                this.saveStateHandler.saveState();\n            }\n        };\n\n        if (!node) {\n            // Called with empty node -> deselect current node\n            this.deselectCurrentNode();\n            saveState();\n            return;\n        }\n        const defaultOptions = { mustSetFocus: true, mustToggle: true };\n        const selectOptions = { ...defaultOptions, ...(optionsParam ?? {}) };\n\n        const canSelect = (): boolean => {\n            if (this.options.onCanSelectNode) {\n                return (\n                    this.options.selectable &&\n                    this.options.onCanSelectNode(node)\n                );\n            } else {\n                return this.options.selectable;\n            }\n        };\n\n        if (!canSelect()) {\n            return;\n        }\n\n        if (this.selectNodeHandler.isNodeSelected(node)) {\n            if (selectOptions.mustToggle) {\n                this.deselectCurrentNode();\n                this.triggerEvent(\"tree.select\", {\n                    node: null,\n                    previous_node: node,\n                });\n            }\n        } else {\n            const deselectedNode = this.getSelectedNode() || null;\n            this.deselectCurrentNode();\n            this.addToSelection(node, selectOptions.mustSetFocus);\n\n            this.triggerEvent(\"tree.select\", {\n                deselected_node: deselectedNode,\n                node,\n            });\n            this.openParents(node);\n        }\n\n        saveState();\n    }\n\n    private getAutoOpenMaxLevel(): number {\n        if (this.options.autoOpen === true) {\n            return -1;\n        } else if (typeof this.options.autoOpen === \"number\") {\n            return this.options.autoOpen;\n        } else if (typeof this.options.autoOpen === \"string\") {\n            return parseInt(this.options.autoOpen, 10);\n        } else {\n            return 0;\n        }\n    }\n\n    private getDataUrlInfo(node: Node | null): JQuery.AjaxSettings | null {\n        const dataUrl =\n            this.options.dataUrl ?? (this.element.data(\"url\") as null | string);\n\n        const getUrlFromString = (url: string): JQuery.AjaxSettings => {\n            const urlInfo: JQuery.AjaxSettings = { url };\n\n            setUrlInfoData(urlInfo);\n\n            return urlInfo;\n        };\n\n        const setUrlInfoData = (urlInfo: JQuery.AjaxSettings): void => {\n            if (node?.id) {\n                // Load on demand of a subtree; add node parameter\n                const data = { node: node.id };\n                urlInfo.data = data;\n            } else {\n                // Add selected_node parameter\n                const selectedNodeId = this.getNodeIdToBeSelected();\n                if (selectedNodeId) {\n                    const data = { selected_node: selectedNodeId };\n                    urlInfo.data = data;\n                }\n            }\n        };\n\n        if (typeof dataUrl === \"function\") {\n            return dataUrl(node);\n        } else if (typeof dataUrl === \"string\") {\n            return getUrlFromString(dataUrl);\n        } else if (dataUrl && typeof dataUrl === \"object\") {\n            setUrlInfoData(dataUrl);\n            return dataUrl;\n        } else {\n            return null;\n        }\n    }\n\n    private getDefaultClosedIcon(): string {\n        if (this.options.rtl) {\n            // triangle to the left\n            return \"&#x25c0;\";\n        } else {\n            // triangle to the right\n            return \"&#x25ba;\";\n        }\n    }\n\n    private getNode(element: HTMLElement): Node | null {\n        const liElement = element.closest(\"li.jqtree_common\");\n\n        if (liElement) {\n            return jQuery(liElement).data(\"node\") as Node;\n        } else {\n            return null;\n        }\n    }\n\n    private getNodeElement(element: HTMLElement): NodeElement | null {\n        const node = this.getNode(element);\n        if (node) {\n            return this.getNodeElementForNode(node);\n        } else {\n            return null;\n        }\n    }\n\n    private getNodeElementForNode(node: Node): NodeElement {\n        if (node.isFolder()) {\n            return this.createFolderElement(node);\n        } else {\n            return this.createNodeElement(node);\n        }\n    }\n\n    private getNodeIdToBeSelected(): NodeId | null {\n        if (this.options.saveState) {\n            return this.saveStateHandler.getNodeIdToBeSelected();\n        } else {\n            return null;\n        }\n    }\n\n    private getRtlOption(): boolean {\n        if (this.options.rtl != null) {\n            return this.options.rtl;\n        } else {\n            const dataRtl = this.element.data(\"rtl\") as unknown;\n\n            if (\n                dataRtl !== null &&\n                dataRtl !== false &&\n                dataRtl !== undefined\n            ) {\n                return true;\n            } else {\n                return false;\n            }\n        }\n    }\n\n    private initData(): void {\n        if (this.options.data) {\n            this.doLoadData(this.options.data, null);\n        } else {\n            const dataUrl = this.getDataUrlInfo(null);\n\n            if (dataUrl) {\n                this.doLoadDataFromUrl(null, null, null);\n            } else {\n                this.doLoadData([], null);\n            }\n        }\n    }\n\n    private initTree(data: NodeData[]): void {\n        const doInit = (): void => {\n            if (!this.isInitialized) {\n                this.isInitialized = true;\n                this.triggerEvent(\"tree.init\");\n            }\n        };\n\n        this.tree = new this.options.nodeClass(\n            null,\n            true,\n            this.options.nodeClass,\n        );\n\n        this.selectNodeHandler.clear();\n\n        this.tree.loadFromData(data);\n\n        const mustLoadOnDemand = this.setInitialState();\n\n        this.refreshElements(null);\n\n        if (!mustLoadOnDemand) {\n            doInit();\n        } else {\n            // Load data on demand and then init the tree\n            this.setInitialStateOnDemand(doInit);\n        }\n    }\n\n    private isFocusOnTree(): boolean {\n        const activeElement = document.activeElement;\n\n        return Boolean(\n            activeElement &&\n                activeElement.tagName === \"SPAN\" &&\n                this.containsElement(activeElement as HTMLElement),\n        );\n    }\n\n    private isSelectedNodeInSubtree(subtree: Node): boolean {\n        const selectedNode = this.getSelectedNode();\n\n        if (!selectedNode) {\n            return false;\n        } else {\n            return subtree === selectedNode || subtree.isParentOf(selectedNode);\n        }\n    }\n\n    private loadFolderOnDemand(\n        node: Node,\n        slide = true,\n        onFinished?: OnFinishOpenNode,\n    ): void {\n        node.is_loading = true;\n\n        this.doLoadDataFromUrl(null, node, () => {\n            this.openNodeInternal(node, slide, onFinished);\n        });\n    }\n\n    private loadSubtree(data: NodeData[], parentNode: Node): void {\n        parentNode.loadFromData(data);\n\n        parentNode.load_on_demand = false;\n        parentNode.is_loading = false;\n\n        this.refreshElements(parentNode);\n    }\n\n    private mouseCapture(positionInfo: PositionInfo): boolean | null {\n        if (this.options.dragAndDrop) {\n            return this.dndHandler.mouseCapture(positionInfo);\n        } else {\n            return false;\n        }\n    }\n\n    private mouseDrag(positionInfo: PositionInfo): boolean {\n        if (this.options.dragAndDrop) {\n            const result = this.dndHandler.mouseDrag(positionInfo);\n\n            this.scrollHandler.checkScrolling(positionInfo);\n            return result;\n        } else {\n            return false;\n        }\n    }\n\n    private mouseStart(positionInfo: PositionInfo): boolean {\n        if (this.options.dragAndDrop) {\n            return this.dndHandler.mouseStart(positionInfo);\n        } else {\n            return false;\n        }\n    }\n\n    private mouseStop(positionInfo: PositionInfo): boolean {\n        if (this.options.dragAndDrop) {\n            this.scrollHandler.stopScrolling();\n            return this.dndHandler.mouseStop(positionInfo);\n        } else {\n            return false;\n        }\n    }\n\n    private openNodeInternal(\n        node: Node,\n        slide = true,\n        onFinished?: OnFinishOpenNode,\n    ): void {\n        const doOpenNode = (\n            _node: Node,\n            _slide: boolean,\n            _onFinished?: OnFinishOpenNode,\n        ): void => {\n            const folderElement = this.createFolderElement(_node);\n            folderElement.open(\n                _onFinished,\n                _slide,\n                this.options.animationSpeed,\n            );\n        };\n\n        if (node.isFolder() || node.isEmptyFolder) {\n            if (node.load_on_demand) {\n                this.loadFolderOnDemand(node, slide, onFinished);\n            } else {\n                let parent = node.parent;\n\n                while (parent) {\n                    // nb: do not open root element\n                    if (parent.parent) {\n                        doOpenNode(parent, false);\n                    }\n                    parent = parent.parent;\n                }\n\n                doOpenNode(node, slide, onFinished);\n                this.saveState();\n            }\n        }\n    }\n\n    private openParents(node: Node) {\n        const parent = node.parent;\n\n        if (parent?.parent && !parent.is_open) {\n            this.openNode(parent, false);\n        }\n    }\n\n    /*\n    Redraw the tree or part of the tree.\n     from_node: redraw this subtree\n    */\n    private refreshElements(fromNode: Node | null): void {\n        const mustSetFocus = this.isFocusOnTree();\n        const mustSelect = fromNode\n            ? this.isSelectedNodeInSubtree(fromNode)\n            : false;\n\n        this.renderer.render(fromNode);\n\n        if (mustSelect) {\n            this.selectCurrentNode(mustSetFocus);\n        }\n\n        this.triggerEvent(\"tree.refresh\");\n    }\n\n    private saveState(): void {\n        if (this.options.saveState) {\n            this.saveStateHandler.saveState();\n        }\n    }\n\n    private selectCurrentNode(mustSetFocus: boolean): void {\n        const node = this.getSelectedNode();\n        if (node) {\n            const nodeElement = this.getNodeElementForNode(node);\n            nodeElement.select(mustSetFocus);\n        }\n    }\n\n    // Set initial state, either by restoring the state or auto-opening nodes\n    // result: must load nodes on demand?\n    private setInitialState(): boolean {\n        const restoreState = (): [boolean, boolean] => {\n            // result: is state restored, must load on demand?\n            if (!this.options.saveState) {\n                return [false, false];\n            } else {\n                const state = this.saveStateHandler.getStateFromStorage();\n\n                if (!state) {\n                    return [false, false];\n                } else {\n                    const mustLoadOnDemand =\n                        this.saveStateHandler.setInitialState(state);\n\n                    // return true: the state is restored\n                    return [true, mustLoadOnDemand];\n                }\n            }\n        };\n\n        const autoOpenNodes = (): boolean => {\n            // result: must load on demand?\n            if (this.options.autoOpen === false) {\n                return false;\n            }\n\n            const maxLevel = this.getAutoOpenMaxLevel();\n            let mustLoadOnDemand = false;\n\n            this.tree.iterate((node: Node, level: number) => {\n                if (node.load_on_demand) {\n                    mustLoadOnDemand = true;\n                    return false;\n                } else if (!node.hasChildren()) {\n                    return false;\n                } else {\n                    node.is_open = true;\n                    return level !== maxLevel;\n                }\n            });\n\n            return mustLoadOnDemand;\n        };\n\n        let [isRestored, mustLoadOnDemand] = restoreState(); // eslint-disable-line prefer-const\n\n        if (!isRestored) {\n            mustLoadOnDemand = autoOpenNodes();\n        }\n\n        return mustLoadOnDemand;\n    }\n\n    // Set the initial state for nodes that are loaded on demand\n    // Call cb_finished when done\n    private setInitialStateOnDemand(cbFinished: () => void): void {\n        const restoreState = (): boolean => {\n            if (!this.options.saveState) {\n                return false;\n            } else {\n                const state = this.saveStateHandler.getStateFromStorage();\n\n                if (!state) {\n                    return false;\n                } else {\n                    this.saveStateHandler.setInitialStateOnDemand(\n                        state,\n                        cbFinished,\n                    );\n\n                    return true;\n                }\n            }\n        };\n\n        const autoOpenNodes = (): void => {\n            const maxLevel = this.getAutoOpenMaxLevel();\n            let loadingCount = 0;\n\n            const loadAndOpenNode = (node: Node): void => {\n                loadingCount += 1;\n                this.openNodeInternal(node, false, () => {\n                    loadingCount -= 1;\n                    openNodes();\n                });\n            };\n\n            const openNodes = (): void => {\n                this.tree.iterate((node: Node, level: number) => {\n                    if (node.load_on_demand) {\n                        if (!node.is_loading) {\n                            loadAndOpenNode(node);\n                        }\n\n                        return false;\n                    } else {\n                        this.openNodeInternal(node, false);\n\n                        return level !== maxLevel;\n                    }\n                });\n\n                if (loadingCount === 0) {\n                    cbFinished();\n                }\n            };\n\n            openNodes();\n        };\n\n        if (!restoreState()) {\n            autoOpenNodes();\n        }\n    }\n\n    private triggerEvent(\n        eventName: string,\n        values?: Record<string, unknown>,\n    ): JQuery.Event {\n        const event = jQuery.Event(eventName, values);\n        this.element.trigger(event);\n        return event;\n    }\n\n    public addNodeAfter(\n        newNodeInfo: NodeData,\n        existingNode: Node,\n    ): Node | null {\n        const newNode = existingNode.addAfter(newNodeInfo);\n\n        if (newNode) {\n            this.refreshElements(existingNode.parent);\n        }\n\n        return newNode;\n    }\n\n    public addNodeBefore(\n        newNodeInfo: NodeData,\n        existingNode?: Node,\n    ): Node | null {\n        if (!existingNode) {\n            throw Error(PARAM_IS_EMPTY + \"existingNode\");\n        }\n\n        const newNode = existingNode.addBefore(newNodeInfo);\n\n        if (newNode) {\n            this.refreshElements(existingNode.parent);\n        }\n\n        return newNode;\n    }\n\n    public addParentNode(\n        newNodeInfo: NodeData,\n        existingNode?: Node,\n    ): Node | null {\n        if (!existingNode) {\n            throw Error(PARAM_IS_EMPTY + \"existingNode\");\n        }\n\n        const newNode = existingNode.addParent(newNodeInfo);\n\n        if (newNode) {\n            this.refreshElements(newNode.parent);\n        }\n\n        return newNode;\n    }\n\n    public addToSelection(node?: Node, mustSetFocus?: boolean): JQuery {\n        if (!node) {\n            throw Error(NODE_PARAM_IS_EMPTY);\n        }\n\n        this.selectNodeHandler.addToSelection(node);\n        this.openParents(node);\n\n        this.getNodeElementForNode(node).select(mustSetFocus ?? true);\n\n        this.saveState();\n\n        return this.element;\n    }\n\n    public appendNode(newNodeInfo: NodeData, parentNodeParam?: Node): Node {\n        const parentNode = parentNodeParam ?? this.tree;\n\n        const node = parentNode.append(newNodeInfo);\n\n        this.refreshElements(parentNode);\n\n        return node;\n    }\n\n    public closeNode(node?: Node, slideParam?: boolean | null): JQuery {\n        if (!node) {\n            throw Error(NODE_PARAM_IS_EMPTY);\n        }\n\n        const slide = slideParam ?? this.options.slide;\n\n        if (node.isFolder() || node.isEmptyFolder) {\n            this.createFolderElement(node).close(\n                slide,\n                this.options.animationSpeed,\n            );\n\n            this.saveState();\n        }\n\n        return this.element;\n    }\n\n    public deinit(): void {\n        this.element.empty();\n        this.element.off();\n\n        this.keyHandler.deinit();\n        this.mouseHandler.deinit();\n\n        this.tree = new Node({}, true);\n\n        super.deinit();\n    }\n\n    public getNodeByCallback(callback: (node: Node) => boolean): Node | null {\n        return this.tree.getNodeByCallback(callback);\n    }\n\n    public getNodeByHtmlElement(\n        inputElement: HTMLElement | JQuery,\n    ): Node | null {\n        const element =\n            inputElement instanceof HTMLElement\n                ? inputElement\n                : inputElement[0];\n\n        if (!element) {\n            return null;\n        }\n\n        return this.getNode(element);\n    }\n\n    public getNodeById(nodeId: NodeId): Node | null {\n        return this.tree.getNodeById(nodeId);\n    }\n\n    public getNodeByName(name: string): Node | null {\n        return this.tree.getNodeByName(name);\n    }\n\n    public getNodeByNameMustExist(name: string): Node {\n        return this.tree.getNodeByNameMustExist(name);\n    }\n\n    public getNodesByProperty(key: string, value: unknown): Node[] {\n        return this.tree.getNodesByProperty(key, value);\n    }\n\n    public getSelectedNode(): false | Node {\n        return this.selectNodeHandler.getSelectedNode();\n    }\n\n    public getSelectedNodes(): Node[] {\n        return this.selectNodeHandler.getSelectedNodes();\n    }\n\n    public getState(): null | SavedState {\n        return this.saveStateHandler.getState();\n    }\n\n    public getStateFromStorage(): null | SavedState {\n        return this.saveStateHandler.getStateFromStorage();\n    }\n\n    public getTree(): Node {\n        return this.tree;\n    }\n\n    public getVersion(): string {\n        return __version__;\n    }\n\n    public init(): void {\n        super.init();\n\n        this.element = this.$el;\n        this.isInitialized = false;\n\n        this.options.rtl = this.getRtlOption();\n\n        if (this.options.closedIcon == null) {\n            this.options.closedIcon = this.getDefaultClosedIcon();\n        }\n\n        this.connectHandlers();\n\n        this.initData();\n    }\n\n    public isDragging(): boolean {\n        return this.dndHandler.isDragging;\n    }\n\n    public isNodeSelected(node?: Node): boolean {\n        if (!node) {\n            throw Error(NODE_PARAM_IS_EMPTY);\n        }\n\n        return this.selectNodeHandler.isNodeSelected(node);\n    }\n\n    public loadData(data: NodeData[], parentNode: Node | null): JQuery {\n        this.doLoadData(data, parentNode);\n        return this.element;\n    }\n\n    /*\n    signatures:\n    - loadDataFromUrl(url, parent_node=null, on_finished=null)\n        loadDataFromUrl('/my_data');\n        loadDataFromUrl('/my_data', node1);\n        loadDataFromUrl('/my_data', node1, function() { console.log('finished'); });\n        loadDataFromUrl('/my_data', null, function() { console.log('finished'); });\n\n    - loadDataFromUrl(parent_node=null, on_finished=null)\n        loadDataFromUrl();\n        loadDataFromUrl(node1);\n        loadDataFromUrl(null, function() { console.log('finished'); });\n        loadDataFromUrl(node1, function() { console.log('finished'); });\n    */\n    public loadDataFromUrl(\n        param1: Node | null | string,\n        param2?: HandleFinishedLoading | Node | null,\n        param3?: HandleFinishedLoading,\n    ): JQuery {\n        if (typeof param1 === \"string\") {\n            // first parameter is url\n            this.doLoadDataFromUrl(\n                param1,\n                param2 as Node | null,\n                param3 ?? null,\n            );\n        } else {\n            // first parameter is not url\n            this.doLoadDataFromUrl(\n                null,\n                param1,\n                param2 as HandleFinishedLoading | null,\n            );\n        }\n\n        return this.element;\n    }\n\n    public moveDown(): JQuery {\n        const selectedNode = this.getSelectedNode();\n        if (selectedNode) {\n            this.keyHandler.moveDown(selectedNode);\n        }\n\n        return this.element;\n    }\n\n    public moveNode(node?: Node, targetNode?: Node, position?: string): JQuery {\n        if (!node) {\n            throw Error(NODE_PARAM_IS_EMPTY);\n        }\n\n        if (!targetNode) {\n            throw Error(PARAM_IS_EMPTY + \"targetNode\");\n        }\n\n        if (!position) {\n            throw Error(PARAM_IS_EMPTY + \"position\");\n        }\n\n        const positionIndex = getPosition(position);\n\n        if (positionIndex !== undefined) {\n            this.tree.moveNode(node, targetNode, positionIndex);\n            this.refreshElements(null);\n        }\n\n        return this.element;\n    }\n\n    public moveUp(): JQuery {\n        const selectedNode = this.getSelectedNode();\n        if (selectedNode) {\n            this.keyHandler.moveUp(selectedNode);\n        }\n\n        return this.element;\n    }\n\n    public openNode(\n        node?: Node,\n        param1?: boolean | OnFinishOpenNode,\n        param2?: OnFinishOpenNode,\n    ): JQuery {\n        if (!node) {\n            throw Error(NODE_PARAM_IS_EMPTY);\n        }\n\n        const parseParams = (): [boolean, OnFinishOpenNode | undefined] => {\n            let onFinished: null | OnFinishOpenNode;\n            let slide: boolean | null;\n\n            if (isFunction(param1)) {\n                onFinished = param1 as OnFinishOpenNode;\n                slide = null;\n            } else {\n                slide = param1 as boolean;\n                onFinished = param2 as OnFinishOpenNode;\n            }\n\n            if (slide == null) {\n                slide = this.options.slide;\n            }\n\n            return [slide, onFinished];\n        };\n\n        const [slide, onFinished] = parseParams();\n\n        this.openNodeInternal(node, slide, onFinished);\n        return this.element;\n    }\n\n    public prependNode(newNodeInfo: NodeData, parentNodeParam?: Node): Node {\n        const parentNode = parentNodeParam ?? this.tree;\n\n        const node = parentNode.prepend(newNodeInfo);\n\n        this.refreshElements(parentNode);\n\n        return node;\n    }\n\n    public refresh(): JQuery {\n        this.refreshElements(null);\n        return this.element;\n    }\n\n    public refreshHitAreas(): JQuery {\n        this.dndHandler.refresh();\n        return this.element;\n    }\n\n    public reload(onFinished: HandleFinishedLoading | null): JQuery {\n        this.doLoadDataFromUrl(null, null, onFinished);\n        return this.element;\n    }\n\n    public removeFromSelection(node?: Node): JQuery {\n        if (!node) {\n            throw Error(NODE_PARAM_IS_EMPTY);\n        }\n\n        this.selectNodeHandler.removeFromSelection(node);\n\n        this.getNodeElementForNode(node).deselect();\n        this.saveState();\n\n        return this.element;\n    }\n\n    public removeNode(node?: Node): JQuery {\n        if (!node) {\n            throw Error(NODE_PARAM_IS_EMPTY);\n        }\n\n        if (!node.parent) {\n            throw Error(\"Node has no parent\");\n        }\n\n        this.selectNodeHandler.removeFromSelection(node, true); // including children\n\n        const parent = node.parent;\n        node.remove();\n        this.refreshElements(parent);\n\n        return this.element;\n    }\n\n    public scrollToNode(node?: Node): JQuery {\n        if (!node) {\n            throw Error(NODE_PARAM_IS_EMPTY);\n        }\n\n        if (!node.element) {\n            return this.element;\n        }\n\n        const top =\n            getOffsetTop(node.element) -\n            getOffsetTop(this.$el.get(0) as HTMLElement);\n\n        this.scrollHandler.scrollToY(top);\n\n        return this.element;\n    }\n\n    public selectNode(\n        node: Node | null,\n        optionsParam?: SelectNodeOptions,\n    ): JQuery {\n        this.doSelectNode(node, optionsParam);\n        return this.element;\n    }\n\n    public setOption(option: string, value: unknown): JQuery {\n        (this.options as unknown as Record<string, unknown>)[option] = value;\n        return this.element;\n    }\n\n    public setState(state?: SavedState): JQuery {\n        if (state) {\n            this.saveStateHandler.setInitialState(state);\n            this.refreshElements(null);\n        }\n\n        return this.element;\n    }\n\n    public toggle(node?: Node, slideParam: boolean | null = null): JQuery {\n        if (!node) {\n            throw Error(NODE_PARAM_IS_EMPTY);\n        }\n\n        const slide = slideParam ?? this.options.slide;\n\n        if (node.is_open) {\n            this.closeNode(node, slide);\n        } else {\n            this.openNode(node, slide);\n        }\n\n        return this.element;\n    }\n\n    public toJson(): string {\n        return JSON.stringify(this.tree.getData());\n    }\n\n    public updateNode(node?: Node, data?: NodeData): JQuery {\n        if (!node) {\n            throw Error(NODE_PARAM_IS_EMPTY);\n        }\n\n        if (!data) {\n            return this.element;\n        }\n\n        const idIsChanged =\n            typeof data === \"object\" && data.id && data.id !== node.id;\n\n        if (idIsChanged) {\n            this.tree.removeNodeFromIndex(node);\n        }\n\n        node.setData(data);\n\n        if (idIsChanged) {\n            this.tree.addNodeToIndex(node);\n        }\n\n        if (\n            typeof data === \"object\" &&\n            data.children &&\n            data.children instanceof Array\n        ) {\n            node.removeChildren();\n\n            if (data.children.length) {\n                node.loadFromData(data.children as Node[]);\n            }\n        }\n\n        this.refreshElements(node);\n\n        return this.element;\n    }\n}\n\nSimpleWidget.register(JqTreeWidget, \"tree\");\n"],"names":["DataLoader","constructor","_ref","dataFilter","loadData","onLoadFailed","onLoading","treeElement","triggerEvent","addLoadingClass","element","classList","add","getDomElement","parentNode","notifyLoading","isLoading","node","$el","jQuery","parseData","data","getParsedData","JSON","parse","parsedData","removeLoadingClass","remove","submitRequest","urlInfoInput","handleSuccess","handleError","urlInfo","url","ajaxSettings","cache","dataType","error","method","success","toUpperCase","ajax","loadFromUrl","onFinished","stopLoading","jqXHR","Position","positionNames","after","After","before","Before","inside","Inside","none","None","getPositionName","position","name","Object","prototype","hasOwnProperty","call","getPosition","isInt","n","isFunction","v","getBoolString","value","getOffsetTop","getElementPosition","top","rect","getBoundingClientRect","left","x","window","scrollX","y","scrollY","DragElement","autoEscape","nodeName","offsetX","offsetY","createElement","appendChild","document","textContent","innerHTML","style","move","pageX","pageY","iterateVisibleNodes","tree","handleAfterOpenFolder","handleClosedFolder","handleFirstNode","handleNode","handleOpenFolder","isFirstNode","iterate","nextNode","mustIterateInside","is_open","hasChildren","offsetParent","childrenLength","children","length","forEach","_","i","child","nextChild","generateHitPositions","currentNode","hitPositions","lastTop","addHitPosition","push","height","clientHeight","generateHitAreasForGroup","hitAreas","positionsInGroup","bottom","positionCount","Math","min","areaHeight","round","areaTop","generateHitAreasFromPositions","treeBottom","previousTop","group","generateHitAreas","DragAndDropHandler","getNodeElement","getNodeElementForNode","getScrollLeft","getTree","onCanMove","onCanMoveTo","onDragMove","onDragStop","onIsMoveHandle","openNode","refreshElements","slide","hoveredArea","isDragging","currentItem","canMoveToArea","area","positionName","clear","dragElement","findHoveredArea","dimensions","getTreeDimensions","right","low","high","mid","treePosition","clientWidth","moveItem","positionInfo","movedNode","targetNode","previousParent","parent","doMove","moveNode","event","move_info","do_move","moved_node","original_event","originalEvent","previous_parent","target_node","isDefaultPrevented","mustCaptureElement","mustOpenFolderTimer","isFolder","removeDropHint","previousGhost","removeHitAreas","removeHover","startOpenFolderTimer","folder","openFolder","refresh","updateDropHint","stopOpenFolderTimer","openFolderDelay","openFolderTimer","setTimeout","clearTimeout","nodeElement","addDropHint","mouseCapture","target","mouseDrag","mouseStart","mouseStop","ElementsRenderer","$element","buttonLeft","closedIcon","dragAndDrop","isNodeSelected","onCreateLi","openedIcon","rtl","showEmptyFolder","tabIndex","openedIconElement","createButtonElement","closedIconElement","attachNodeData","li","div","createTextNode","nodeType","createDomElements","isRootNode","level","ul","createUl","createLi","createFolderLi","isSelected","buttonClasses","getButtonClasses","folderClasses","getFolderClasses","iconElement","className","setAttribute","buttonLink","cloneNode","titleSpan","createTitleSpan","Boolean","mustShowFolder","isEmptyFolder","createNodeLi","liClasses","classString","join","classes","undefined","setTreeItemAriaAttributes","role","is_loading","render","fromNode","renderFromNode","renderFromRoot","$previousLi","getLevel","empty","KeyHandler","handleKeyDown","e","canHandleKeyboard","isKeyHandled","selectedNode","getSelectedNode","key","moveDown","moveLeft","moveRight","moveUp","preventDefault","closeNode","isFocusOnTree","keyboardSupport","selectNode","originalSelectNode","addEventListener","getParent","getNextVisibleNode","deinit","removeEventListener","getPreviousVisibleNode","getPositionInfoFromMouseEvent","getPositionInfoFromTouch","touch","MouseHandler","handleClick","clickTarget","getClickTarget","type","onClickButton","stopPropagation","click_event","onClickTitle","handleContextmenu","closest","getNode","handleDblclick","mouseDown","button","result","handleMouseDown","cancelable","mouseMove","handleMouseMove","mouseUp","handleMouseUp","touchEnd","touches","touchMove","touchStart","getMouseDelay","onMouseCapture","onMouseDrag","onMouseStart","onMouseStop","useContextMenu","passive","isMouseStarted","mouseDelayTimer","isMouseDelayMet","mouseDownInfo","jqTreeElement","handleStartMouse","removeMouseMoveEventListeners","mouseDelay","startMouseDelayTimer","isNodeRecordWithChildren","Array","Node","nodeData","arguments","isRoot","nodeClass","load_on_demand","setData","idMapping","Map","createNode","getNodeClass","doRemoveChild","splice","getChildIndex","removeNodeFromIndex","loadChildrenFromData","nodeInfo","loadFromData","setParent","addNodeToIndex","addAfter","childIndex","addChildAtPosition","addBefore","addChild","index","id","set","addParent","newParent","originalParent","append","filter","f","indexOf","getData","includeParent","getDataFromNodes","nodes","map","tmpNode","k","getLastChild","lastChild","getNextNode","includeChildren","nextSibling","getNextSibling","nextIndex","getNodeByCallback","callback","getNodeById","nodeId","get","getNodeByName","getNodeByNameMustExist","Error","getNodesByProperty","getPreviousNode","previousSibling","getPreviousSibling","previousIndex","initFromData","addNode","addChildren","childrenData","isParentOf","_iterate","removeChildren","childData","prepend","removeChild","delete","o","BorderDropHint","scrollLeft","querySelector","hint","width","max","offsetWidth","GhostDropHint","ghost","createGhostElement","moveAfter","moveBefore","moveInsideOpenFolder","moveInside","circleSpan","lineSpan","childElement","NodeElement","init","getTitleSpan","getUl","mustShowBorderDropHint","deselect","removeAttribute","blur","select","mustSetFocus","toString","focus","FolderElement","getButton","close","animationSpeed","icon","doClose","slideUp","hide","open","doOpen","slideDown","show","SaveStateHandler","addToSelection","getSelectedNodes","onGetStateFromStorage","onSetStateFromStorage","removeFromSelection","saveState","saveStateOption","getKeyName","loadFromStorage","localStorage","getItem","openInitialNodes","nodeIds","mustLoadOnDemand","parseState","jsonData","state","selected_node","resetSelection","selectedNodes","selectInitialNodes","selectCount","getNodeIdToBeSelected","getStateFromStorage","getState","getOpenNodeIds","openNodes","getSelectedNodeIds","selectedNodeIds","open_nodes","stringify","setItem","setInitialState","setInitialStateOnDemand","cbFinished","loadingCount","newNodesIds","loadAndOpenNode","ContainerScrollParent","container","refreshHitAreas","getNewHorizontalScrollDirection","scrollParentOffset","rightEdge","leftEdge","isNearRightEdge","isNearLeftEdge","getNewVerticalScrollDirection","getScrollParentTop","getScrollParentBottom","scrollParentBottom","scrollParentTop","scrollHorizontally","horizontalScrollDirection","distance","scrollBy","behavior","bind","scrollVertically","verticalScrollDirection","checkHorizontalScrolling","newHorizontalScrollDirection","horizontalScrollTimeout","verticalScrollTimeout","checkVerticalScrolling","newVerticalScrollDirection","scrollToY","scrollTop","stopScrolling","DocumentScrollParent","canScrollDown","documentElement","getDocumentScrollHeight","canScrollRight","getDocumentScrollWidth","documentScrollHeight","scrollHeight","documentScrollWidth","scrollWidth","windowWidth","innerWidth","distanceTop","windowHeight","innerHeight","treeTop","isOverflow","overflowValue","hasOverFlow","getComputedStyle","overflowX","overflowY","getParentWithOverflow","parentElement","createScrollParent","tagName","ScrollHandler","scrollParent","getScrollParent","checkScrolling","SelectNodeHandler","Set","selectedSingleNode","getSelectedNodesUnder","has","register","widgetClass","widgetName","getDataKey","getWidgetData","el","dataKey","widget","SimpleWidget","createWidget","options","existingWidget","simpleWidgetClass","destroyWidget","destroy","removeData","callFunction","functionName","args","simpleWidget","widgetFunction","apply","fn","argument1","_len","_key","defaults","version","NODE_PARAM_IS_EMPTY","PARAM_IS_EMPTY","JqTreeWidget","autoOpen","dataUrl","onCanSelectNode","selectable","startDndDelay","connectHandlers","openNodeInternal","$treeElement","selectNodeHandler","dataLoader","saveStateHandler","scrollHandler","dndHandler","keyHandler","renderer","mouseHandler","toggle","doSelectNode","containsElement","createFolderElement","createNodeElement","deselectCurrentNode","deselectNodes","selectedNodesUnderParent","doLoadData","loadSubtree","initTree","parent_node","tree_data","doLoadDataFromUrl","urlInfoParam","getDataUrlInfo","optionsParam","defaultOptions","mustToggle","selectOptions","canSelect","previous_node","deselectedNode","deselected_node","openParents","getAutoOpenMaxLevel","parseInt","getUrlFromString","setUrlInfoData","selectedNodeId","getDefaultClosedIcon","liElement","getRtlOption","dataRtl","initData","doInit","isInitialized","activeElement","isSelectedNodeInSubtree","subtree","loadFolderOnDemand","doOpenNode","_node","_slide","_onFinished","folderElement","mustSelect","selectCurrentNode","restoreState","autoOpenNodes","maxLevel","isRestored","eventName","values","Event","trigger","addNodeAfter","newNodeInfo","existingNode","newNode","addNodeBefore","addParentNode","appendNode","parentNodeParam","slideParam","off","getNodeByHtmlElement","inputElement","HTMLElement","getVersion","__version__","loadDataFromUrl","param1","param2","param3","positionIndex","parseParams","prependNode","reload","removeNode","scrollToNode","setOption","option","setState","toJson","updateNode","idIsChanged"],"mappings":"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"}