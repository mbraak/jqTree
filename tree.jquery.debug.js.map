{"version":3,"file":"tree.jquery.debug.js","sources":["src/dataLoader.ts","src/position.ts","src/util.ts","src/dragAndDropHandler/binarySearch.ts","src/dragAndDropHandler/dragElement.ts","src/dragAndDropHandler/iterateVisibleNodes.ts","src/dragAndDropHandler/generateHitAreas.ts","src/dragAndDropHandler/index.ts","src/elementsRenderer.ts","src/keyHandler.ts","src/mouseUtils.ts","src/mouseHandler.ts","src/nodeUtils.ts","src/node.ts","src/nodeElement/borderDropHint.ts","src/nodeElement/ghostDropHint.ts","src/nodeElement/index.ts","src/nodeElement/folderElement.ts","src/saveStateHandler.ts","src/scrollHandler/containerScrollParent.ts","src/scrollHandler/documentScrollParent.ts","src/scrollHandler/createScrollParent.ts","src/scrollHandler.ts","src/selectNodeHandler.ts","src/simple.widget.ts","src/version.ts","src/tree.jquery.ts"],"sourcesContent":["import { LoadData, TriggerEvent } from \"./jqtreeMethodTypes\";\nimport { DataFilter, OnLoadFailed, OnLoading } from \"./jqtreeOptions\";\nimport { Node } from \"./node\";\n\nexport type HandleFinishedLoading = () => void;\n\ninterface DataLoaderParams {\n    dataFilter?: DataFilter;\n    loadData: LoadData;\n    onLoadFailed?: OnLoadFailed;\n    onLoading?: OnLoading;\n    treeElement: HTMLElement;\n    triggerEvent: TriggerEvent;\n}\n\nexport default class DataLoader {\n    private dataFilter?: DataFilter;\n    private loadData: LoadData;\n    private onLoadFailed?: OnLoadFailed;\n    private onLoading?: OnLoading;\n    private treeElement: HTMLElement;\n    private triggerEvent: TriggerEvent;\n\n    constructor({\n        dataFilter,\n        loadData,\n        onLoadFailed,\n        onLoading,\n        treeElement,\n        triggerEvent,\n    }: DataLoaderParams) {\n        this.dataFilter = dataFilter;\n        this.loadData = loadData;\n        this.onLoadFailed = onLoadFailed;\n        this.onLoading = onLoading;\n        this.treeElement = treeElement;\n        this.triggerEvent = triggerEvent;\n    }\n\n    public loadFromUrl(\n        urlInfo: JQuery.AjaxSettings | null | string,\n        parentNode: Node | null,\n        onFinished: HandleFinishedLoading | null,\n    ): void {\n        if (!urlInfo) {\n            return;\n        }\n\n        const element = this.getDomElement(parentNode);\n        this.addLoadingClass(element);\n        this.notifyLoading(true, parentNode, element);\n\n        const stopLoading = (): void => {\n            this.removeLoadingClass(element);\n            this.notifyLoading(false, parentNode, element);\n        };\n\n        const handleSuccess = (data: NodeData[] | string): void => {\n            stopLoading();\n            this.loadData(this.parseData(data), parentNode);\n\n            if (onFinished && typeof onFinished === \"function\") {\n                onFinished();\n            }\n        };\n\n        const handleError = (jqXHR: JQuery.jqXHR): void => {\n            stopLoading();\n\n            if (this.onLoadFailed) {\n                this.onLoadFailed(jqXHR);\n            }\n        };\n\n        this.submitRequest(urlInfo, handleSuccess, handleError);\n    }\n\n    private addLoadingClass(element: HTMLElement): void {\n        element.classList.add(\"jqtree-loading\");\n    }\n\n    private getDomElement(parentNode: Node | null): HTMLElement {\n        if (parentNode?.element) {\n            return parentNode.element;\n        } else {\n            return this.treeElement;\n        }\n    }\n\n    private notifyLoading(\n        isLoading: boolean,\n        node: Node | null,\n        element: HTMLElement,\n    ): void {\n        const $el = jQuery(element);\n\n        if (this.onLoading) {\n            this.onLoading(isLoading, node, $el);\n        }\n\n        this.triggerEvent(\"tree.loading_data\", {\n            $el,\n            isLoading,\n            node,\n        });\n    }\n\n    private parseData(data: NodeData[] | string): NodeData[] {\n        const getParsedData = () => {\n            if (typeof data === \"string\") {\n                return JSON.parse(data) as NodeData[];\n            } else {\n                return data;\n            }\n        };\n\n        const parsedData = getParsedData();\n\n        if (this.dataFilter) {\n            return this.dataFilter(parsedData);\n        } else {\n            return parsedData;\n        }\n    }\n\n    private removeLoadingClass(element: HTMLElement): void {\n        element.classList.remove(\"jqtree-loading\");\n    }\n\n    private submitRequest(\n        urlInfoInput: JQuery.AjaxSettings | string,\n        handleSuccess: JQuery.Ajax.SuccessCallback<any>,\n        handleError: JQuery.Ajax.ErrorCallback<any>,\n    ): void {\n        const urlInfo =\n            typeof urlInfoInput === \"string\"\n                ? { url: urlInfoInput }\n                : urlInfoInput;\n\n        const ajaxSettings: JQuery.AjaxSettings = {\n            cache: false,\n            dataType: \"json\",\n            error: handleError,\n            method: \"GET\",\n            success: handleSuccess,\n            ...urlInfo,\n        };\n\n        ajaxSettings.method = ajaxSettings.method?.toUpperCase() ?? \"GET\";\n\n        void jQuery.ajax(ajaxSettings);\n    }\n}\n","export enum Position {\n    Before = 1,\n    After,\n    Inside,\n    None,\n}\n\nconst positionNames: Record<string, Position> = {\n    after: Position.After,\n    before: Position.Before,\n    inside: Position.Inside,\n    none: Position.None,\n};\n\nexport const getPositionName = (position: Position): string => {\n    for (const name in positionNames) {\n        if (Object.prototype.hasOwnProperty.call(positionNames, name)) {\n            if (positionNames[name] === position) {\n                return name;\n            }\n        }\n    }\n\n    return \"\";\n};\n\nexport const getPosition = (name: string): Position | undefined =>\n    positionNames[name];\n","export const isInt = (n: unknown): boolean =>\n    typeof n === \"number\" && n % 1 === 0;\n\nexport const isFunction = (v: unknown): boolean => typeof v === \"function\";\n\nexport const getBoolString = (value: unknown): string =>\n    value ? \"true\" : \"false\";\n\nexport const getOffsetTop = (element: HTMLElement) =>\n    getElementPosition(element).top;\n\nexport const getElementPosition = (element: HTMLElement) => {\n    const rect = element.getBoundingClientRect();\n\n    return {\n        left: rect.x + window.scrollX,\n        top: rect.y + window.scrollY,\n    };\n};\n","function binarySearch<T>(items: T[], compareFn: (a: T) => number): null | T {\n    let low = 0;\n    let high = items.length;\n\n    while (low < high) {\n        const mid = (low + high) >> 1;\n        const item = items[mid];\n\n        if (item === undefined) {\n            return null;\n        }\n\n        const compareResult = compareFn(item);\n\n        if (compareResult > 0) {\n            high = mid;\n        } else if (compareResult < 0) {\n            low = mid + 1;\n        } else {\n            return item;\n        }\n    }\n\n    return null;\n}\n\nexport default binarySearch;\n","interface DragElementParams {\n    autoEscape: boolean;\n    nodeName: string;\n    offsetX: number;\n    offsetY: number;\n    treeElement: HTMLElement;\n}\n\nclass DragElement {\n    private element: HTMLElement;\n    private offsetX: number;\n    private offsetY: number;\n\n    constructor({\n        autoEscape,\n        nodeName,\n        offsetX,\n        offsetY,\n        treeElement,\n    }: DragElementParams) {\n        this.offsetX = offsetX;\n        this.offsetY = offsetY;\n\n        this.element = this.createElement(nodeName, autoEscape);\n\n        treeElement.appendChild(this.element);\n    }\n\n    public move(pageX: number, pageY: number): void {\n        this.element.style.left = `${pageX - this.offsetX}px`;\n        this.element.style.top = `${pageY - this.offsetY}px`;\n    }\n\n    public remove(): void {\n        this.element.remove();\n    }\n\n    private createElement(nodeName: string, autoEscape: boolean) {\n        const element = document.createElement(\"span\");\n        element.classList.add(\"jqtree-title\", \"jqtree-dragging\");\n\n        if (autoEscape) {\n            element.textContent = nodeName;\n        } else {\n            element.innerHTML = nodeName;\n        }\n\n        element.style.position = \"absolute\";\n\n        return element;\n    }\n}\n\nexport default DragElement;\n","import { Node } from \"../node\";\n\ninterface Options {\n    handleAfterOpenFolder: (node: Node, nextNode: Node | null) => void;\n    handleClosedFolder: (\n        node: Node,\n        nextNode: Node | null,\n        element: HTMLElement,\n    ) => void;\n    handleFirstNode: (node: Node) => void;\n    handleNode: (\n        node: Node,\n        nextNode: Node | null,\n        element: HTMLElement,\n    ) => void;\n\n    /*\n    override\n    return\n        - true: continue iterating\n        - false: stop iterating\n    */\n    handleOpenFolder: (node: Node, element: HTMLElement) => boolean;\n}\n\nconst iterateVisibleNodes = (\n    tree: Node,\n    {\n        handleAfterOpenFolder,\n        handleClosedFolder,\n        handleFirstNode,\n        handleNode,\n        handleOpenFolder,\n    }: Options,\n) => {\n    let isFirstNode = true;\n\n    const iterate = (node: Node, nextNode: Node | null): void => {\n        let mustIterateInside =\n            (node.is_open || !node.element) && node.hasChildren();\n\n        let element: HTMLElement | null = null;\n\n        // Is the element visible?\n        if (node.element?.offsetParent) {\n            element = node.element;\n\n            if (isFirstNode) {\n                handleFirstNode(node);\n                isFirstNode = false;\n            }\n\n            if (!node.hasChildren()) {\n                handleNode(node, nextNode, node.element);\n            } else if (node.is_open) {\n                if (!handleOpenFolder(node, node.element)) {\n                    mustIterateInside = false;\n                }\n            } else {\n                handleClosedFolder(node, nextNode, element);\n            }\n        }\n\n        if (mustIterateInside) {\n            const childrenLength = node.children.length;\n            node.children.forEach((_, i) => {\n                const child = node.children[i];\n\n                if (child) {\n                    if (i === childrenLength - 1) {\n                        iterate(child, null);\n                    } else {\n                        const nextChild = node.children[i + 1];\n\n                        if (nextChild) {\n                            iterate(child, nextChild);\n                        }\n                    }\n                }\n            });\n\n            if (node.is_open && element) {\n                handleAfterOpenFolder(node, nextNode);\n            }\n        }\n    };\n\n    iterate(tree, null);\n};\n\nexport default iterateVisibleNodes;\n","import { Node } from \"../node\";\nimport { Position } from \"../position\";\nimport { getOffsetTop } from \"../util\";\nimport iterateVisibleNodes from \"./iterateVisibleNodes\";\nimport { HitArea } from \"./types\";\n\ninterface HitPosition {\n    node: Node;\n    position: Position;\n    top: number;\n}\n\nexport const generateHitPositions = (\n    tree: Node,\n    currentNode: Node,\n): HitPosition[] => {\n    const hitPositions: HitPosition[] = [];\n    let lastTop = 0;\n\n    const addHitPosition = (node: Node, position: number, top: number) => {\n        hitPositions.push({\n            node,\n            position,\n            top,\n        });\n        lastTop = top;\n    };\n\n    const handleAfterOpenFolder = (node: Node, nextNode: Node | null) => {\n        if (node === currentNode || nextNode === currentNode) {\n            // Cannot move before or after current item\n            addHitPosition(node, Position.None, lastTop);\n        } else {\n            addHitPosition(node, Position.After, lastTop);\n        }\n    };\n\n    const handleClosedFolder = (\n        node: Node,\n        nextNode: Node | null,\n        element: HTMLElement,\n    ) => {\n        const top = getOffsetTop(element);\n\n        if (node === currentNode) {\n            // Cannot move after current item\n            addHitPosition(node, Position.None, top);\n        } else {\n            addHitPosition(node, Position.Inside, top);\n\n            // Cannot move before current item\n            if (nextNode !== currentNode) {\n                addHitPosition(node, Position.After, top);\n            }\n        }\n    };\n\n    const handleFirstNode = (node: Node) => {\n        if (node !== currentNode && node.element) {\n            addHitPosition(node, Position.Before, getOffsetTop(node.element));\n        }\n    };\n\n    const handleNode = (\n        node: Node,\n        nextNode: Node | null,\n        element: HTMLElement,\n    ) => {\n        const top = getOffsetTop(element);\n\n        if (node === currentNode) {\n            // Cannot move inside current item\n            addHitPosition(node, Position.None, top);\n        } else {\n            addHitPosition(node, Position.Inside, top);\n        }\n\n        if (nextNode === currentNode || node === currentNode) {\n            // Cannot move before or after current item\n            addHitPosition(node, Position.None, top);\n        } else {\n            addHitPosition(node, Position.After, top);\n        }\n    };\n\n    const handleOpenFolder = (node: Node, element: HTMLElement) => {\n        if (node === currentNode) {\n            // Cannot move inside current item\n\n            // Dnd over the current element is not possible: add a position with type None for the top and the bottom.\n            const top = getOffsetTop(element);\n            const height = element.clientHeight;\n            addHitPosition(node, Position.None, top);\n\n            if (height > 5) {\n                // Subtract 5 pixels to allow more space for the next element.\n                addHitPosition(node, Position.None, top + height - 5);\n            }\n\n            // Stop iterating\n            return false;\n        }\n\n        // Cannot move before current item\n        if (node.children[0] !== currentNode) {\n            addHitPosition(node, Position.Inside, getOffsetTop(element));\n        }\n\n        // Continue iterating\n        return true;\n    };\n\n    iterateVisibleNodes(tree, {\n        handleAfterOpenFolder,\n        handleClosedFolder,\n        handleFirstNode,\n        handleNode,\n        handleOpenFolder,\n    });\n\n    return hitPositions;\n};\n\nexport const generateHitAreasForGroup = (\n    hitAreas: HitArea[],\n    positionsInGroup: HitPosition[],\n    top: number,\n    bottom: number,\n) => {\n    // limit positions in group\n    const positionCount = Math.min(positionsInGroup.length, 4);\n\n    const areaHeight = Math.round((bottom - top) / positionCount);\n    let areaTop = top;\n\n    for (let i = 0; i < positionCount; i++) {\n        const position = positionsInGroup[i] as HitPosition;\n\n        if (position.position !== Position.None) {\n            hitAreas.push({\n                bottom: areaTop + areaHeight,\n                node: position.node,\n                position: position.position,\n                top: areaTop,\n            });\n        }\n\n        areaTop += areaHeight;\n    }\n};\n\nexport const generateHitAreasFromPositions = (\n    hitPositions: HitPosition[],\n    treeBottom: number,\n): HitArea[] => {\n    if (!hitPositions.length) {\n        return [];\n    }\n\n    let previousTop = (hitPositions[0] as HitPosition).top;\n    let group: HitPosition[] = [];\n    const hitAreas: HitArea[] = [];\n\n    for (const position of hitPositions) {\n        if (position.top !== previousTop && group.length) {\n            generateHitAreasForGroup(\n                hitAreas,\n                group,\n                previousTop,\n                position.top,\n            );\n\n            previousTop = position.top;\n            group = [];\n        }\n\n        group.push(position);\n    }\n\n    generateHitAreasForGroup(hitAreas, group, previousTop, treeBottom);\n\n    return hitAreas;\n};\n\nconst generateHitAreas = (tree: Node, currentNode: Node, treeBottom: number) =>\n    generateHitAreasFromPositions(\n        generateHitPositions(tree, currentNode),\n        treeBottom,\n    );\n\nexport default generateHitAreas;\n","import {\n    GetScrollLeft,\n    GetTree,\n    OpenNode,\n    RefreshElements,\n    TriggerEvent,\n} from \"../jqtreeMethodTypes\";\nimport {\n    DragMethod,\n    OnCanMove,\n    OnCanMoveTo,\n    OnIsMoveHandle,\n} from \"../jqtreeOptions\";\nimport { PositionInfo } from \"../mouseUtils\";\nimport { Node } from \"../node\";\nimport NodeElement from \"../nodeElement\";\nimport { getPositionName, Position } from \"../position\";\nimport { getElementPosition } from \"../util\";\nimport binarySearch from \"./binarySearch\";\nimport DragElement from \"./dragElement\";\nimport generateHitAreas from \"./generateHitAreas\";\nimport { DropHint, HitArea } from \"./types\";\n\ninterface Dimensions {\n    bottom: number;\n    left: number;\n    right: number;\n    top: number;\n}\n\ninterface DragAndDropHandlerParams {\n    autoEscape?: boolean;\n    getNodeElement: GetNodeElement;\n    getNodeElementForNode: GetNodeElementForNode;\n    getScrollLeft: GetScrollLeft;\n    getTree: GetTree;\n    onCanMove?: OnCanMove;\n    onCanMoveTo?: OnCanMoveTo;\n    onDragMove?: DragMethod;\n    onDragStop?: DragMethod;\n    onIsMoveHandle?: OnIsMoveHandle;\n    openFolderDelay: false | number;\n    openNode: OpenNode;\n    refreshElements: RefreshElements;\n    slide: boolean;\n    treeElement: HTMLElement;\n    triggerEvent: TriggerEvent;\n}\ntype GetNodeElement = (element: HTMLElement) => NodeElement | null;\n\ntype GetNodeElementForNode = (node: Node) => NodeElement;\n\nexport class DragAndDropHandler {\n    public currentItem: NodeElement | null;\n    public hitAreas: HitArea[];\n    public hoveredArea: HitArea | null;\n    public isDragging: boolean;\n\n    private autoEscape?: boolean;\n    private dragElement: DragElement | null;\n    private getNodeElement: GetNodeElement;\n    private getNodeElementForNode: GetNodeElementForNode;\n    private getScrollLeft: GetScrollLeft;\n    private getTree: GetTree;\n    private onCanMove?: OnCanMove;\n    private onCanMoveTo?: OnCanMoveTo;\n    private onDragMove?: DragMethod;\n    private onDragStop?: DragMethod;\n    private onIsMoveHandle?: OnIsMoveHandle;\n    private openFolderDelay: false | number;\n    private openFolderTimer: null | number;\n    private openNode: OpenNode;\n    private previousGhost: DropHint | null;\n    private refreshElements: RefreshElements;\n    private slide: boolean;\n    private treeElement: HTMLElement;\n    private triggerEvent: TriggerEvent;\n\n    constructor({\n        autoEscape,\n        getNodeElement,\n        getNodeElementForNode,\n        getScrollLeft,\n        getTree,\n        onCanMove,\n        onCanMoveTo,\n        onDragMove,\n        onDragStop,\n        onIsMoveHandle,\n        openNode,\n        refreshElements,\n        slide,\n        treeElement,\n        triggerEvent,\n    }: DragAndDropHandlerParams) {\n        this.autoEscape = autoEscape;\n        this.getNodeElement = getNodeElement;\n        this.getNodeElementForNode = getNodeElementForNode;\n        this.getScrollLeft = getScrollLeft;\n        this.getTree = getTree;\n        this.onCanMove = onCanMove;\n        this.onCanMoveTo = onCanMoveTo;\n        this.onDragMove = onDragMove;\n        this.onDragStop = onDragStop;\n        this.onIsMoveHandle = onIsMoveHandle;\n        this.openNode = openNode;\n        this.refreshElements = refreshElements;\n        this.slide = slide;\n        this.treeElement = treeElement;\n        this.triggerEvent = triggerEvent;\n\n        this.hoveredArea = null;\n        this.hitAreas = [];\n        this.isDragging = false;\n        this.currentItem = null;\n    }\n\n    public mouseCapture(positionInfo: PositionInfo): boolean | null {\n        const element = positionInfo.target;\n\n        if (!this.mustCaptureElement(element)) {\n            return null;\n        }\n\n        if (this.onIsMoveHandle && !this.onIsMoveHandle(jQuery(element))) {\n            return null;\n        }\n\n        let nodeElement = this.getNodeElement(element);\n\n        if (nodeElement && this.onCanMove) {\n            if (!this.onCanMove(nodeElement.node)) {\n                nodeElement = null;\n            }\n        }\n\n        this.currentItem = nodeElement;\n        return this.currentItem != null;\n    }\n\n    public mouseDrag(positionInfo: PositionInfo): boolean {\n        if (!this.currentItem || !this.dragElement) {\n            return false;\n        }\n\n        this.dragElement.move(positionInfo.pageX, positionInfo.pageY);\n\n        const area = this.findHoveredArea(\n            positionInfo.pageX,\n            positionInfo.pageY,\n        );\n\n        if (area && this.canMoveToArea(area, this.currentItem)) {\n            if (!area.node.isFolder()) {\n                this.stopOpenFolderTimer();\n            }\n\n            if (this.hoveredArea !== area) {\n                this.hoveredArea = area;\n\n                // If this is a closed folder, start timer to open it\n                if (this.mustOpenFolderTimer(area)) {\n                    this.startOpenFolderTimer(area.node);\n                } else {\n                    this.stopOpenFolderTimer();\n                }\n\n                this.updateDropHint();\n            }\n        } else {\n            this.removeDropHint();\n            this.stopOpenFolderTimer();\n            this.hoveredArea = area;\n        }\n\n        if (!area) {\n            if (this.onDragMove) {\n                this.onDragMove(\n                    this.currentItem.node,\n                    positionInfo.originalEvent,\n                );\n            }\n        }\n\n        return true;\n    }\n\n    public mouseStart(positionInfo: PositionInfo): boolean {\n        if (!this.currentItem) {\n            return false;\n        }\n\n        this.refresh();\n\n        const { left, top } = getElementPosition(positionInfo.target);\n\n        const node = this.currentItem.node;\n\n        this.dragElement = new DragElement({\n            autoEscape: this.autoEscape ?? true,\n            nodeName: node.name,\n            offsetX: positionInfo.pageX - left,\n            offsetY: positionInfo.pageY - top,\n            treeElement: this.treeElement,\n        });\n\n        this.isDragging = true;\n        this.currentItem.element.classList.add(\"jqtree-moving\");\n\n        return true;\n    }\n\n    public mouseStop(positionInfo: PositionInfo): boolean {\n        this.moveItem(positionInfo);\n        this.clear();\n        this.removeHover();\n        this.removeDropHint();\n        this.removeHitAreas();\n\n        const currentItem = this.currentItem;\n\n        if (this.currentItem) {\n            this.currentItem.element.classList.remove(\"jqtree-moving\");\n            this.currentItem = null;\n        }\n\n        this.isDragging = false;\n\n        if (!this.hoveredArea && currentItem) {\n            if (this.onDragStop) {\n                this.onDragStop(currentItem.node, positionInfo.originalEvent);\n            }\n        }\n\n        return false;\n    }\n\n    public refresh(): void {\n        this.removeHitAreas();\n\n        if (this.currentItem) {\n            const currentNode = this.currentItem.node;\n            this.generateHitAreas(currentNode);\n            this.currentItem = this.getNodeElementForNode(currentNode);\n\n            if (this.isDragging) {\n                this.currentItem.element.classList.add(\"jqtree-moving\");\n            }\n        }\n    }\n\n    private canMoveToArea(area: HitArea, currentItem: NodeElement): boolean {\n        if (!this.onCanMoveTo) {\n            return true;\n        }\n\n        const positionName = getPositionName(area.position);\n\n        return this.onCanMoveTo(currentItem.node, area.node, positionName);\n    }\n\n    private clear(): void {\n        if (this.dragElement) {\n            this.dragElement.remove();\n            this.dragElement = null;\n        }\n    }\n\n    private findHoveredArea(x: number, y: number): HitArea | null {\n        const dimensions = this.getTreeDimensions();\n\n        if (\n            x < dimensions.left ||\n            y < dimensions.top ||\n            x > dimensions.right ||\n            y > dimensions.bottom\n        ) {\n            return null;\n        }\n\n        return binarySearch<HitArea>(this.hitAreas, (area) => {\n            if (y < area.top) {\n                return 1;\n            } else if (y > area.bottom) {\n                return -1;\n            } else {\n                return 0;\n            }\n        });\n    }\n\n    private generateHitAreas(currentNode: Node): void {\n        const tree = this.getTree();\n\n        if (!tree) {\n            this.hitAreas = [];\n        } else {\n            this.hitAreas = generateHitAreas(\n                tree,\n                currentNode,\n                this.getTreeDimensions().bottom,\n            );\n        }\n    }\n\n    private getTreeDimensions(): Dimensions {\n        // Return the dimensions of the tree. Add a margin to the bottom to allow\n        // to drag-and-drop after the last element.\n        const treePosition = getElementPosition(this.treeElement);\n        const left = treePosition.left + this.getScrollLeft();\n        const top = treePosition.top;\n\n        return {\n            bottom: top + this.treeElement.clientHeight + 16,\n            left,\n            right: left + this.treeElement.clientWidth,\n            top,\n        };\n    }\n\n    /* Move the dragged node to the selected position in the tree. */\n    private moveItem(positionInfo: PositionInfo): void {\n        if (\n            this.currentItem &&\n            this.hoveredArea &&\n            this.hoveredArea.position !== Position.None &&\n            this.canMoveToArea(this.hoveredArea, this.currentItem)\n        ) {\n            const movedNode = this.currentItem.node;\n            const targetNode = this.hoveredArea.node;\n            const position = this.hoveredArea.position;\n            const previousParent = movedNode.parent;\n\n            if (position === Position.Inside) {\n                this.hoveredArea.node.is_open = true;\n            }\n\n            const doMove = (): void => {\n                const tree = this.getTree();\n\n                if (tree) {\n                    tree.moveNode(movedNode, targetNode, position);\n\n                    this.treeElement.textContent = \"\";\n                    this.refreshElements(null);\n                }\n            };\n\n            const event = this.triggerEvent(\"tree.move\", {\n                move_info: {\n                    do_move: doMove,\n                    moved_node: movedNode,\n                    original_event: positionInfo.originalEvent,\n                    position: getPositionName(position),\n                    previous_parent: previousParent,\n                    target_node: targetNode,\n                },\n            });\n\n            if (!event.isDefaultPrevented()) {\n                doMove();\n            }\n        }\n    }\n\n    private mustCaptureElement(element: HTMLElement): boolean {\n        const nodeName = element.nodeName;\n\n        return (\n            nodeName !== \"INPUT\" &&\n            nodeName !== \"SELECT\" &&\n            nodeName !== \"TEXTAREA\"\n        );\n    }\n\n    private mustOpenFolderTimer(area: HitArea): boolean {\n        const node = area.node;\n\n        return (\n            node.isFolder() &&\n            !node.is_open &&\n            area.position === Position.Inside\n        );\n    }\n\n    private removeDropHint(): void {\n        if (this.previousGhost) {\n            this.previousGhost.remove();\n        }\n    }\n\n    private removeHitAreas(): void {\n        this.hitAreas = [];\n    }\n\n    private removeHover(): void {\n        this.hoveredArea = null;\n    }\n\n    private startOpenFolderTimer(folder: Node): void {\n        const openFolder = (): void => {\n            this.openNode(folder, this.slide, () => {\n                this.refresh();\n                this.updateDropHint();\n            });\n        };\n\n        this.stopOpenFolderTimer();\n\n        const openFolderDelay = this.openFolderDelay;\n\n        if (openFolderDelay !== false) {\n            this.openFolderTimer = window.setTimeout(\n                openFolder,\n                openFolderDelay,\n            );\n        }\n    }\n\n    private stopOpenFolderTimer(): void {\n        if (this.openFolderTimer) {\n            clearTimeout(this.openFolderTimer);\n            this.openFolderTimer = null;\n        }\n    }\n\n    private updateDropHint(): void {\n        if (!this.hoveredArea) {\n            return;\n        }\n\n        // remove previous drop hint\n        this.removeDropHint();\n\n        // add new drop hint\n        const nodeElement = this.getNodeElementForNode(this.hoveredArea.node);\n        this.previousGhost = nodeElement.addDropHint(this.hoveredArea.position);\n    }\n}\n","import { GetTree, IsNodeSelected } from \"./jqtreeMethodTypes\";\nimport { IconElement, OnCreateLi } from \"./jqtreeOptions\";\nimport { Node } from \"./node\";\nimport { getBoolString } from \"./util\";\n\ninterface ElementsRendererParams {\n    $element: JQuery;\n    autoEscape: boolean;\n    buttonLeft: boolean;\n    closedIcon?: IconElement;\n    dragAndDrop: boolean;\n    getTree: GetTree;\n    isNodeSelected: IsNodeSelected;\n    onCreateLi?: OnCreateLi;\n    openedIcon?: IconElement;\n    rtl?: boolean;\n    showEmptyFolder: boolean;\n    tabIndex?: number;\n}\n\nexport default class ElementsRenderer {\n    public closedIconElement?: HTMLElement | Text;\n    public openedIconElement?: HTMLElement | Text;\n    private $element: JQuery;\n    private autoEscape: boolean;\n    private buttonLeft: boolean;\n    private dragAndDrop: boolean;\n    private getTree: GetTree;\n    private isNodeSelected: IsNodeSelected;\n    private onCreateLi?: OnCreateLi;\n    private rtl?: boolean;\n\n    private showEmptyFolder: boolean;\n    private tabIndex?: number;\n\n    constructor({\n        $element,\n        autoEscape,\n        buttonLeft,\n        closedIcon,\n        dragAndDrop,\n        getTree,\n        isNodeSelected,\n        onCreateLi,\n        openedIcon,\n        rtl,\n        showEmptyFolder,\n        tabIndex,\n    }: ElementsRendererParams) {\n        this.autoEscape = autoEscape;\n        this.buttonLeft = buttonLeft;\n        this.dragAndDrop = dragAndDrop;\n        this.$element = $element;\n        this.getTree = getTree;\n        this.isNodeSelected = isNodeSelected;\n        this.onCreateLi = onCreateLi;\n        this.rtl = rtl;\n        this.showEmptyFolder = showEmptyFolder;\n        this.tabIndex = tabIndex;\n        this.openedIconElement = this.createButtonElement(openedIcon ?? \"+\");\n        this.closedIconElement = this.createButtonElement(closedIcon ?? \"-\");\n    }\n\n    public render(fromNode: Node | null): void {\n        if (fromNode?.parent) {\n            this.renderFromNode(fromNode);\n        } else {\n            this.renderFromRoot();\n        }\n    }\n\n    public renderFromNode(node: Node): void {\n        if (!node.element) {\n            return;\n        }\n\n        // remember current li\n        const $previousLi = jQuery(node.element);\n\n        // create element\n        const li = this.createLi(node, node.getLevel());\n\n        // add element to dom\n        $previousLi.after(li);\n\n        // remove previous li\n        $previousLi.remove();\n\n        // create children\n        this.createDomElements(li, node.children, false, node.getLevel() + 1);\n    }\n\n    public renderFromRoot(): void {\n        this.$element.empty();\n\n        const tree = this.getTree();\n\n        if (this.$element[0] && tree) {\n            this.createDomElements(this.$element[0], tree.children, true, 1);\n        }\n    }\n\n    private attachNodeData(node: Node, li: HTMLElement): void {\n        node.element = li;\n        jQuery(li).data(\"node\", node);\n    }\n\n    private createButtonElement(\n        value: IconElement,\n    ): HTMLElement | Text | undefined {\n        if (typeof value === \"string\") {\n            // convert value to html\n            const div = document.createElement(\"div\");\n            div.innerHTML = value;\n\n            return document.createTextNode(div.innerHTML);\n        } else if ((value as HTMLElement).nodeType) {\n            return value as HTMLElement;\n        } else {\n            return jQuery(value)[0];\n        }\n    }\n\n    private createDomElements(\n        element: Element,\n        children: Node[],\n        isRootNode: boolean,\n        level: number,\n    ): void {\n        const ul = this.createUl(isRootNode);\n        element.appendChild(ul);\n\n        for (const child of children) {\n            const li = this.createLi(child, level);\n            ul.appendChild(li);\n\n            if (child.hasChildren()) {\n                this.createDomElements(li, child.children, false, level + 1);\n            }\n        }\n    }\n\n    private createFolderLi(\n        node: Node,\n        level: number,\n        isSelected: boolean,\n    ): HTMLLIElement {\n        const buttonClasses = this.getButtonClasses(node);\n        const folderClasses = this.getFolderClasses(node, isSelected);\n\n        const iconElement = node.is_open\n            ? this.openedIconElement\n            : this.closedIconElement;\n\n        // li\n        const li = document.createElement(\"li\");\n        li.className = `jqtree_common ${folderClasses}`;\n        li.setAttribute(\"role\", \"none\");\n\n        // div\n        const div = document.createElement(\"div\");\n        div.className = \"jqtree-element jqtree_common\";\n        div.setAttribute(\"role\", \"none\");\n\n        li.appendChild(div);\n\n        // button link\n        const buttonLink = document.createElement(\"a\");\n        buttonLink.className = buttonClasses;\n\n        if (iconElement) {\n            buttonLink.appendChild(iconElement.cloneNode(true));\n        }\n\n        if (this.buttonLeft) {\n            div.appendChild(buttonLink);\n        }\n\n        // title span\n        const titleSpan = this.createTitleSpan(\n            node.name,\n            isSelected,\n            true,\n            level,\n        );\n        titleSpan.setAttribute(\"aria-expanded\", getBoolString(node.is_open));\n        div.appendChild(titleSpan);\n\n        if (!this.buttonLeft) {\n            div.appendChild(buttonLink);\n        }\n\n        return li;\n    }\n\n    /* Create the <li> element\n     * Attach it to node.element.\n     * Call onCreateLi\n     */\n    private createLi(node: Node, level: number): HTMLLIElement {\n        const isSelected = Boolean(this.isNodeSelected(node));\n\n        const mustShowFolder =\n            node.isFolder() || (node.isEmptyFolder && this.showEmptyFolder);\n\n        const li = mustShowFolder\n            ? this.createFolderLi(node, level, isSelected)\n            : this.createNodeLi(node, level, isSelected);\n\n        this.attachNodeData(node, li);\n\n        if (this.onCreateLi) {\n            this.onCreateLi(node, jQuery(li), isSelected);\n        }\n\n        return li;\n    }\n\n    private createNodeLi(\n        node: Node,\n        level: number,\n        isSelected: boolean,\n    ): HTMLLIElement {\n        const liClasses = [\"jqtree_common\"];\n\n        if (isSelected) {\n            liClasses.push(\"jqtree-selected\");\n        }\n\n        const classString = liClasses.join(\" \");\n\n        // li\n        const li = document.createElement(\"li\");\n        li.className = classString;\n        li.setAttribute(\"role\", \"none\");\n\n        // div\n        const div = document.createElement(\"div\");\n        div.className = \"jqtree-element jqtree_common\";\n        div.setAttribute(\"role\", \"none\");\n\n        li.appendChild(div);\n\n        // title span\n        const titleSpan = this.createTitleSpan(\n            node.name,\n            isSelected,\n            false,\n            level,\n        );\n        div.appendChild(titleSpan);\n\n        return li;\n    }\n\n    private createTitleSpan(\n        nodeName: string,\n        isSelected: boolean,\n        isFolder: boolean,\n        level: number,\n    ): HTMLSpanElement {\n        const titleSpan = document.createElement(\"span\");\n\n        let classes = \"jqtree-title jqtree_common\";\n\n        if (isFolder) {\n            classes += \" jqtree-title-folder\";\n        }\n\n        classes += ` jqtree-title-button-${this.buttonLeft ? \"left\" : \"right\"}`;\n\n        titleSpan.className = classes;\n\n        if (isSelected) {\n            const tabIndex = this.tabIndex;\n\n            if (tabIndex !== undefined) {\n                titleSpan.setAttribute(\"tabindex\", `${tabIndex}`);\n            }\n        }\n\n        this.setTreeItemAriaAttributes(titleSpan, nodeName, level, isSelected);\n\n        if (this.autoEscape) {\n            titleSpan.textContent = nodeName;\n        } else {\n            titleSpan.innerHTML = nodeName;\n        }\n\n        return titleSpan;\n    }\n\n    private createUl(isRootNode: boolean): HTMLUListElement {\n        let classString;\n        let role;\n\n        if (!isRootNode) {\n            classString = \"\";\n            role = \"group\";\n        } else {\n            classString = \"jqtree-tree\";\n            role = \"tree\";\n\n            if (this.rtl) {\n                classString += \" jqtree-rtl\";\n            }\n        }\n\n        if (this.dragAndDrop) {\n            classString += \" jqtree-dnd\";\n        }\n\n        const ul = document.createElement(\"ul\");\n        ul.className = `jqtree_common ${classString}`;\n\n        ul.setAttribute(\"role\", role);\n\n        return ul;\n    }\n\n    private getButtonClasses(node: Node): string {\n        const classes = [\"jqtree-toggler\", \"jqtree_common\"];\n\n        if (!node.is_open) {\n            classes.push(\"jqtree-closed\");\n        }\n\n        if (this.buttonLeft) {\n            classes.push(\"jqtree-toggler-left\");\n        } else {\n            classes.push(\"jqtree-toggler-right\");\n        }\n\n        return classes.join(\" \");\n    }\n\n    private getFolderClasses(node: Node, isSelected: boolean): string {\n        const classes = [\"jqtree-folder\"];\n\n        if (!node.is_open) {\n            classes.push(\"jqtree-closed\");\n        }\n\n        if (isSelected) {\n            classes.push(\"jqtree-selected\");\n        }\n\n        if (node.is_loading) {\n            classes.push(\"jqtree-loading\");\n        }\n\n        return classes.join(\" \");\n    }\n\n    private setTreeItemAriaAttributes(\n        element: HTMLElement,\n        name: string,\n        level: number,\n        isSelected: boolean,\n    ) {\n        element.setAttribute(\"aria-label\", name);\n        element.setAttribute(\"aria-level\", `${level}`);\n        element.setAttribute(\"aria-selected\", getBoolString(isSelected));\n        element.setAttribute(\"role\", \"treeitem\");\n    }\n}\n","import {\n    CloseNode,\n    GetSelectedNode,\n    IsFocusOnTree,\n    OpenNode,\n    SelectNode,\n} from \"./jqtreeMethodTypes\";\nimport { Node } from \"./node\";\n\ninterface KeyHandlerParams {\n    closeNode: CloseNode;\n    getSelectedNode: GetSelectedNode;\n    isFocusOnTree: IsFocusOnTree;\n    keyboardSupport: boolean;\n    openNode: OpenNode;\n    selectNode: SelectNode;\n}\n\nexport default class KeyHandler {\n    private closeNode: CloseNode;\n    private getSelectedNode: GetSelectedNode;\n\n    private isFocusOnTree: IsFocusOnTree;\n\n    private keyboardSupport: boolean;\n    private openNode: OpenNode;\n    private originalSelectNode: SelectNode;\n    constructor({\n        closeNode,\n        getSelectedNode,\n        isFocusOnTree,\n        keyboardSupport,\n        openNode,\n        selectNode,\n    }: KeyHandlerParams) {\n        this.closeNode = closeNode;\n        this.getSelectedNode = getSelectedNode;\n        this.isFocusOnTree = isFocusOnTree;\n        this.keyboardSupport = keyboardSupport;\n        this.openNode = openNode;\n        this.originalSelectNode = selectNode;\n\n        if (keyboardSupport) {\n            document.addEventListener(\"keydown\", this.handleKeyDown);\n        }\n    }\n\n    public deinit(): void {\n        if (this.keyboardSupport) {\n            document.removeEventListener(\"keydown\", this.handleKeyDown);\n        }\n    }\n\n    public moveDown(selectedNode: Node): boolean {\n        return this.selectNode(selectedNode.getNextVisibleNode());\n    }\n\n    public moveUp(selectedNode: Node): boolean {\n        return this.selectNode(selectedNode.getPreviousVisibleNode());\n    }\n\n    private canHandleKeyboard(): boolean {\n        return this.keyboardSupport && this.isFocusOnTree();\n    }\n\n    private handleKeyDown = (e: KeyboardEvent): void => {\n        if (!this.canHandleKeyboard()) {\n            return;\n        }\n\n        let isKeyHandled = false;\n\n        const selectedNode = this.getSelectedNode();\n        if (selectedNode) {\n            switch (e.key) {\n                case \"ArrowDown\":\n                    isKeyHandled = this.moveDown(selectedNode);\n                    break;\n\n                case \"ArrowLeft\":\n                    isKeyHandled = this.moveLeft(selectedNode);\n                    break;\n\n                case \"ArrowRight\":\n                    isKeyHandled = this.moveRight(selectedNode);\n                    break;\n\n                case \"ArrowUp\":\n                    isKeyHandled = this.moveUp(selectedNode);\n                    break;\n            }\n        }\n\n        if (isKeyHandled) {\n            e.preventDefault();\n        }\n    };\n\n    private moveLeft(selectedNode: Node): boolean {\n        if (selectedNode.isFolder() && selectedNode.is_open) {\n            // Left on an open node closes the node\n            this.closeNode(selectedNode);\n            return true;\n        } else {\n            // Left on a closed or end node moves focus to the node's parent\n            return this.selectNode(selectedNode.getParent());\n        }\n    }\n\n    private moveRight(selectedNode: Node): boolean {\n        if (!selectedNode.isFolder()) {\n            return false;\n        } else {\n            // folder node\n            if (selectedNode.is_open) {\n                // Right moves to the first child of an open node\n                return this.selectNode(selectedNode.getNextVisibleNode());\n            } else {\n                // Right expands a closed node\n                this.openNode(selectedNode);\n                return true;\n            }\n        }\n    }\n\n    /* Select the node.\n     * Don't do anything if the node is null.\n     * Result: a different node was selected.\n     */\n    private selectNode(node: Node | null): boolean {\n        if (!node) {\n            return false;\n        } else {\n            this.originalSelectNode(node);\n\n            return true;\n        }\n    }\n}\n","export interface PositionInfo {\n    originalEvent: Event;\n    pageX: number;\n    pageY: number;\n    target: HTMLElement;\n}\n\nexport const getPositionInfoFromMouseEvent = (e: MouseEvent): PositionInfo => ({\n    originalEvent: e,\n    pageX: e.pageX,\n    pageY: e.pageY,\n    target: e.target as HTMLElement,\n});\n\nexport const getPositionInfoFromTouch = (\n    touch: Touch,\n    e: TouchEvent,\n): PositionInfo => ({\n    originalEvent: e,\n    pageX: touch.pageX,\n    pageY: touch.pageY,\n    target: touch.target as HTMLElement,\n});\n","import { TriggerEvent } from \"./jqtreeMethodTypes\";\nimport {\n    getPositionInfoFromMouseEvent,\n    getPositionInfoFromTouch,\n    PositionInfo,\n} from \"./mouseUtils\";\nimport { Node } from \"./node\";\n\ninterface ClickTarget {\n    node: Node;\n    type: \"button\" | \"label\";\n}\n\ntype GetNode = (element: HTMLElement) => Node | null;\n\ninterface MouseHandlerParams {\n    element: HTMLElement;\n    getMouseDelay: () => number;\n    getNode: GetNode;\n    onClickButton: (node: Node) => void;\n    onClickTitle: (node: Node) => void;\n    onMouseCapture: (positionInfo: PositionInfo) => boolean | null;\n    onMouseDrag: (positionInfo: PositionInfo) => void;\n    onMouseStart: (positionInfo: PositionInfo) => boolean;\n    onMouseStop: (positionInfo: PositionInfo) => void;\n    triggerEvent: TriggerEvent;\n    useContextMenu: boolean;\n}\n\nclass MouseHandler {\n    private element: HTMLElement;\n    private getMouseDelay: () => number;\n    private getNode: GetNode;\n\n    private isMouseDelayMet: boolean;\n\n    private isMouseStarted: boolean;\n\n    private mouseDelayTimer: null | number;\n\n    private mouseDownInfo: null | PositionInfo;\n    private onClickButton: (node: Node) => void;\n    private onClickTitle: (node: Node) => void;\n\n    private onMouseCapture: (positionInfo: PositionInfo) => boolean | null;\n\n    private onMouseDrag: (positionInfo: PositionInfo) => void;\n\n    private onMouseStart: (positionInfo: PositionInfo) => boolean;\n\n    private onMouseStop: (positionInfo: PositionInfo) => void;\n\n    private triggerEvent: TriggerEvent;\n    private useContextMenu: boolean;\n    constructor({\n        element,\n        getMouseDelay,\n        getNode,\n        onClickButton,\n        onClickTitle,\n        onMouseCapture,\n        onMouseDrag,\n        onMouseStart,\n        onMouseStop,\n        triggerEvent,\n        useContextMenu,\n    }: MouseHandlerParams) {\n        this.element = element;\n        this.getMouseDelay = getMouseDelay;\n        this.getNode = getNode;\n        this.onClickButton = onClickButton;\n        this.onClickTitle = onClickTitle;\n        this.onMouseCapture = onMouseCapture;\n        this.onMouseDrag = onMouseDrag;\n        this.onMouseStart = onMouseStart;\n        this.onMouseStop = onMouseStop;\n        this.triggerEvent = triggerEvent;\n        this.useContextMenu = useContextMenu;\n\n        element.addEventListener(\"click\", this.handleClick);\n        element.addEventListener(\"dblclick\", this.handleDblclick);\n        element.addEventListener(\"mousedown\", this.mouseDown, {\n            passive: false,\n        });\n        element.addEventListener(\"touchstart\", this.touchStart, {\n            passive: false,\n        });\n\n        if (useContextMenu) {\n            element.addEventListener(\"contextmenu\", this.handleContextmenu);\n        }\n\n        this.isMouseStarted = false;\n        this.mouseDelayTimer = null;\n        this.isMouseDelayMet = false;\n        this.mouseDownInfo = null;\n    }\n    public deinit(): void {\n        this.element.removeEventListener(\"click\", this.handleClick);\n        this.element.removeEventListener(\"dblclick\", this.handleDblclick);\n\n        if (this.useContextMenu) {\n            this.element.removeEventListener(\n                \"contextmenu\",\n                this.handleContextmenu,\n            );\n        }\n\n        this.element.removeEventListener(\"mousedown\", this.mouseDown);\n        this.element.removeEventListener(\"touchstart\", this.touchStart);\n        this.removeMouseMoveEventListeners();\n    }\n    private getClickTarget(element: HTMLElement): ClickTarget | null {\n        const button = element.closest<HTMLElement>(\".jqtree-toggler\");\n\n        if (button) {\n            const node = this.getNode(button);\n\n            if (node) {\n                return {\n                    node,\n                    type: \"button\",\n                };\n            }\n        } else {\n            const jqTreeElement =\n                element.closest<HTMLElement>(\".jqtree-element\");\n\n            if (jqTreeElement) {\n                const node = this.getNode(jqTreeElement);\n                if (node) {\n                    return {\n                        node,\n                        type: \"label\",\n                    };\n                }\n            }\n        }\n\n        return null;\n    }\n    private handleClick = (e: MouseEvent): void => {\n        if (!e.target) {\n            return;\n        }\n\n        const clickTarget = this.getClickTarget(e.target as HTMLElement);\n\n        if (!clickTarget) {\n            return;\n        }\n\n        switch (clickTarget.type) {\n            case \"button\":\n                this.onClickButton(clickTarget.node);\n\n                e.preventDefault();\n                e.stopPropagation();\n                break;\n\n            case \"label\": {\n                const event = this.triggerEvent(\"tree.click\", {\n                    click_event: e,\n                    node: clickTarget.node,\n                });\n\n                if (!event.isDefaultPrevented()) {\n                    this.onClickTitle(clickTarget.node);\n                }\n                break;\n            }\n        }\n    };\n\n    private handleContextmenu = (e: MouseEvent) => {\n        if (!e.target) {\n            return;\n        }\n\n        const div = (e.target as HTMLElement).closest<HTMLElement>(\n            \"ul.jqtree-tree .jqtree-element\",\n        );\n\n        if (div) {\n            const node = this.getNode(div);\n            if (node) {\n                e.preventDefault();\n                e.stopPropagation();\n\n                this.triggerEvent(\"tree.contextmenu\", {\n                    click_event: e,\n                    node,\n                });\n                return false;\n            }\n        }\n\n        return null;\n    };\n\n    private handleDblclick = (e: MouseEvent): void => {\n        if (!e.target) {\n            return;\n        }\n\n        const clickTarget = this.getClickTarget(e.target as HTMLElement);\n\n        if (clickTarget?.type === \"label\") {\n            this.triggerEvent(\"tree.dblclick\", {\n                click_event: e,\n                node: clickTarget.node,\n            });\n        }\n    };\n\n    private handleMouseDown(positionInfo: PositionInfo): boolean {\n        // We may have missed mouseup (out of window)\n        if (this.isMouseStarted) {\n            this.handleMouseUp(positionInfo);\n        }\n\n        this.mouseDownInfo = positionInfo;\n\n        if (!this.onMouseCapture(positionInfo)) {\n            return false;\n        }\n\n        this.handleStartMouse();\n\n        return true;\n    }\n\n    private handleMouseMove(\n        e: MouseEvent | TouchEvent,\n        positionInfo: PositionInfo,\n    ): void {\n        if (this.isMouseStarted) {\n            this.onMouseDrag(positionInfo);\n\n            if (e.cancelable) {\n                e.preventDefault();\n            }\n            return;\n        }\n\n        if (!this.isMouseDelayMet) {\n            return;\n        }\n\n        if (this.mouseDownInfo) {\n            this.isMouseStarted = this.onMouseStart(this.mouseDownInfo);\n        }\n\n        if (this.isMouseStarted) {\n            this.onMouseDrag(positionInfo);\n\n            if (e.cancelable) {\n                e.preventDefault();\n            }\n        } else {\n            this.handleMouseUp(positionInfo);\n        }\n    }\n    private handleMouseUp(positionInfo: PositionInfo): void {\n        this.removeMouseMoveEventListeners();\n        this.isMouseDelayMet = false;\n        this.mouseDownInfo = null;\n\n        if (this.isMouseStarted) {\n            this.isMouseStarted = false;\n            this.onMouseStop(positionInfo);\n        }\n    }\n\n    private handleStartMouse(): void {\n        document.addEventListener(\"mousemove\", this.mouseMove, {\n            passive: false,\n        });\n        document.addEventListener(\"touchmove\", this.touchMove, {\n            passive: false,\n        });\n        document.addEventListener(\"mouseup\", this.mouseUp, { passive: false });\n        document.addEventListener(\"touchend\", this.touchEnd, {\n            passive: false,\n        });\n\n        const mouseDelay = this.getMouseDelay();\n\n        if (mouseDelay) {\n            this.startMouseDelayTimer(mouseDelay);\n        } else {\n            this.isMouseDelayMet = true;\n        }\n    }\n\n    private mouseDown = (e: MouseEvent): void => {\n        // Left mouse button?\n        if (e.button !== 0) {\n            return;\n        }\n\n        const result = this.handleMouseDown(getPositionInfoFromMouseEvent(e));\n\n        if (result && e.cancelable) {\n            e.preventDefault();\n        }\n    };\n\n    private mouseMove = (e: MouseEvent): void => {\n        this.handleMouseMove(e, getPositionInfoFromMouseEvent(e));\n    };\n\n    private mouseUp = (e: MouseEvent): void => {\n        this.handleMouseUp(getPositionInfoFromMouseEvent(e));\n    };\n\n    private removeMouseMoveEventListeners() {\n        document.removeEventListener(\"mousemove\", this.mouseMove);\n        document.removeEventListener(\"touchmove\", this.touchMove);\n        document.removeEventListener(\"mouseup\", this.mouseUp);\n        document.removeEventListener(\"touchend\", this.touchEnd);\n    }\n\n    private startMouseDelayTimer(mouseDelay: number): void {\n        if (this.mouseDelayTimer) {\n            clearTimeout(this.mouseDelayTimer);\n        }\n\n        this.mouseDelayTimer = window.setTimeout(() => {\n            if (this.mouseDownInfo) {\n                this.isMouseDelayMet = true;\n            }\n        }, mouseDelay);\n\n        this.isMouseDelayMet = false;\n    }\n\n    private touchEnd = (e: TouchEvent): void => {\n        if (e.touches.length > 1) {\n            return;\n        }\n\n        const touch = e.touches[0];\n\n        if (!touch) {\n            return;\n        }\n\n        this.handleMouseUp(getPositionInfoFromTouch(touch, e));\n    };\n\n    private touchMove = (e: TouchEvent): void => {\n        if (e.touches.length > 1) {\n            return;\n        }\n\n        const touch = e.touches[0];\n\n        if (!touch) {\n            return;\n        }\n\n        this.handleMouseMove(e, getPositionInfoFromTouch(touch, e));\n    };\n\n    private touchStart = (e: TouchEvent): void => {\n        if (e.touches.length > 1) {\n            return;\n        }\n\n        const touch = e.touches[0];\n\n        if (!touch) {\n            return;\n        }\n\n        this.handleMouseDown(getPositionInfoFromTouch(touch, e));\n    };\n}\n\nexport default MouseHandler;\n","interface NodeRecordWithChildren extends NodeRecord {\n    children: NodeData[];\n}\n\nexport const isNodeRecordWithChildren = (\n    data: NodeData,\n): data is NodeRecordWithChildren =>\n    typeof data === \"object\" &&\n    \"children\" in data &&\n    data.children instanceof Array;\n","import { isNodeRecordWithChildren } from \"./nodeUtils\";\nimport { Position } from \"./position\";\n\ntype IterateCallback = (node: Node, level: number) => boolean;\n\nexport class Node implements INode {\n    [key: string]: unknown;\n\n    public children: Node[];\n    public element?: HTMLElement;\n    public id?: NodeId;\n    public idMapping: Map<NodeId, Node>;\n    public is_loading: boolean;\n    public is_open: boolean;\n    public isEmptyFolder: boolean;\n    public load_on_demand: boolean;\n    public name: string;\n    public nodeClass?: typeof Node;\n    public parent: Node | null;\n    public tree?: Node;\n\n    constructor(\n        nodeData: NodeData | null = null,\n        isRoot = false,\n        nodeClass = Node,\n    ) {\n        this.name = \"\";\n        this.load_on_demand = false;\n\n        this.isEmptyFolder =\n            nodeData != null &&\n            isNodeRecordWithChildren(nodeData) &&\n            nodeData.children.length === 0;\n\n        this.setData(nodeData);\n\n        this.children = [];\n        this.parent = null;\n\n        if (isRoot) {\n            this.idMapping = new Map<NodeId, Node>();\n            this.tree = this;\n            this.nodeClass = nodeClass;\n        }\n    }\n\n    public addAfter(nodeInfo: NodeData): Node | null {\n        if (!this.parent) {\n            return null;\n        } else {\n            const node = this.createNode(nodeInfo);\n\n            const childIndex = this.parent.getChildIndex(this);\n            this.parent.addChildAtPosition(node, childIndex + 1);\n\n            node.loadChildrenFromData(nodeInfo);\n            return node;\n        }\n    }\n\n    public addBefore(nodeInfo: NodeData): Node | null {\n        if (!this.parent) {\n            return null;\n        } else {\n            const node = this.createNode(nodeInfo);\n\n            const childIndex = this.parent.getChildIndex(this);\n            this.parent.addChildAtPosition(node, childIndex);\n\n            node.loadChildrenFromData(nodeInfo);\n            return node;\n        }\n    }\n\n    /*\n    Add child.\n\n    tree.addChild(\n        new Node('child1')\n    );\n    */\n    public addChild(node: Node): void {\n        this.children.push(node);\n        node.setParent(this);\n    }\n\n    /*\n    Add child at position. Index starts at 0.\n\n    tree.addChildAtPosition(\n        new Node('abc'),\n        1\n    );\n    */\n    public addChildAtPosition(node: Node, index: number): void {\n        this.children.splice(index, 0, node);\n        node.setParent(this);\n    }\n\n    public addNodeToIndex(node: Node): void {\n        if (node.id != null) {\n            this.idMapping.set(node.id, node);\n        }\n    }\n\n    public addParent(nodeInfo: NodeData): Node | null {\n        if (!this.parent) {\n            return null;\n        } else {\n            const newParent = this.createNode(nodeInfo);\n\n            if (this.tree) {\n                newParent.setParent(this.tree);\n            }\n            const originalParent = this.parent;\n\n            for (const child of originalParent.children) {\n                newParent.addChild(child);\n            }\n\n            originalParent.children = [];\n            originalParent.addChild(newParent);\n            return newParent;\n        }\n    }\n\n    public append(nodeInfo: NodeData): Node {\n        const node = this.createNode(nodeInfo);\n        this.addChild(node);\n\n        node.loadChildrenFromData(nodeInfo);\n        return node;\n    }\n\n    public filter(f: (node: Node) => boolean): Node[] {\n        const result: Node[] = [];\n\n        this.iterate((node: Node) => {\n            if (f(node)) {\n                result.push(node);\n            }\n\n            return true;\n        });\n\n        return result;\n    }\n\n    /*\n    Get child index.\n\n    var index = getChildIndex(node);\n    */\n    public getChildIndex(node: Node): number {\n        return this.children.indexOf(node);\n    }\n\n    /*\n    Get the tree as data.\n    */\n    public getData(includeParent = false): NodeRecord[] {\n        const getDataFromNodes = (nodes: Node[]): Record<string, unknown>[] => {\n            return nodes.map((node) => {\n                const tmpNode: Record<string, unknown> = {};\n\n                for (const k in node) {\n                    if (\n                        [\n                            \"parent\",\n                            \"children\",\n                            \"element\",\n                            \"idMapping\",\n                            \"load_on_demand\",\n                            \"nodeClass\",\n                            \"tree\",\n                            \"isEmptyFolder\",\n                        ].indexOf(k) === -1 &&\n                        Object.prototype.hasOwnProperty.call(node, k)\n                    ) {\n                        const v = node[k];\n                        tmpNode[k] = v;\n                    }\n                }\n\n                if (node.hasChildren()) {\n                    tmpNode.children = getDataFromNodes(node.children);\n                }\n\n                return tmpNode;\n            });\n        };\n\n        if (includeParent) {\n            return getDataFromNodes([this]);\n        } else {\n            return getDataFromNodes(this.children);\n        }\n    }\n\n    public getLastChild(): Node | null {\n        if (!this.hasChildren()) {\n            return null;\n        } else {\n            const lastChild = this.children[this.children.length - 1];\n\n            if (!lastChild) {\n                return null;\n            }\n\n            if (!(lastChild.hasChildren() && lastChild.is_open)) {\n                return lastChild;\n            } else {\n                return lastChild.getLastChild();\n            }\n        }\n    }\n\n    public getLevel(): number {\n        let level = 0;\n        let node: Node = this; // eslint-disable-line @typescript-eslint/no-this-alias\n\n        while (node.parent) {\n            level += 1;\n            node = node.parent;\n        }\n\n        return level;\n    }\n\n    public getNextNode(includeChildren = true): Node | null {\n        if (includeChildren && this.hasChildren()) {\n            return this.children[0] ?? null;\n        } else if (!this.parent) {\n            return null;\n        } else {\n            const nextSibling = this.getNextSibling();\n\n            if (nextSibling) {\n                return nextSibling;\n            } else {\n                return this.parent.getNextNode(false);\n            }\n        }\n    }\n\n    public getNextSibling(): Node | null {\n        if (!this.parent) {\n            return null;\n        } else {\n            const nextIndex = this.parent.getChildIndex(this) + 1;\n            if (nextIndex < this.parent.children.length) {\n                return this.parent.children[nextIndex] ?? null;\n            } else {\n                return null;\n            }\n        }\n    }\n\n    public getNextVisibleNode(): Node | null {\n        if (this.hasChildren() && this.is_open) {\n            // First child\n            return this.children[0] ?? null;\n        } else {\n            if (!this.parent) {\n                return null;\n            } else {\n                const nextSibling = this.getNextSibling();\n                if (nextSibling) {\n                    // Next sibling\n                    return nextSibling;\n                } else {\n                    // Next node of parent\n                    return this.parent.getNextNode(false);\n                }\n            }\n        }\n    }\n\n    public getNodeByCallback(callback: (node: Node) => boolean): Node | null {\n        let result: Node | null = null;\n\n        this.iterate((node: Node) => {\n            if (result) {\n                return false;\n            } else if (callback(node)) {\n                result = node;\n                return false;\n            } else {\n                return true;\n            }\n        });\n\n        return result;\n    }\n\n    public getNodeById(nodeId: NodeId): Node | null {\n        return this.idMapping.get(nodeId) ?? null;\n    }\n\n    public getNodeByName(name: string): Node | null {\n        return this.getNodeByCallback((node: Node) => node.name === name);\n    }\n\n    public getNodeByNameMustExist(name: string): Node {\n        const node = this.getNodeByCallback((n: Node) => n.name === name);\n\n        if (!node) {\n            throw new Error(`Node with name ${name} not found`);\n        }\n\n        return node;\n    }\n\n    public getNodesByProperty(key: string, value: unknown): Node[] {\n        return this.filter((node: Node) => node[key] === value);\n    }\n\n    public getParent(): Node | null {\n        // Return parent except if it is the root node\n        if (!this.parent) {\n            return null;\n        } else if (!this.parent.parent) {\n            // Root node -> null\n            return null;\n        } else {\n            return this.parent;\n        }\n    }\n\n    public getPreviousNode(): Node | null {\n        if (!this.parent) {\n            return null;\n        } else {\n            const previousSibling = this.getPreviousSibling();\n\n            if (!previousSibling) {\n                return this.getParent();\n            } else if (previousSibling.hasChildren()) {\n                return previousSibling.getLastChild();\n            } else {\n                return previousSibling;\n            }\n        }\n    }\n\n    public getPreviousSibling(): Node | null {\n        if (!this.parent) {\n            return null;\n        } else {\n            const previousIndex = this.parent.getChildIndex(this) - 1;\n            if (previousIndex >= 0) {\n                return this.parent.children[previousIndex] ?? null;\n            } else {\n                return null;\n            }\n        }\n    }\n\n    public getPreviousVisibleNode(): Node | null {\n        if (!this.parent) {\n            return null;\n        } else {\n            const previousSibling = this.getPreviousSibling();\n\n            if (!previousSibling) {\n                return this.getParent();\n            } else if (\n                !previousSibling.hasChildren() ||\n                !previousSibling.is_open\n            ) {\n                // Previous sibling\n                return previousSibling;\n            } else {\n                // Last child of previous sibling\n                return previousSibling.getLastChild();\n            }\n        }\n    }\n\n    /*\n    Does the tree have children?\n\n    if (tree.hasChildren()) {\n        //\n    }\n    */\n    public hasChildren(): boolean {\n        return this.children.length !== 0;\n    }\n\n    // Init Node from data without making it the root of the tree\n    public initFromData(data: NodeData): void {\n        const addNode = (nodeData: NodeData): void => {\n            this.setData(nodeData);\n\n            if (\n                isNodeRecordWithChildren(nodeData) &&\n                nodeData.children.length\n            ) {\n                addChildren(nodeData.children);\n            }\n        };\n\n        const addChildren = (childrenData: NodeData[]): void => {\n            for (const child of childrenData) {\n                const node = this.createNode();\n                node.initFromData(child);\n                this.addChild(node);\n            }\n        };\n\n        addNode(data);\n    }\n\n    public isFolder(): boolean {\n        return this.hasChildren() || this.load_on_demand;\n    }\n\n    public isParentOf(node: Node): boolean {\n        let parent = node.parent;\n\n        while (parent) {\n            if (parent === this) {\n                return true;\n            }\n\n            parent = parent.parent;\n        }\n\n        return false;\n    }\n\n    /*\n    Iterate over all the nodes in the tree.\n\n    Calls callback with (node, level).\n\n    The callback must return true to continue the iteration on current node.\n\n    tree.iterate(\n        function(node, level) {\n           console.log(node.name);\n\n           // stop iteration after level 2\n           return (level <= 2);\n        }\n    );\n\n    */\n    public iterate(callback: IterateCallback): void {\n        const _iterate = (node: Node, level: number): void => {\n            for (const child of node.children) {\n                const result = callback(child, level);\n\n                if (result && child.hasChildren()) {\n                    _iterate(child, level + 1);\n                }\n            }\n        };\n\n        _iterate(this, 0);\n    }\n\n    /*\n    Create tree from data.\n\n    Structure of data is:\n    [\n        {\n            name: 'node1',\n            children: [\n                { name: 'child1' },\n                { name: 'child2' }\n            ]\n        },\n        {\n            name: 'node2'\n        }\n    ]\n    */\n    public loadFromData(data: NodeData[]): this {\n        this.removeChildren();\n\n        for (const childData of data) {\n            const node = this.createNode(childData);\n            this.addChild(node);\n\n            if (isNodeRecordWithChildren(childData)) {\n                node.loadFromData(childData.children);\n            }\n        }\n\n        return this;\n    }\n\n    /*\n    Move node relative to another node.\n\n    Argument position: Position.BEFORE, Position.AFTER or Position.Inside\n\n    // move node1 after node2\n    tree.moveNode(node1, node2, Position.AFTER);\n    */\n    public moveNode(\n        movedNode: Node,\n        targetNode: Node,\n        position: Position,\n    ): boolean {\n        if (!movedNode.parent || movedNode.isParentOf(targetNode)) {\n            // - Node is parent of target node\n            // - Or, parent is empty\n            return false;\n        } else {\n            movedNode.parent.doRemoveChild(movedNode);\n\n            switch (position) {\n                case Position.After: {\n                    if (targetNode.parent) {\n                        targetNode.parent.addChildAtPosition(\n                            movedNode,\n                            targetNode.parent.getChildIndex(targetNode) + 1,\n                        );\n                        return true;\n                    }\n                    return false;\n                }\n\n                case Position.Before: {\n                    if (targetNode.parent) {\n                        targetNode.parent.addChildAtPosition(\n                            movedNode,\n                            targetNode.parent.getChildIndex(targetNode),\n                        );\n                        return true;\n                    }\n                    return false;\n                }\n\n                case Position.Inside: {\n                    // move inside as first child\n                    targetNode.addChildAtPosition(movedNode, 0);\n                    return true;\n                }\n\n                default:\n                    return false;\n            }\n        }\n    }\n\n    public prepend(nodeInfo: NodeData): Node {\n        const node = this.createNode(nodeInfo);\n        this.addChildAtPosition(node, 0);\n\n        node.loadChildrenFromData(nodeInfo);\n        return node;\n    }\n\n    public remove(): void {\n        if (this.parent) {\n            this.parent.removeChild(this);\n            this.parent = null;\n        }\n    }\n\n    /*\n    Remove child. This also removes the children of the node.\n\n    tree.removeChild(tree.children[0]);\n    */\n    public removeChild(node: Node): void {\n        // remove children from the index\n        node.removeChildren();\n\n        this.doRemoveChild(node);\n    }\n\n    public removeChildren(): void {\n        this.iterate((child: Node) => {\n            this.tree?.removeNodeFromIndex(child);\n            return true;\n        });\n\n        this.children = [];\n    }\n\n    public removeNodeFromIndex(node: Node): void {\n        if (node.id != null) {\n            this.idMapping.delete(node.id);\n        }\n    }\n\n    /*\n    Set the data of this node.\n\n    setData(string): set the name of the node\n    setData(object): set attributes of the node\n\n    Examples:\n        setData('node1')\n\n        setData({ name: 'node1', id: 1});\n\n        setData({ name: 'node2', id: 2, color: 'green'});\n\n    * This is an internal function; it is not in the docs\n    * Does not remove existing node values\n    */\n    public setData(o: NodeData | null): void {\n        if (!o) {\n            return;\n        } else if (typeof o === \"string\") {\n            this.name = o;\n        } else if (typeof o === \"object\") {\n            for (const key in o) {\n                if (Object.prototype.hasOwnProperty.call(o, key)) {\n                    const value = o[key];\n\n                    if (key === \"label\" || key === \"name\") {\n                        // You can use the 'label' key instead of 'name'; this is a legacy feature\n                        if (typeof value === \"string\") {\n                            this.name = value;\n                        }\n                    } else if (key !== \"children\" && key !== \"parent\") {\n                        // You can't update the children or the parent using this function\n                        this[key] = value;\n                    }\n                }\n            }\n        }\n    }\n\n    private createNode(nodeData?: NodeData): Node {\n        const nodeClass = this.getNodeClass();\n        return new nodeClass(nodeData);\n    }\n\n    private doRemoveChild(node: Node): void {\n        this.children.splice(this.getChildIndex(node), 1);\n        this.tree?.removeNodeFromIndex(node);\n    }\n\n    private getNodeClass(): typeof Node {\n        return this.nodeClass ?? this.tree?.nodeClass ?? Node;\n    }\n\n    // Load children data from nodeInfo if it has children\n    private loadChildrenFromData(nodeInfo: NodeData) {\n        if (isNodeRecordWithChildren(nodeInfo) && nodeInfo.children.length) {\n            this.loadFromData(nodeInfo.children);\n        }\n    }\n\n    private setParent(parent: Node): void {\n        this.parent = parent;\n        this.tree = parent.tree;\n        this.tree?.addNodeToIndex(this);\n    }\n}\n","import { DropHint } from \"../dragAndDropHandler/types\";\n\nclass BorderDropHint implements DropHint {\n    private hint?: HTMLElement;\n\n    constructor(element: HTMLElement, scrollLeft: number) {\n        const div = element.querySelector(\":scope > .jqtree-element\");\n\n        if (!div) {\n            this.hint = undefined;\n            return;\n        }\n\n        const width = Math.max(element.offsetWidth + scrollLeft - 4, 0);\n        const height = Math.max(element.clientHeight - 4, 0);\n\n        const hint = document.createElement(\"span\");\n        hint.className = \"jqtree-border\";\n        hint.style.width = `${width}px`;\n        hint.style.height = `${height}px`;\n\n        this.hint = hint;\n\n        div.append(this.hint);\n    }\n\n    public remove(): void {\n        this.hint?.remove();\n    }\n}\n\nexport default BorderDropHint;\n","import { DropHint } from \"../dragAndDropHandler/types\";\nimport { Node } from \"../node\";\nimport { Position } from \"../position\";\n\nclass GhostDropHint implements DropHint {\n    private element: HTMLElement;\n    private ghost: HTMLElement;\n    private node: Node;\n\n    constructor(node: Node, element: HTMLElement, position: Position) {\n        this.element = element;\n        this.node = node;\n        this.ghost = this.createGhostElement();\n\n        switch (position) {\n            case Position.After:\n                this.moveAfter();\n                break;\n\n            case Position.Before:\n                this.moveBefore();\n                break;\n\n            case Position.Inside: {\n                if (node.isFolder() && node.is_open) {\n                    this.moveInsideOpenFolder();\n                } else {\n                    this.moveInside();\n                }\n            }\n        }\n    }\n\n    public remove(): void {\n        this.ghost.remove();\n    }\n\n    private createGhostElement() {\n        const ghost = document.createElement(\"li\");\n        ghost.className = \"jqtree_common jqtree-ghost\";\n\n        const circleSpan = document.createElement(\"span\");\n        circleSpan.className = \"jqtree_common jqtree-circle\";\n        ghost.append(circleSpan);\n\n        const lineSpan = document.createElement(\"span\");\n        lineSpan.className = \"jqtree_common jqtree-line\";\n        ghost.append(lineSpan);\n\n        return ghost;\n    }\n\n    private moveAfter(): void {\n        this.element.after(this.ghost);\n    }\n\n    private moveBefore(): void {\n        this.element.before(this.ghost);\n    }\n\n    private moveInside(): void {\n        this.element.after(this.ghost);\n        this.ghost.classList.add(\"jqtree-inside\");\n    }\n\n    private moveInsideOpenFolder(): void {\n        const childElement = this.node.children[0]?.element;\n\n        if (childElement) {\n            childElement.before(this.ghost);\n        }\n    }\n}\n\nexport default GhostDropHint;\n","import { DropHint } from \"../dragAndDropHandler/types\";\nimport { GetScrollLeft } from \"../jqtreeMethodTypes\";\nimport { Node } from \"../node\";\nimport { Position } from \"../position\";\nimport BorderDropHint from \"./borderDropHint\";\nimport GhostDropHint from \"./ghostDropHint\";\n\nexport interface NodeElementParams {\n    getScrollLeft: GetScrollLeft;\n    node: Node;\n    tabIndex?: number;\n    treeElement: HTMLElement;\n}\n\nclass NodeElement {\n    public element: HTMLElement;\n    public node: Node;\n    private getScrollLeft: GetScrollLeft;\n    private tabIndex?: number;\n    private treeElement: HTMLElement;\n\n    constructor({\n        getScrollLeft,\n        node,\n        tabIndex,\n        treeElement,\n    }: NodeElementParams) {\n        this.getScrollLeft = getScrollLeft;\n        this.tabIndex = tabIndex;\n        this.treeElement = treeElement;\n\n        this.init(node);\n    }\n\n    public addDropHint(position: number): DropHint {\n        if (this.mustShowBorderDropHint(position)) {\n            return new BorderDropHint(this.element, this.getScrollLeft());\n        } else {\n            return new GhostDropHint(this.node, this.element, position);\n        }\n    }\n\n    public deselect(): void {\n        this.element.classList.remove(\"jqtree-selected\");\n\n        const titleSpan = this.getTitleSpan();\n        titleSpan.removeAttribute(\"tabindex\");\n        titleSpan.setAttribute(\"aria-selected\", \"false\");\n\n        titleSpan.blur();\n    }\n\n    public init(node: Node): void {\n        this.node = node;\n\n        if (!node.element) {\n            node.element = this.treeElement;\n        }\n\n        this.element = node.element;\n    }\n\n    public select(mustSetFocus: boolean): void {\n        this.element.classList.add(\"jqtree-selected\");\n\n        const titleSpan = this.getTitleSpan();\n        const tabIndex = this.tabIndex;\n\n        // Check for null or undefined\n        if (tabIndex != null) {\n            titleSpan.setAttribute(\"tabindex\", tabIndex.toString());\n        }\n\n        titleSpan.setAttribute(\"aria-selected\", \"true\");\n\n        if (mustSetFocus) {\n            titleSpan.focus();\n        }\n    }\n\n    protected getTitleSpan(): HTMLSpanElement {\n        return this.element.querySelector(\n            \":scope > .jqtree-element > span.jqtree-title\",\n        ) as HTMLSpanElement;\n    }\n\n    protected getUl(): HTMLUListElement {\n        return this.element.querySelector(\":scope > ul\") as HTMLUListElement;\n    }\n\n    protected mustShowBorderDropHint(position: Position): boolean {\n        return position === Position.Inside;\n    }\n}\n\nexport default NodeElement;\n","import { OnFinishOpenNode, TriggerEvent } from \"../jqtreeMethodTypes\";\nimport { Position } from \"../position\";\nimport NodeElement, { NodeElementParams } from \"./index\";\n\ninterface FolderElementParams extends NodeElementParams {\n    closedIconElement?: HTMLElement | Text;\n    openedIconElement?: HTMLElement | Text;\n    triggerEvent: TriggerEvent;\n}\n\nclass FolderElement extends NodeElement {\n    private closedIconElement?: HTMLElement | Text;\n    private openedIconElement?: HTMLElement | Text;\n    private triggerEvent: TriggerEvent;\n\n    constructor({\n        closedIconElement,\n        getScrollLeft,\n        node,\n        openedIconElement,\n        tabIndex,\n        treeElement,\n        triggerEvent,\n    }: FolderElementParams) {\n        super({\n            getScrollLeft,\n            node,\n            tabIndex,\n            treeElement,\n        });\n\n        this.closedIconElement = closedIconElement;\n        this.openedIconElement = openedIconElement;\n        this.triggerEvent = triggerEvent;\n    }\n\n    public close(slide: boolean, animationSpeed: JQuery.Duration): void {\n        if (!this.node.is_open) {\n            return;\n        }\n\n        this.node.is_open = false;\n\n        const button = this.getButton();\n        button.classList.add(\"jqtree-closed\");\n        button.innerHTML = \"\";\n\n        const closedIconElement = this.closedIconElement;\n\n        if (closedIconElement) {\n            const icon = closedIconElement.cloneNode(true);\n            button.appendChild(icon);\n        }\n\n        const doClose = (): void => {\n            this.element.classList.add(\"jqtree-closed\");\n\n            const titleSpan = this.getTitleSpan();\n            titleSpan.setAttribute(\"aria-expanded\", \"false\");\n\n            this.triggerEvent(\"tree.close\", {\n                node: this.node,\n            });\n        };\n\n        if (slide) {\n            jQuery(this.getUl()).slideUp(animationSpeed, doClose);\n        } else {\n            jQuery(this.getUl()).hide();\n            doClose();\n        }\n    }\n\n    public open(\n        onFinished: OnFinishOpenNode | undefined,\n        slide: boolean,\n        animationSpeed: JQuery.Duration,\n    ): void {\n        if (this.node.is_open) {\n            return;\n        }\n\n        this.node.is_open = true;\n\n        const button = this.getButton();\n        button.classList.remove(\"jqtree-closed\");\n        button.innerHTML = \"\";\n\n        const openedIconElement = this.openedIconElement;\n\n        if (openedIconElement) {\n            const icon = openedIconElement.cloneNode(true);\n            button.appendChild(icon);\n        }\n\n        const doOpen = (): void => {\n            this.element.classList.remove(\"jqtree-closed\");\n\n            const titleSpan = this.getTitleSpan();\n            titleSpan.setAttribute(\"aria-expanded\", \"true\");\n\n            if (onFinished) {\n                onFinished(this.node);\n            }\n\n            this.triggerEvent(\"tree.open\", {\n                node: this.node,\n            });\n        };\n\n        if (slide) {\n            jQuery(this.getUl()).slideDown(animationSpeed, doOpen);\n        } else {\n            jQuery(this.getUl()).show();\n            doOpen();\n        }\n    }\n\n    protected mustShowBorderDropHint(position: Position): boolean {\n        return !this.node.is_open && position === Position.Inside;\n    }\n\n    private getButton(): HTMLLinkElement {\n        return this.element.querySelector(\n            \":scope > .jqtree-element > a.jqtree-toggler\",\n        ) as HTMLLinkElement;\n    }\n}\n\nexport default FolderElement;\n","import {\n    AddToSelection,\n    GetNodeById,\n    GetSelectedNodes,\n    GetTree,\n    OpenNode,\n    RefreshElements,\n    RemoveFromSelection,\n} from \"./jqtreeMethodTypes\";\nimport { OnGetStateFromStorage, OnSetStateFromStorage } from \"./jqtreeOptions\";\nimport { Node } from \"./node\";\nimport { isInt } from \"./util\";\n\nexport interface SavedState {\n    open_nodes?: NodeId[];\n    selected_node?: NodeId[];\n}\n\ninterface SaveStateHandlerParams {\n    addToSelection: AddToSelection;\n    getNodeById: GetNodeById;\n    getSelectedNodes: GetSelectedNodes;\n    getTree: GetTree;\n    onGetStateFromStorage?: OnGetStateFromStorage;\n    onSetStateFromStorage?: OnSetStateFromStorage;\n    openNode: OpenNode;\n    refreshElements: RefreshElements;\n    removeFromSelection: RemoveFromSelection;\n    saveState: boolean | string;\n}\n\nexport default class SaveStateHandler {\n    private addToSelection: AddToSelection;\n    private getNodeById: GetNodeById;\n    private getSelectedNodes: GetSelectedNodes;\n    private getTree: GetTree;\n    private onGetStateFromStorage?: OnGetStateFromStorage;\n    private onSetStateFromStorage?: OnSetStateFromStorage;\n    private openNode: OpenNode;\n    private refreshElements: RefreshElements;\n    private removeFromSelection: RemoveFromSelection;\n    private saveStateOption: boolean | string;\n\n    constructor({\n        addToSelection,\n        getNodeById,\n        getSelectedNodes,\n        getTree,\n        onGetStateFromStorage,\n        onSetStateFromStorage,\n        openNode,\n        refreshElements,\n        removeFromSelection,\n        saveState,\n    }: SaveStateHandlerParams) {\n        this.addToSelection = addToSelection;\n        this.getNodeById = getNodeById;\n        this.getSelectedNodes = getSelectedNodes;\n        this.getTree = getTree;\n        this.onGetStateFromStorage = onGetStateFromStorage;\n        this.onSetStateFromStorage = onSetStateFromStorage;\n        this.openNode = openNode;\n        this.refreshElements = refreshElements;\n        this.removeFromSelection = removeFromSelection;\n        this.saveStateOption = saveState;\n    }\n\n    public getNodeIdToBeSelected(): NodeId | null {\n        const state = this.getStateFromStorage();\n\n        if (state?.selected_node) {\n            return state.selected_node[0] ?? null;\n        } else {\n            return null;\n        }\n    }\n\n    public getState(): SavedState {\n        const getOpenNodeIds = (): NodeId[] => {\n            const openNodes: NodeId[] = [];\n\n            this.getTree()?.iterate((node: Node) => {\n                if (node.is_open && node.id && node.hasChildren()) {\n                    openNodes.push(node.id);\n                }\n                return true;\n            });\n\n            return openNodes;\n        };\n\n        const getSelectedNodeIds = (): NodeId[] => {\n            const selectedNodeIds: NodeId[] = [];\n\n            this.getSelectedNodes().forEach((node) => {\n                if (node.id != null) {\n                    selectedNodeIds.push(node.id);\n                }\n            });\n\n            return selectedNodeIds;\n        };\n\n        return {\n            open_nodes: getOpenNodeIds(),\n            selected_node: getSelectedNodeIds(),\n        };\n    }\n\n    public getStateFromStorage(): null | SavedState {\n        const jsonData = this.loadFromStorage();\n\n        if (jsonData) {\n            return this.parseState(jsonData) as unknown as SavedState;\n        } else {\n            return null;\n        }\n    }\n\n    public saveState(): void {\n        const state = JSON.stringify(this.getState());\n\n        if (this.onSetStateFromStorage) {\n            this.onSetStateFromStorage(state);\n        } else {\n            localStorage.setItem(this.getKeyName(), state);\n        }\n    }\n\n    /*\n    Set initial state\n    Don't handle nodes that are loaded on demand\n\n    result: must load on demand (boolean)\n    */\n    public setInitialState(state: SavedState): boolean {\n        let mustLoadOnDemand = false;\n\n        if (state.open_nodes) {\n            mustLoadOnDemand = this.openInitialNodes(state.open_nodes);\n        }\n\n        this.resetSelection();\n\n        if (state.selected_node) {\n            this.selectInitialNodes(state.selected_node);\n        }\n\n        return mustLoadOnDemand;\n    }\n\n    public setInitialStateOnDemand(\n        state: SavedState,\n        cbFinished: () => void,\n    ): void {\n        let loadingCount = 0;\n        let nodeIds = state.open_nodes;\n\n        const openNodes = (): void => {\n            if (!nodeIds) {\n                return;\n            }\n\n            const newNodesIds = [];\n\n            for (const nodeId of nodeIds) {\n                const node = this.getNodeById(nodeId);\n\n                if (!node) {\n                    newNodesIds.push(nodeId);\n                } else {\n                    if (!node.is_loading) {\n                        if (node.load_on_demand) {\n                            loadAndOpenNode(node);\n                        } else {\n                            this.openNode(node, false);\n                        }\n                    }\n                }\n            }\n\n            nodeIds = newNodesIds;\n\n            if (state.selected_node) {\n                if (this.selectInitialNodes(state.selected_node)) {\n                    this.refreshElements(null);\n                }\n            }\n\n            if (loadingCount === 0) {\n                cbFinished();\n            }\n        };\n\n        const loadAndOpenNode = (node: Node): void => {\n            loadingCount += 1;\n            this.openNode(node, false, () => {\n                loadingCount -= 1;\n                openNodes();\n            });\n        };\n\n        openNodes();\n    }\n\n    private getKeyName(): string {\n        if (typeof this.saveStateOption === \"string\") {\n            return this.saveStateOption;\n        } else {\n            return \"tree\";\n        }\n    }\n\n    private loadFromStorage(): null | string {\n        if (this.onGetStateFromStorage) {\n            return this.onGetStateFromStorage();\n        } else {\n            return localStorage.getItem(this.getKeyName());\n        }\n    }\n\n    private openInitialNodes(nodeIds: NodeId[]): boolean {\n        let mustLoadOnDemand = false;\n\n        for (const nodeId of nodeIds) {\n            const node = this.getNodeById(nodeId);\n\n            if (node) {\n                if (!node.load_on_demand) {\n                    node.is_open = true;\n                } else {\n                    mustLoadOnDemand = true;\n                }\n            }\n        }\n\n        return mustLoadOnDemand;\n    }\n\n    private parseState(jsonData: string): SavedState {\n        const state = JSON.parse(jsonData) as Record<string, unknown>;\n\n        // Check if selected_node is an int (instead of an array)\n        if (state.selected_node && isInt(state.selected_node)) {\n            // Convert to array\n            state.selected_node = [state.selected_node];\n        }\n\n        return state as unknown as SavedState;\n    }\n\n    private resetSelection(): void {\n        const selectedNodes = this.getSelectedNodes();\n\n        selectedNodes.forEach((node) => {\n            this.removeFromSelection(node);\n        });\n    }\n\n    private selectInitialNodes(nodeIds: NodeId[]): boolean {\n        let selectCount = 0;\n\n        for (const nodeId of nodeIds) {\n            const node = this.getNodeById(nodeId);\n\n            if (node) {\n                selectCount += 1;\n\n                this.addToSelection(node);\n            }\n        }\n\n        return selectCount !== 0;\n    }\n}\n","import type { ScrollParent } from \"./types\";\n\nimport { getElementPosition, getOffsetTop } from '../util'\n\ntype HorizontalScrollDirection = \"left\" | \"right\";\ninterface Params {\n    container: HTMLElement;\n    refreshHitAreas: () => void;\n}\n\ntype VerticalScrollDirection = \"bottom\" | \"top\";\n\nexport default class ContainerScrollParent implements ScrollParent {\n    private container: HTMLElement;\n    private horizontalScrollDirection?: HorizontalScrollDirection;\n    private horizontalScrollTimeout?: number;\n    private refreshHitAreas: () => void;\n    private scrollParentBottom?: number;\n    private scrollParentTop?: number;\n    private verticalScrollDirection?: VerticalScrollDirection;\n    private verticalScrollTimeout?: number;\n\n    constructor({ container, refreshHitAreas }: Params) {\n        this.container = container;\n        this.refreshHitAreas = refreshHitAreas;\n    }\n\n    public checkHorizontalScrolling(pageX: number): void {\n        const newHorizontalScrollDirection =\n            this.getNewHorizontalScrollDirection(pageX);\n\n        if (this.horizontalScrollDirection !== newHorizontalScrollDirection) {\n            this.horizontalScrollDirection = newHorizontalScrollDirection;\n\n            if (this.horizontalScrollTimeout != null) {\n                window.clearTimeout(this.verticalScrollTimeout);\n            }\n\n            if (newHorizontalScrollDirection) {\n                this.horizontalScrollTimeout = window.setTimeout(\n                    this.scrollHorizontally.bind(this),\n                    40,\n                );\n            }\n        }\n    }\n\n    public checkVerticalScrolling(pageY: number) {\n        const newVerticalScrollDirection =\n            this.getNewVerticalScrollDirection(pageY);\n\n        if (this.verticalScrollDirection !== newVerticalScrollDirection) {\n            this.verticalScrollDirection = newVerticalScrollDirection;\n\n            if (this.verticalScrollTimeout != null) {\n                window.clearTimeout(this.verticalScrollTimeout);\n                this.verticalScrollTimeout = undefined;\n            }\n\n            if (newVerticalScrollDirection) {\n                this.verticalScrollTimeout = window.setTimeout(\n                    this.scrollVertically.bind(this),\n                    40,\n                );\n            }\n        }\n    }\n\n    public getScrollLeft(): number {\n        return this.container.scrollLeft;\n    }\n\n    public scrollToY(top: number): void {\n        this.container.scrollTop = top;\n    }\n\n    public stopScrolling() {\n        this.horizontalScrollDirection = undefined;\n        this.verticalScrollDirection = undefined;\n        this.scrollParentTop = undefined;\n        this.scrollParentBottom = undefined;\n    }\n\n    private getNewHorizontalScrollDirection(\n        pageX: number,\n    ): HorizontalScrollDirection | undefined {\n        const scrollParentOffset = getElementPosition(this.container);\n\n        const rightEdge = scrollParentOffset.left + this.container.clientWidth;\n        const leftEdge = scrollParentOffset.left;\n        const isNearRightEdge = pageX > rightEdge - 20;\n        const isNearLeftEdge = pageX < leftEdge + 20;\n\n        if (isNearRightEdge) {\n            return \"right\";\n        } else if (isNearLeftEdge) {\n            return \"left\";\n        }\n\n        return undefined;\n    }\n\n    private getNewVerticalScrollDirection(\n        pageY: number,\n    ): undefined | VerticalScrollDirection {\n        if (pageY < this.getScrollParentTop()) {\n            return \"top\";\n        }\n\n        if (pageY > this.getScrollParentBottom()) {\n            return \"bottom\";\n        }\n\n        return undefined;\n    }\n\n    private getScrollParentBottom() {\n        if (this.scrollParentBottom == null) {\n            this.scrollParentBottom = this.getScrollParentTop() + this.container.clientHeight;\n        }\n\n        return this.scrollParentBottom;\n    }\n\n    private getScrollParentTop() {\n        if (this.scrollParentTop == null) {\n            this.scrollParentTop = getOffsetTop(this.container)\n        }\n\n        return this.scrollParentTop;\n    }\n\n    private scrollHorizontally() {\n        if (!this.horizontalScrollDirection) {\n            return;\n        }\n\n        const distance = this.horizontalScrollDirection === \"left\" ? -20 : 20;\n\n        this.container.scrollBy({\n            behavior: \"instant\",\n            left: distance,\n            top: 0,\n        });\n\n        this.refreshHitAreas();\n\n        setTimeout(this.scrollHorizontally.bind(this), 40);\n    }\n\n    private scrollVertically() {\n        if (!this.verticalScrollDirection) {\n            return;\n        }\n\n        const distance = this.verticalScrollDirection === \"top\" ? -20 : 20;\n\n        this.container.scrollBy({\n            behavior: \"instant\",\n            left: 0,\n            top: distance,\n        });\n\n        this.refreshHitAreas();\n\n        setTimeout(this.scrollVertically.bind(this), 40);\n    }\n}\n","import type { ScrollParent } from \"./types\";\n\nimport { getOffsetTop } from \"../util\";\n\ntype HorizontalScrollDirection = \"left\" | \"right\";\ninterface Params {\n    refreshHitAreas: () => void;\n    treeElement: HTMLElement;\n}\n\ntype VerticalScrollDirection = \"bottom\" | \"top\";\n\nexport default class DocumentScrollParent implements ScrollParent {\n    private documentScrollHeight?: number;\n    private documentScrollWidth?: number;\n    private horizontalScrollDirection?: HorizontalScrollDirection;\n    private horizontalScrollTimeout?: number;\n    private refreshHitAreas: () => void;\n    private treeElement: HTMLElement;\n    private verticalScrollDirection?: VerticalScrollDirection;\n    private verticalScrollTimeout?: number;\n\n    constructor({ refreshHitAreas, treeElement }: Params) {\n        this.refreshHitAreas = refreshHitAreas;\n        this.treeElement = treeElement;\n    }\n\n    public checkHorizontalScrolling(pageX: number): void {\n        const newHorizontalScrollDirection =\n            this.getNewHorizontalScrollDirection(pageX);\n\n        if (this.horizontalScrollDirection !== newHorizontalScrollDirection) {\n            this.horizontalScrollDirection = newHorizontalScrollDirection;\n\n            if (this.horizontalScrollTimeout != null) {\n                window.clearTimeout(this.horizontalScrollTimeout);\n            }\n\n            if (newHorizontalScrollDirection) {\n                this.horizontalScrollTimeout = window.setTimeout(\n                    this.scrollHorizontally.bind(this),\n                    40,\n                );\n            }\n        }\n    }\n\n    public checkVerticalScrolling(pageY: number) {\n        const newVerticalScrollDirection =\n            this.getNewVerticalScrollDirection(pageY);\n\n        if (this.verticalScrollDirection !== newVerticalScrollDirection) {\n            this.verticalScrollDirection = newVerticalScrollDirection;\n\n            if (this.verticalScrollTimeout != null) {\n                window.clearTimeout(this.verticalScrollTimeout);\n                this.verticalScrollTimeout = undefined;\n            }\n\n            if (newVerticalScrollDirection) {\n                this.verticalScrollTimeout = window.setTimeout(\n                    this.scrollVertically.bind(this),\n                    40,\n                );\n            }\n        }\n    }\n\n    public getScrollLeft(): number {\n        return document.documentElement.scrollLeft;\n    }\n\n    public scrollToY(top: number): void {\n        const treeTop = getOffsetTop(this.treeElement);\n\n        document.documentElement.scrollTop = top + treeTop;\n    }\n\n    public stopScrolling() {\n        this.horizontalScrollDirection = undefined;\n        this.verticalScrollDirection = undefined;\n        this.documentScrollHeight = undefined;\n        this.documentScrollWidth = undefined;\n    }\n\n    private canScrollDown() {\n        const documentElement = document.documentElement;\n\n        return (\n            documentElement.scrollTop + documentElement.clientHeight <\n            this.getDocumentScrollHeight()\n        );\n    }\n\n    private canScrollRight() {\n        const documentElement = document.documentElement;\n\n        return (\n            documentElement.scrollLeft + documentElement.clientWidth <\n            this.getDocumentScrollWidth()\n        );\n    }\n\n    private getDocumentScrollHeight() {\n        // Store the original scroll height because the scroll height can increase when the drag element is moved beyond the scroll height.\n        if (this.documentScrollHeight == null) {\n            this.documentScrollHeight = document.documentElement.scrollHeight;\n        }\n\n        return this.documentScrollHeight;\n    }\n\n    private getDocumentScrollWidth() {\n        // Store the original scroll width because the scroll width can increase when the drag element is moved beyond the scroll width.\n        if (this.documentScrollWidth == null) {\n            this.documentScrollWidth = document.documentElement.scrollWidth;\n        }\n\n        return this.documentScrollWidth;\n    }\n\n    private getNewHorizontalScrollDirection(\n        pageX: number,\n    ): HorizontalScrollDirection | undefined {\n        const scrollLeft = document.documentElement.scrollLeft;\n        const windowWidth = window.innerWidth;\n\n        const isNearRightEdge = pageX > windowWidth - 20;\n        const isNearLeftEdge = pageX - scrollLeft < 20;\n\n        if (isNearRightEdge && this.canScrollRight()) {\n            return \"right\";\n        }\n\n        if (isNearLeftEdge) {\n            return \"left\";\n        }\n\n        return undefined;\n    }\n\n    private getNewVerticalScrollDirection(\n        pageY: number,\n    ): undefined | VerticalScrollDirection {\n        const scrollTop = jQuery(document).scrollTop() ?? 0;\n        const distanceTop = pageY - scrollTop;\n\n        if (distanceTop < 20) {\n            return \"top\";\n        }\n\n        const windowHeight = window.innerHeight;\n\n        if (windowHeight - (pageY - scrollTop) < 20 && this.canScrollDown()) {\n            return \"bottom\";\n        }\n\n        return undefined;\n    }\n\n    private scrollHorizontally() {\n        if (!this.horizontalScrollDirection) {\n            return;\n        }\n\n        const distance = this.horizontalScrollDirection === \"left\" ? -20 : 20;\n        window.scrollBy({ behavior: \"instant\", left: distance, top: 0 });\n\n        this.refreshHitAreas();\n\n        setTimeout(this.scrollHorizontally.bind(this), 40);\n    }\n\n    private scrollVertically() {\n        if (!this.verticalScrollDirection) {\n            return;\n        }\n\n        const distance = this.verticalScrollDirection === \"top\" ? -20 : 20;\n        window.scrollBy({ behavior: \"instant\", left: 0, top: distance });\n\n        this.refreshHitAreas();\n\n        setTimeout(this.scrollVertically.bind(this), 40);\n    }\n}\n","import type { ScrollParent } from \"./types\";\n\nimport ContainerScrollParent from \"./containerScrollParent\";\nimport DocumentScrollParent from \"./documentScrollParent\";\n\nconst isOverflow = (overflowValue: string) =>\n    overflowValue === \"auto\" || overflowValue === \"scroll\";\n\nconst hasOverFlow = (element: HTMLElement): boolean => {\n    const style = getComputedStyle(element);\n\n    return isOverflow(style.overflowX) || isOverflow(style.overflowY);\n};\n\nconst getParentWithOverflow = (\n    treeElement: HTMLElement,\n): HTMLElement | null => {\n    if (hasOverFlow(treeElement)) {\n        return treeElement;\n    }\n\n    let parent = treeElement.parentElement;\n\n    while (parent) {\n        if (hasOverFlow(parent)) {\n            return parent;\n        }\n\n        parent = parent.parentElement;\n    }\n\n    return null;\n};\n\nconst createScrollParent = (\n    treeElement: HTMLElement,\n    refreshHitAreas: () => void,\n): ScrollParent => {\n    const container = getParentWithOverflow(treeElement);\n\n    if (container && container.tagName !== \"HTML\") {\n        return new ContainerScrollParent({\n            container,\n            refreshHitAreas,\n        });\n    } else {\n        return new DocumentScrollParent({ refreshHitAreas, treeElement });\n    }\n};\n\nexport default createScrollParent;\n","import { PositionInfo } from \"./mouseUtils\";\nimport createScrollParent from \"./scrollHandler/createScrollParent\";\nimport { ScrollParent } from \"./scrollHandler/types\";\n\ninterface ScrollHandlerParams {\n    refreshHitAreas: () => void;\n    treeElement: HTMLElement;\n}\n\nexport default class ScrollHandler {\n    private refreshHitAreas: () => void;\n    private scrollParent?: ScrollParent;\n    private treeElement: HTMLElement;\n\n    constructor({ refreshHitAreas, treeElement }: ScrollHandlerParams) {\n        this.refreshHitAreas = refreshHitAreas;\n        this.scrollParent = undefined;\n        this.treeElement = treeElement;\n    }\n\n    public checkScrolling(positionInfo: PositionInfo): void {\n        this.checkVerticalScrolling(positionInfo);\n        this.checkHorizontalScrolling(positionInfo);\n    }\n\n    public getScrollLeft(): number {\n        return this.getScrollParent().getScrollLeft();\n    }\n\n    public scrollToY(top: number): void {\n        this.getScrollParent().scrollToY(top);\n    }\n\n    public stopScrolling() {\n        this.getScrollParent().stopScrolling();\n    }\n\n    private checkHorizontalScrolling(positionInfo: PositionInfo): void {\n        this.getScrollParent().checkHorizontalScrolling(positionInfo.pageX);\n    }\n\n    private checkVerticalScrolling(positionInfo: PositionInfo): void {\n        this.getScrollParent().checkVerticalScrolling(positionInfo.pageY);\n    }\n\n    private getScrollParent(): ScrollParent {\n        if (!this.scrollParent) {\n            this.scrollParent = createScrollParent(\n                this.treeElement,\n                this.refreshHitAreas,\n            );\n        }\n\n        return this.scrollParent;\n    }\n}\n","import { GetNodeById } from \"./jqtreeMethodTypes\";\nimport { Node } from \"./node\";\n\ninterface SelectNodeHandlerParameters {\n    getNodeById: GetNodeById;\n}\n\nexport default class SelectNodeHandler {\n    private getNodeById: GetNodeById;\n    private selectedNodes: Set<NodeId>;\n    private selectedSingleNode: Node | null;\n\n    constructor({ getNodeById }: SelectNodeHandlerParameters) {\n        this.getNodeById = getNodeById;\n        this.selectedNodes = new Set<NodeId>();\n        this.clear();\n    }\n\n    public addToSelection(node: Node): void {\n        if (node.id != null) {\n            this.selectedNodes.add(node.id);\n        } else {\n            this.selectedSingleNode = node;\n        }\n    }\n\n    public clear(): void {\n        this.selectedNodes.clear();\n        this.selectedSingleNode = null;\n    }\n\n    public getSelectedNode(): false | Node {\n        const selectedNodes = this.getSelectedNodes();\n\n        if (selectedNodes.length) {\n            return selectedNodes[0] ?? false;\n        } else {\n            return false;\n        }\n    }\n\n    public getSelectedNodes(): Node[] {\n        if (this.selectedSingleNode) {\n            return [this.selectedSingleNode];\n        } else {\n            const selectedNodes: Node[] = [];\n\n            this.selectedNodes.forEach((id) => {\n                const node = this.getNodeById(id);\n                if (node) {\n                    selectedNodes.push(node);\n                }\n            });\n\n            return selectedNodes;\n        }\n    }\n\n    public getSelectedNodesUnder(parent: Node): Node[] {\n        if (this.selectedSingleNode) {\n            if (parent.isParentOf(this.selectedSingleNode)) {\n                return [this.selectedSingleNode];\n            } else {\n                return [];\n            }\n        } else {\n            const selectedNodes: Node[] = [];\n\n            this.selectedNodes.forEach((id) => {\n                const node = this.getNodeById(id);\n                if (node && parent.isParentOf(node)) {\n                    selectedNodes.push(node);\n                }\n            });\n\n            return selectedNodes;\n        }\n    }\n\n    public isNodeSelected(node: Node): boolean {\n        if (node.id != null) {\n            return this.selectedNodes.has(node.id);\n        } else if (this.selectedSingleNode) {\n            return this.selectedSingleNode.element === node.element;\n        } else {\n            return false;\n        }\n    }\n\n    public removeFromSelection(node: Node, includeChildren = false): void {\n        if (node.id == null) {\n            if (\n                this.selectedSingleNode &&\n                node.element === this.selectedSingleNode.element\n            ) {\n                this.selectedSingleNode = null;\n            }\n        } else {\n            this.selectedNodes.delete(node.id);\n\n            if (includeChildren) {\n                node.iterate(() => {\n                    if (node.id != null) {\n                        this.selectedNodes.delete(node.id);\n                    }\n                    return true;\n                });\n            }\n        }\n    }\n}\n","const register = (widgetClass: unknown, widgetName: string): void => {\n    const getDataKey = (): string => `simple_widget_${widgetName}`;\n\n    const getWidgetData = (\n        el: HTMLElement,\n        dataKey: string,\n    ): null | SimpleWidget<unknown> => {\n        const widget = jQuery.data(el, dataKey) as unknown;\n\n        if (widget && widget instanceof SimpleWidget) {\n            return widget;\n        } else {\n            return null;\n        }\n    };\n\n    const createWidget = ($el: JQuery, options: unknown): JQuery => {\n        const dataKey = getDataKey();\n\n        for (const el of $el.get()) {\n            const existingWidget = getWidgetData(el, dataKey);\n\n            if (!existingWidget) {\n                const simpleWidgetClass = widgetClass as typeof SimpleWidget;\n                const widget = new simpleWidgetClass(el, options);\n\n                if (!jQuery.data(el, dataKey)) {\n                    jQuery.data(el, dataKey, widget);\n                }\n\n                // Call init after setting data, so we can call methods\n                widget.init();\n            }\n        }\n\n        return $el;\n    };\n\n    const destroyWidget = ($el: JQuery): void => {\n        const dataKey = getDataKey();\n\n        for (const el of $el.get()) {\n            const widget = getWidgetData(el, dataKey);\n\n            if (widget) {\n                widget.destroy();\n            }\n\n            jQuery.removeData(el, dataKey);\n        }\n    };\n\n    const callFunction = (\n        $el: JQuery,\n        functionName: string,\n        args: unknown[],\n    ): unknown => {\n        let result = null;\n\n        for (const el of $el.get()) {\n            const widget = jQuery.data(el, getDataKey()) as unknown;\n\n            if (widget && widget instanceof SimpleWidget) {\n                const simpleWidget = widget as SimpleWidget<unknown>;\n                const widgetFunction = simpleWidget[functionName];\n\n                if (widgetFunction && typeof widgetFunction === \"function\") {\n                    result = widgetFunction.apply(widget, args) as unknown;\n                }\n            }\n        }\n\n        return result;\n    };\n\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    (jQuery.fn as any)[widgetName] = function (\n        this: JQuery,\n        argument1: unknown,\n        ...args: unknown[]\n    ) {\n        if (!argument1) {\n            return createWidget(this, null);\n        } else if (typeof argument1 === \"object\") {\n            const options = argument1 as unknown;\n            return createWidget(this, options);\n        } else if (typeof argument1 === \"string\" && argument1[0] !== \"_\") {\n            const functionName = argument1;\n\n            if (functionName === \"destroy\") {\n                destroyWidget(this);\n                return undefined;\n            } else if (functionName === \"get_widget_class\") {\n                return widgetClass;\n            } else {\n                return callFunction(this, functionName, args);\n            }\n        } else {\n            return undefined;\n        }\n    };\n};\n\nexport default class SimpleWidget<WidgetOptions> {\n    [key: string]: unknown;\n\n    protected static defaults: unknown = {};\n\n    public $el: JQuery;\n\n    public options: WidgetOptions;\n\n    constructor(el: HTMLElement, options: WidgetOptions) {\n        this.$el = jQuery(el);\n\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        const defaults = (this.constructor as any).defaults as WidgetOptions;\n        this.options = { ...defaults, ...options };\n    }\n\n    public static register(widgetClass: unknown, widgetName: string): void {\n        register(widgetClass, widgetName);\n    }\n\n    public deinit(): void {\n        //\n    }\n\n    public destroy(): void {\n        this.deinit();\n    }\n\n    public init(): void {\n        //\n    }\n}\n","const version = \"1.8.8\";\n\nexport default version;\n","import DataLoader, { HandleFinishedLoading } from \"./dataLoader\";\nimport { DragAndDropHandler } from \"./dragAndDropHandler\";\nimport ElementsRenderer from \"./elementsRenderer\";\nimport { OnFinishOpenNode } from \"./jqtreeMethodTypes\";\nimport { JQTreeOptions } from \"./jqtreeOptions\";\nimport KeyHandler from \"./keyHandler\";\nimport MouseHandler from \"./mouseHandler\";\nimport { PositionInfo } from \"./mouseUtils\";\nimport { Node } from \"./node\";\nimport NodeElement from \"./nodeElement\";\nimport FolderElement from \"./nodeElement/folderElement\";\nimport { getPosition } from \"./position\";\nimport SaveStateHandler, { SavedState } from \"./saveStateHandler\";\nimport ScrollHandler from \"./scrollHandler\";\nimport SelectNodeHandler from \"./selectNodeHandler\";\nimport SimpleWidget from \"./simple.widget\";\nimport { getOffsetTop, isFunction } from \"./util\";\nimport __version__ from \"./version\";\n\ninterface SelectNodeOptions {\n    mustSetFocus?: boolean;\n    mustToggle?: boolean;\n}\n\nconst NODE_PARAM_IS_EMPTY = \"Node parameter is empty\";\nconst PARAM_IS_EMPTY = \"Parameter is empty: \";\n\nexport class JqTreeWidget extends SimpleWidget<JQTreeOptions> {\n    protected static defaults: JQTreeOptions = {\n        animationSpeed: \"fast\",\n        autoEscape: true,\n        autoOpen: false, // true / false / int (open n levels starting at 0)\n        buttonLeft: true,\n        // The symbol to use for a closed node - ► BLACK RIGHT-POINTING POINTER\n        // http://www.fileformat.info/info/unicode/char/25ba/index.htm\n        closedIcon: undefined,\n        data: undefined,\n        dataFilter: undefined,\n        dataUrl: undefined,\n        dragAndDrop: false,\n        keyboardSupport: true,\n        nodeClass: Node,\n        onCanMove: undefined, // Can this node be moved?\n        onCanMoveTo: undefined, // Can this node be moved to this position? function(moved_node, target_node, position)\n        onCanSelectNode: undefined,\n        onCreateLi: undefined,\n        onDragMove: undefined,\n        onDragStop: undefined,\n        onGetStateFromStorage: undefined,\n        onIsMoveHandle: undefined,\n        onLoadFailed: undefined,\n        onLoading: undefined,\n        onSetStateFromStorage: undefined,\n        openedIcon: \"&#x25bc;\",\n        openFolderDelay: 500, // The delay for opening a folder during drag and drop; the value is in milliseconds\n        // The symbol to use for an open node - ▼ BLACK DOWN-POINTING TRIANGLE\n        // http://www.fileformat.info/info/unicode/char/25bc/index.htm\n        rtl: undefined, // right-to-left support; true / false (default)\n        saveState: false, // true / false / string (cookie name)\n        selectable: true,\n        showEmptyFolder: false,\n        slide: true, // must display slide animation?\n        startDndDelay: 300, // The delay for starting dnd (in milliseconds)\n        tabIndex: 0,\n        useContextMenu: true,\n    };\n\n    private dataLoader: DataLoader;\n    private dndHandler: DragAndDropHandler;\n    private element: JQuery;\n\n    private isInitialized: boolean;\n    private keyHandler: KeyHandler;\n    private mouseHandler: MouseHandler;\n    private renderer: ElementsRenderer;\n    private saveStateHandler: SaveStateHandler;\n    private scrollHandler: ScrollHandler;\n    private selectNodeHandler: SelectNodeHandler;\n    private tree: Node;\n\n    public addNodeAfter(\n        newNodeInfo: NodeData,\n        existingNode: Node,\n    ): Node | null {\n        const newNode = existingNode.addAfter(newNodeInfo);\n\n        if (newNode) {\n            this.refreshElements(existingNode.parent);\n        }\n\n        return newNode;\n    }\n\n    public addNodeBefore(\n        newNodeInfo: NodeData,\n        existingNode?: Node,\n    ): Node | null {\n        if (!existingNode) {\n            throw Error(PARAM_IS_EMPTY + \"existingNode\");\n        }\n\n        const newNode = existingNode.addBefore(newNodeInfo);\n\n        if (newNode) {\n            this.refreshElements(existingNode.parent);\n        }\n\n        return newNode;\n    }\n\n    public addParentNode(\n        newNodeInfo: NodeData,\n        existingNode?: Node,\n    ): Node | null {\n        if (!existingNode) {\n            throw Error(PARAM_IS_EMPTY + \"existingNode\");\n        }\n\n        const newNode = existingNode.addParent(newNodeInfo);\n\n        if (newNode) {\n            this.refreshElements(newNode.parent);\n        }\n\n        return newNode;\n    }\n\n    public addToSelection(node?: Node, mustSetFocus?: boolean): JQuery {\n        if (!node) {\n            throw Error(NODE_PARAM_IS_EMPTY);\n        }\n\n        this.selectNodeHandler.addToSelection(node);\n        this.openParents(node);\n\n        this.getNodeElementForNode(node).select(mustSetFocus ?? true);\n\n        this.saveState();\n\n        return this.element;\n    }\n\n    public appendNode(newNodeInfo: NodeData, parentNodeParam?: Node): Node {\n        const parentNode = parentNodeParam ?? this.tree;\n\n        const node = parentNode.append(newNodeInfo);\n\n        this.refreshElements(parentNode);\n\n        return node;\n    }\n\n    public closeNode(node?: Node, slideParam?: boolean | null): JQuery {\n        if (!node) {\n            throw Error(NODE_PARAM_IS_EMPTY);\n        }\n\n        const slide = slideParam ?? this.options.slide;\n\n        if (node.isFolder() || node.isEmptyFolder) {\n            this.createFolderElement(node).close(\n                slide,\n                this.options.animationSpeed,\n            );\n\n            this.saveState();\n        }\n\n        return this.element;\n    }\n\n    public deinit(): void {\n        this.element.empty();\n        this.element.off();\n\n        this.keyHandler.deinit();\n        this.mouseHandler.deinit();\n\n        this.tree = new Node({}, true);\n\n        super.deinit();\n    }\n\n    public getNodeByCallback(callback: (node: Node) => boolean): Node | null {\n        return this.tree.getNodeByCallback(callback);\n    }\n\n    public getNodeByHtmlElement(\n        inputElement: HTMLElement | JQuery,\n    ): Node | null {\n        const element =\n            inputElement instanceof HTMLElement\n                ? inputElement\n                : inputElement[0];\n\n        if (!element) {\n            return null;\n        }\n\n        return this.getNode(element);\n    }\n\n    public getNodeById(nodeId: NodeId): Node | null {\n        return this.tree.getNodeById(nodeId);\n    }\n\n    public getNodeByName(name: string): Node | null {\n        return this.tree.getNodeByName(name);\n    }\n\n    public getNodeByNameMustExist(name: string): Node {\n        return this.tree.getNodeByNameMustExist(name);\n    }\n\n    public getNodesByProperty(key: string, value: unknown): Node[] {\n        return this.tree.getNodesByProperty(key, value);\n    }\n\n    public getSelectedNode(): false | Node {\n        return this.selectNodeHandler.getSelectedNode();\n    }\n\n    public getSelectedNodes(): Node[] {\n        return this.selectNodeHandler.getSelectedNodes();\n    }\n\n    public getState(): null | SavedState {\n        return this.saveStateHandler.getState();\n    }\n\n    public getStateFromStorage(): null | SavedState {\n        return this.saveStateHandler.getStateFromStorage();\n    }\n\n    public getTree(): Node {\n        return this.tree;\n    }\n\n    public getVersion(): string {\n        return __version__;\n    }\n\n    public init(): void {\n        super.init();\n\n        this.element = this.$el;\n        this.isInitialized = false;\n\n        this.options.rtl = this.getRtlOption();\n\n        if (this.options.closedIcon == null) {\n            this.options.closedIcon = this.getDefaultClosedIcon();\n        }\n\n        this.connectHandlers();\n\n        this.initData();\n    }\n\n    public isDragging(): boolean {\n        return this.dndHandler.isDragging;\n    }\n\n    public isNodeSelected(node?: Node): boolean {\n        if (!node) {\n            throw Error(NODE_PARAM_IS_EMPTY);\n        }\n\n        return this.selectNodeHandler.isNodeSelected(node);\n    }\n\n    public loadData(data: NodeData[], parentNode: Node | null): JQuery {\n        this.doLoadData(data, parentNode);\n        return this.element;\n    }\n\n    /*\n    signatures:\n    - loadDataFromUrl(url, parent_node=null, on_finished=null)\n        loadDataFromUrl('/my_data');\n        loadDataFromUrl('/my_data', node1);\n        loadDataFromUrl('/my_data', node1, function() { console.log('finished'); });\n        loadDataFromUrl('/my_data', null, function() { console.log('finished'); });\n\n    - loadDataFromUrl(parent_node=null, on_finished=null)\n        loadDataFromUrl();\n        loadDataFromUrl(node1);\n        loadDataFromUrl(null, function() { console.log('finished'); });\n        loadDataFromUrl(node1, function() { console.log('finished'); });\n    */\n    public loadDataFromUrl(\n        param1: Node | null | string,\n        param2?: HandleFinishedLoading | Node | null,\n        param3?: HandleFinishedLoading,\n    ): JQuery {\n        if (typeof param1 === \"string\") {\n            // first parameter is url\n            this.doLoadDataFromUrl(\n                param1,\n                param2 as Node | null,\n                param3 ?? null,\n            );\n        } else {\n            // first parameter is not url\n            this.doLoadDataFromUrl(\n                null,\n                param1,\n                param2 as HandleFinishedLoading | null,\n            );\n        }\n\n        return this.element;\n    }\n\n    public moveDown(): JQuery {\n        const selectedNode = this.getSelectedNode();\n        if (selectedNode) {\n            this.keyHandler.moveDown(selectedNode);\n        }\n\n        return this.element;\n    }\n\n    public moveNode(node?: Node, targetNode?: Node, position?: string): JQuery {\n        if (!node) {\n            throw Error(NODE_PARAM_IS_EMPTY);\n        }\n\n        if (!targetNode) {\n            throw Error(PARAM_IS_EMPTY + \"targetNode\");\n        }\n\n        if (!position) {\n            throw Error(PARAM_IS_EMPTY + \"position\");\n        }\n\n        const positionIndex = getPosition(position);\n\n        if (positionIndex !== undefined) {\n            this.tree.moveNode(node, targetNode, positionIndex);\n            this.refreshElements(null);\n        }\n\n        return this.element;\n    }\n\n    public moveUp(): JQuery {\n        const selectedNode = this.getSelectedNode();\n        if (selectedNode) {\n            this.keyHandler.moveUp(selectedNode);\n        }\n\n        return this.element;\n    }\n\n    public openNode(\n        node?: Node,\n        param1?: boolean | OnFinishOpenNode,\n        param2?: OnFinishOpenNode,\n    ): JQuery {\n        if (!node) {\n            throw Error(NODE_PARAM_IS_EMPTY);\n        }\n\n        const parseParams = (): [boolean, OnFinishOpenNode | undefined] => {\n            let onFinished: null | OnFinishOpenNode;\n            let slide: boolean | null;\n\n            if (isFunction(param1)) {\n                onFinished = param1 as OnFinishOpenNode;\n                slide = null;\n            } else {\n                slide = param1 as boolean;\n                onFinished = param2 as OnFinishOpenNode;\n            }\n\n            if (slide == null) {\n                slide = this.options.slide;\n            }\n\n            return [slide, onFinished];\n        };\n\n        const [slide, onFinished] = parseParams();\n\n        this.openNodeInternal(node, slide, onFinished);\n        return this.element;\n    }\n\n    public prependNode(newNodeInfo: NodeData, parentNodeParam?: Node): Node {\n        const parentNode = parentNodeParam ?? this.tree;\n\n        const node = parentNode.prepend(newNodeInfo);\n\n        this.refreshElements(parentNode);\n\n        return node;\n    }\n\n    public refresh(): JQuery {\n        this.refreshElements(null);\n        return this.element;\n    }\n\n    public refreshHitAreas(): JQuery {\n        this.dndHandler.refresh();\n        return this.element;\n    }\n\n    public reload(onFinished: HandleFinishedLoading | null): JQuery {\n        this.doLoadDataFromUrl(null, null, onFinished);\n        return this.element;\n    }\n\n    public removeFromSelection(node?: Node): JQuery {\n        if (!node) {\n            throw Error(NODE_PARAM_IS_EMPTY);\n        }\n\n        this.selectNodeHandler.removeFromSelection(node);\n\n        this.getNodeElementForNode(node).deselect();\n        this.saveState();\n\n        return this.element;\n    }\n\n    public removeNode(node?: Node): JQuery {\n        if (!node) {\n            throw Error(NODE_PARAM_IS_EMPTY);\n        }\n\n        if (!node.parent) {\n            throw Error(\"Node has no parent\");\n        }\n\n        this.selectNodeHandler.removeFromSelection(node, true); // including children\n\n        const parent = node.parent;\n        node.remove();\n        this.refreshElements(parent);\n\n        return this.element;\n    }\n\n    public scrollToNode(node?: Node): JQuery {\n        if (!node) {\n            throw Error(NODE_PARAM_IS_EMPTY);\n        }\n\n        if (!node.element) {\n            return this.element;\n        }\n\n        const top =\n            getOffsetTop(node.element) -\n            getOffsetTop(this.$el.get(0) as HTMLElement);\n\n        this.scrollHandler.scrollToY(top);\n\n        return this.element;\n    }\n\n    public selectNode(\n        node: Node | null,\n        optionsParam?: SelectNodeOptions,\n    ): JQuery {\n        this.doSelectNode(node, optionsParam);\n        return this.element;\n    }\n\n    public setOption(option: string, value: unknown): JQuery {\n        (this.options as unknown as Record<string, unknown>)[option] = value;\n        return this.element;\n    }\n\n    public setState(state?: SavedState): JQuery {\n        if (state) {\n            this.saveStateHandler.setInitialState(state);\n            this.refreshElements(null);\n        }\n\n        return this.element;\n    }\n\n    public toggle(node?: Node, slideParam: boolean | null = null): JQuery {\n        if (!node) {\n            throw Error(NODE_PARAM_IS_EMPTY);\n        }\n\n        const slide = slideParam ?? this.options.slide;\n\n        if (node.is_open) {\n            this.closeNode(node, slide);\n        } else {\n            this.openNode(node, slide);\n        }\n\n        return this.element;\n    }\n\n    public toJson(): string {\n        return JSON.stringify(this.tree.getData());\n    }\n\n    public updateNode(node?: Node, data?: NodeData): JQuery {\n        if (!node) {\n            throw Error(NODE_PARAM_IS_EMPTY);\n        }\n\n        if (!data) {\n            return this.element;\n        }\n\n        const idIsChanged =\n            typeof data === \"object\" && data.id && data.id !== node.id;\n\n        if (idIsChanged) {\n            this.tree.removeNodeFromIndex(node);\n        }\n\n        node.setData(data);\n\n        if (idIsChanged) {\n            this.tree.addNodeToIndex(node);\n        }\n\n        if (\n            typeof data === \"object\" &&\n            data.children &&\n            data.children instanceof Array\n        ) {\n            node.removeChildren();\n\n            if (data.children.length) {\n                node.loadFromData(data.children as Node[]);\n            }\n        }\n\n        this.refreshElements(node);\n\n        return this.element;\n    }\n\n    private connectHandlers() {\n        const {\n            autoEscape,\n            buttonLeft,\n            closedIcon,\n            dataFilter,\n            dragAndDrop,\n            keyboardSupport,\n            onCanMove,\n            onCanMoveTo,\n            onCreateLi,\n            onDragMove,\n            onDragStop,\n            onGetStateFromStorage,\n            onIsMoveHandle,\n            onLoadFailed,\n            onLoading,\n            onSetStateFromStorage,\n            openedIcon,\n            openFolderDelay,\n            rtl,\n            saveState,\n            showEmptyFolder,\n            slide,\n            tabIndex,\n        } = this.options;\n\n        const closeNode = this.closeNode.bind(this);\n        const getNodeElement = this.getNodeElement.bind(this);\n        const getNodeElementForNode = this.getNodeElementForNode.bind(this);\n        const getNodeById = this.getNodeById.bind(this);\n        const getSelectedNode = this.getSelectedNode.bind(this);\n        const getTree = this.getTree.bind(this);\n        const isFocusOnTree = this.isFocusOnTree.bind(this);\n        const loadData = this.loadData.bind(this);\n        const openNode = this.openNodeInternal.bind(this);\n        const refreshElements = this.refreshElements.bind(this);\n        const refreshHitAreas = this.refreshHitAreas.bind(this);\n        const selectNode = this.selectNode.bind(this);\n        const $treeElement = this.element;\n        const treeElement = this.element.get(0) as HTMLElement;\n        const triggerEvent = this.triggerEvent.bind(this);\n\n        const selectNodeHandler = new SelectNodeHandler({\n            getNodeById,\n        });\n\n        const addToSelection =\n            selectNodeHandler.addToSelection.bind(selectNodeHandler);\n        const getSelectedNodes =\n            selectNodeHandler.getSelectedNodes.bind(selectNodeHandler);\n        const isNodeSelected =\n            selectNodeHandler.isNodeSelected.bind(selectNodeHandler);\n        const removeFromSelection =\n            selectNodeHandler.removeFromSelection.bind(selectNodeHandler);\n        const getMouseDelay = () => this.options.startDndDelay ?? 0;\n\n        const dataLoader = new DataLoader({\n            dataFilter,\n            loadData,\n            onLoadFailed,\n            onLoading,\n            treeElement,\n            triggerEvent,\n        });\n\n        const saveStateHandler = new SaveStateHandler({\n            addToSelection,\n            getNodeById,\n            getSelectedNodes,\n            getTree,\n            onGetStateFromStorage,\n            onSetStateFromStorage,\n            openNode,\n            refreshElements,\n            removeFromSelection,\n            saveState,\n        });\n\n        const scrollHandler = new ScrollHandler({\n            refreshHitAreas,\n            treeElement,\n        });\n\n        const getScrollLeft = scrollHandler.getScrollLeft.bind(scrollHandler);\n\n        const dndHandler = new DragAndDropHandler({\n            autoEscape,\n            getNodeElement,\n            getNodeElementForNode,\n            getScrollLeft,\n            getTree,\n            onCanMove,\n            onCanMoveTo,\n            onDragMove,\n            onDragStop,\n            onIsMoveHandle,\n            openFolderDelay,\n            openNode,\n            refreshElements,\n            slide,\n            treeElement,\n            triggerEvent,\n        });\n\n        const keyHandler = new KeyHandler({\n            closeNode,\n            getSelectedNode,\n            isFocusOnTree,\n            keyboardSupport,\n            openNode,\n            selectNode,\n        });\n\n        const renderer = new ElementsRenderer({\n            $element: $treeElement,\n            autoEscape,\n            buttonLeft,\n            closedIcon,\n            dragAndDrop,\n            getTree,\n            isNodeSelected,\n            onCreateLi,\n            openedIcon,\n            rtl,\n            showEmptyFolder,\n            tabIndex,\n        });\n\n        const getNode = this.getNode.bind(this);\n        const onMouseCapture = this.mouseCapture.bind(this);\n        const onMouseDrag = this.mouseDrag.bind(this);\n        const onMouseStart = this.mouseStart.bind(this);\n        const onMouseStop = this.mouseStop.bind(this);\n\n        const mouseHandler = new MouseHandler({\n            element: treeElement,\n            getMouseDelay,\n            getNode,\n            onClickButton: this.toggle.bind(this),\n            onClickTitle: this.doSelectNode.bind(this),\n            onMouseCapture,\n            onMouseDrag,\n            onMouseStart,\n            onMouseStop,\n            triggerEvent,\n            useContextMenu: this.options.useContextMenu,\n        });\n\n        this.dataLoader = dataLoader;\n        this.dndHandler = dndHandler;\n        this.keyHandler = keyHandler;\n        this.mouseHandler = mouseHandler;\n        this.renderer = renderer;\n        this.saveStateHandler = saveStateHandler;\n        this.scrollHandler = scrollHandler;\n        this.selectNodeHandler = selectNodeHandler;\n    }\n\n    private containsElement(element: HTMLElement): boolean {\n        const node = this.getNode(element);\n\n        return node != null && node.tree === this.tree;\n    }\n\n    private createFolderElement(node: Node) {\n        const closedIconElement = this.renderer.closedIconElement;\n        const getScrollLeft = this.scrollHandler.getScrollLeft.bind(\n            this.scrollHandler,\n        );\n        const openedIconElement = this.renderer.openedIconElement;\n        const tabIndex = this.options.tabIndex;\n        const treeElement = this.element.get(0) as HTMLElement;\n        const triggerEvent = this.triggerEvent.bind(this);\n\n        return new FolderElement({\n            closedIconElement,\n            getScrollLeft,\n            node,\n            openedIconElement,\n            tabIndex,\n            treeElement,\n            triggerEvent,\n        });\n    }\n\n    private createNodeElement(node: Node) {\n        const getScrollLeft = this.scrollHandler.getScrollLeft.bind(\n            this.scrollHandler,\n        );\n        const tabIndex = this.options.tabIndex;\n        const treeElement = this.element.get(0) as HTMLElement;\n\n        return new NodeElement({\n            getScrollLeft,\n            node,\n            tabIndex,\n            treeElement,\n        });\n    }\n\n    private deselectCurrentNode(): void {\n        const node = this.getSelectedNode();\n        if (node) {\n            this.removeFromSelection(node);\n        }\n    }\n\n    private deselectNodes(parentNode: Node): void {\n        const selectedNodesUnderParent =\n            this.selectNodeHandler.getSelectedNodesUnder(parentNode);\n        for (const n of selectedNodesUnderParent) {\n            this.selectNodeHandler.removeFromSelection(n);\n        }\n    }\n\n    private doLoadData(data: NodeData[] | null, parentNode: Node | null): void {\n        if (data) {\n            if (parentNode) {\n                this.deselectNodes(parentNode);\n                this.loadSubtree(data, parentNode);\n            } else {\n                this.initTree(data);\n            }\n\n            if (this.isDragging()) {\n                this.dndHandler.refresh();\n            }\n        }\n\n        this.triggerEvent(\"tree.load_data\", {\n            parent_node: parentNode,\n            tree_data: data,\n        });\n    }\n\n    private doLoadDataFromUrl(\n        urlInfoParam: JQuery.AjaxSettings | null | string,\n        parentNode: Node | null,\n        onFinished: HandleFinishedLoading | null,\n    ): void {\n        const urlInfo = urlInfoParam ?? this.getDataUrlInfo(parentNode);\n\n        this.dataLoader.loadFromUrl(urlInfo, parentNode, onFinished);\n    }\n\n    private doSelectNode(\n        node: Node | null,\n        optionsParam?: SelectNodeOptions,\n    ): void {\n        const saveState = (): void => {\n            if (this.options.saveState) {\n                this.saveStateHandler.saveState();\n            }\n        };\n\n        if (!node) {\n            // Called with empty node -> deselect current node\n            this.deselectCurrentNode();\n            saveState();\n            return;\n        }\n        const defaultOptions = { mustSetFocus: true, mustToggle: true };\n        const selectOptions = { ...defaultOptions, ...(optionsParam ?? {}) };\n\n        const canSelect = (): boolean => {\n            if (this.options.onCanSelectNode) {\n                return (\n                    this.options.selectable &&\n                    this.options.onCanSelectNode(node)\n                );\n            } else {\n                return this.options.selectable;\n            }\n        };\n\n        if (!canSelect()) {\n            return;\n        }\n\n        if (this.selectNodeHandler.isNodeSelected(node)) {\n            if (selectOptions.mustToggle) {\n                this.deselectCurrentNode();\n                this.triggerEvent(\"tree.select\", {\n                    node: null,\n                    previous_node: node,\n                });\n            }\n        } else {\n            const deselectedNode = this.getSelectedNode() || null;\n            this.deselectCurrentNode();\n            this.addToSelection(node, selectOptions.mustSetFocus);\n\n            this.triggerEvent(\"tree.select\", {\n                deselected_node: deselectedNode,\n                node,\n            });\n            this.openParents(node);\n        }\n\n        saveState();\n    }\n\n    private getAutoOpenMaxLevel(): number {\n        if (this.options.autoOpen === true) {\n            return -1;\n        } else if (typeof this.options.autoOpen === \"number\") {\n            return this.options.autoOpen;\n        } else if (typeof this.options.autoOpen === \"string\") {\n            return parseInt(this.options.autoOpen, 10);\n        } else {\n            return 0;\n        }\n    }\n\n    private getDataUrlInfo(node: Node | null): JQuery.AjaxSettings | null {\n        const dataUrl =\n            this.options.dataUrl ?? (this.element.data(\"url\") as null | string);\n\n        const getUrlFromString = (url: string): JQuery.AjaxSettings => {\n            const urlInfo: JQuery.AjaxSettings = { url };\n\n            setUrlInfoData(urlInfo);\n\n            return urlInfo;\n        };\n\n        const setUrlInfoData = (urlInfo: JQuery.AjaxSettings): void => {\n            if (node?.id) {\n                // Load on demand of a subtree; add node parameter\n                const data = { node: node.id };\n                urlInfo.data = data;\n            } else {\n                // Add selected_node parameter\n                const selectedNodeId = this.getNodeIdToBeSelected();\n                if (selectedNodeId) {\n                    const data = { selected_node: selectedNodeId };\n                    urlInfo.data = data;\n                }\n            }\n        };\n\n        if (typeof dataUrl === \"function\") {\n            return dataUrl(node);\n        } else if (typeof dataUrl === \"string\") {\n            return getUrlFromString(dataUrl);\n        } else if (dataUrl && typeof dataUrl === \"object\") {\n            setUrlInfoData(dataUrl);\n            return dataUrl;\n        } else {\n            return null;\n        }\n    }\n\n    private getDefaultClosedIcon(): string {\n        if (this.options.rtl) {\n            // triangle to the left\n            return \"&#x25c0;\";\n        } else {\n            // triangle to the right\n            return \"&#x25ba;\";\n        }\n    }\n\n    private getNode(element: HTMLElement): Node | null {\n        const liElement = element.closest(\"li.jqtree_common\");\n\n        if (liElement) {\n            return jQuery(liElement).data(\"node\") as Node;\n        } else {\n            return null;\n        }\n    }\n\n    private getNodeElement(element: HTMLElement): NodeElement | null {\n        const node = this.getNode(element);\n        if (node) {\n            return this.getNodeElementForNode(node);\n        } else {\n            return null;\n        }\n    }\n\n    private getNodeElementForNode(node: Node): NodeElement {\n        if (node.isFolder()) {\n            return this.createFolderElement(node);\n        } else {\n            return this.createNodeElement(node);\n        }\n    }\n\n    private getNodeIdToBeSelected(): NodeId | null {\n        if (this.options.saveState) {\n            return this.saveStateHandler.getNodeIdToBeSelected();\n        } else {\n            return null;\n        }\n    }\n\n    private getRtlOption(): boolean {\n        if (this.options.rtl != null) {\n            return this.options.rtl;\n        } else {\n            const dataRtl = this.element.data(\"rtl\") as unknown;\n\n            if (\n                dataRtl !== null &&\n                dataRtl !== false &&\n                dataRtl !== undefined\n            ) {\n                return true;\n            } else {\n                return false;\n            }\n        }\n    }\n\n    private initData(): void {\n        if (this.options.data) {\n            this.doLoadData(this.options.data, null);\n        } else {\n            const dataUrl = this.getDataUrlInfo(null);\n\n            if (dataUrl) {\n                this.doLoadDataFromUrl(null, null, null);\n            } else {\n                this.doLoadData([], null);\n            }\n        }\n    }\n\n    private initTree(data: NodeData[]): void {\n        const doInit = (): void => {\n            if (!this.isInitialized) {\n                this.isInitialized = true;\n                this.triggerEvent(\"tree.init\");\n            }\n        };\n\n        this.tree = new this.options.nodeClass(\n            null,\n            true,\n            this.options.nodeClass,\n        );\n\n        this.selectNodeHandler.clear();\n\n        this.tree.loadFromData(data);\n\n        const mustLoadOnDemand = this.setInitialState();\n\n        this.refreshElements(null);\n\n        if (!mustLoadOnDemand) {\n            doInit();\n        } else {\n            // Load data on demand and then init the tree\n            this.setInitialStateOnDemand(doInit);\n        }\n    }\n\n    private isFocusOnTree(): boolean {\n        const activeElement = document.activeElement;\n\n        return Boolean(\n            activeElement &&\n                activeElement.tagName === \"SPAN\" &&\n                this.containsElement(activeElement as HTMLElement),\n        );\n    }\n\n    private isSelectedNodeInSubtree(subtree: Node): boolean {\n        const selectedNode = this.getSelectedNode();\n\n        if (!selectedNode) {\n            return false;\n        } else {\n            return subtree === selectedNode || subtree.isParentOf(selectedNode);\n        }\n    }\n\n    private loadFolderOnDemand(\n        node: Node,\n        slide = true,\n        onFinished?: OnFinishOpenNode,\n    ): void {\n        node.is_loading = true;\n\n        this.doLoadDataFromUrl(null, node, () => {\n            this.openNodeInternal(node, slide, onFinished);\n        });\n    }\n\n    private loadSubtree(data: NodeData[], parentNode: Node): void {\n        parentNode.loadFromData(data);\n\n        parentNode.load_on_demand = false;\n        parentNode.is_loading = false;\n\n        this.refreshElements(parentNode);\n    }\n\n    private mouseCapture(positionInfo: PositionInfo): boolean | null {\n        if (this.options.dragAndDrop) {\n            return this.dndHandler.mouseCapture(positionInfo);\n        } else {\n            return false;\n        }\n    }\n\n    private mouseDrag(positionInfo: PositionInfo): boolean {\n        if (this.options.dragAndDrop) {\n            const result = this.dndHandler.mouseDrag(positionInfo);\n\n            this.scrollHandler.checkScrolling(positionInfo);\n            return result;\n        } else {\n            return false;\n        }\n    }\n\n    private mouseStart(positionInfo: PositionInfo): boolean {\n        if (this.options.dragAndDrop) {\n            return this.dndHandler.mouseStart(positionInfo);\n        } else {\n            return false;\n        }\n    }\n\n    private mouseStop(positionInfo: PositionInfo): boolean {\n        if (this.options.dragAndDrop) {\n            this.scrollHandler.stopScrolling();\n            return this.dndHandler.mouseStop(positionInfo);\n        } else {\n            return false;\n        }\n    }\n\n    private openNodeInternal(\n        node: Node,\n        slide = true,\n        onFinished?: OnFinishOpenNode,\n    ): void {\n        const doOpenNode = (\n            _node: Node,\n            _slide: boolean,\n            _onFinished?: OnFinishOpenNode,\n        ): void => {\n            if (!node.children.length) {\n                return;\n            }\n\n            const folderElement = this.createFolderElement(_node);\n            folderElement.open(\n                _onFinished,\n                _slide,\n                this.options.animationSpeed,\n            );\n        };\n\n        if (node.isFolder() || node.isEmptyFolder) {\n            if (node.load_on_demand) {\n                this.loadFolderOnDemand(node, slide, onFinished);\n            } else {\n                let parent = node.parent;\n\n                while (parent) {\n                    // nb: do not open root element\n                    if (parent.parent) {\n                        doOpenNode(parent, false);\n                    }\n                    parent = parent.parent;\n                }\n\n                doOpenNode(node, slide, onFinished);\n                this.saveState();\n            }\n        }\n    }\n\n    private openParents(node: Node) {\n        const parent = node.parent;\n\n        if (parent?.parent && !parent.is_open) {\n            this.openNode(parent, false);\n        }\n    }\n\n    /*\n    Redraw the tree or part of the tree.\n     from_node: redraw this subtree\n    */\n    private refreshElements(fromNode: Node | null): void {\n        const mustSetFocus = this.isFocusOnTree();\n        const mustSelect = fromNode\n            ? this.isSelectedNodeInSubtree(fromNode)\n            : false;\n\n        this.renderer.render(fromNode);\n\n        if (mustSelect) {\n            this.selectCurrentNode(mustSetFocus);\n        }\n\n        this.triggerEvent(\"tree.refresh\");\n    }\n\n    private saveState(): void {\n        if (this.options.saveState) {\n            this.saveStateHandler.saveState();\n        }\n    }\n\n    private selectCurrentNode(mustSetFocus: boolean): void {\n        const node = this.getSelectedNode();\n        if (node) {\n            const nodeElement = this.getNodeElementForNode(node);\n            nodeElement.select(mustSetFocus);\n        }\n    }\n\n    // Set initial state, either by restoring the state or auto-opening nodes\n    // result: must load nodes on demand?\n    private setInitialState(): boolean {\n        const restoreState = (): [boolean, boolean] => {\n            // result: is state restored, must load on demand?\n            if (!this.options.saveState) {\n                return [false, false];\n            } else {\n                const state = this.saveStateHandler.getStateFromStorage();\n\n                if (!state) {\n                    return [false, false];\n                } else {\n                    const mustLoadOnDemand =\n                        this.saveStateHandler.setInitialState(state);\n\n                    // return true: the state is restored\n                    return [true, mustLoadOnDemand];\n                }\n            }\n        };\n\n        const autoOpenNodes = (): boolean => {\n            // result: must load on demand?\n            if (this.options.autoOpen === false) {\n                return false;\n            }\n\n            const maxLevel = this.getAutoOpenMaxLevel();\n            let mustLoadOnDemand = false;\n\n            this.tree.iterate((node: Node, level: number) => {\n                if (node.load_on_demand) {\n                    mustLoadOnDemand = true;\n                    return false;\n                } else if (!node.hasChildren()) {\n                    return false;\n                } else {\n                    node.is_open = true;\n                    return level !== maxLevel;\n                }\n            });\n\n            return mustLoadOnDemand;\n        };\n\n        let [isRestored, mustLoadOnDemand] = restoreState(); // eslint-disable-line prefer-const\n\n        if (!isRestored) {\n            mustLoadOnDemand = autoOpenNodes();\n        }\n\n        return mustLoadOnDemand;\n    }\n\n    // Set the initial state for nodes that are loaded on demand\n    // Call cb_finished when done\n    private setInitialStateOnDemand(cbFinished: () => void): void {\n        const restoreState = (): boolean => {\n            if (!this.options.saveState) {\n                return false;\n            } else {\n                const state = this.saveStateHandler.getStateFromStorage();\n\n                if (!state) {\n                    return false;\n                } else {\n                    this.saveStateHandler.setInitialStateOnDemand(\n                        state,\n                        cbFinished,\n                    );\n\n                    return true;\n                }\n            }\n        };\n\n        const autoOpenNodes = (): void => {\n            const maxLevel = this.getAutoOpenMaxLevel();\n            let loadingCount = 0;\n\n            const loadAndOpenNode = (node: Node): void => {\n                loadingCount += 1;\n                this.openNodeInternal(node, false, () => {\n                    loadingCount -= 1;\n                    openNodes();\n                });\n            };\n\n            const openNodes = (): void => {\n                this.tree.iterate((node: Node, level: number) => {\n                    if (node.load_on_demand) {\n                        if (!node.is_loading) {\n                            loadAndOpenNode(node);\n                        }\n\n                        return false;\n                    } else {\n                        this.openNodeInternal(node, false);\n\n                        return level !== maxLevel;\n                    }\n                });\n\n                if (loadingCount === 0) {\n                    cbFinished();\n                }\n            };\n\n            openNodes();\n        };\n\n        if (!restoreState()) {\n            autoOpenNodes();\n        }\n    }\n\n    private triggerEvent(\n        eventName: string,\n        values?: Record<string, unknown>,\n    ): JQuery.Event {\n        const event = jQuery.Event(eventName, values);\n        this.element.trigger(event);\n        return event;\n    }\n}\n\nSimpleWidget.register(JqTreeWidget, \"tree\");\n"],"names":["DataLoader","constructor","_ref","dataFilter","loadData","onLoadFailed","onLoading","treeElement","triggerEvent","loadFromUrl","urlInfo","parentNode","onFinished","element","getDomElement","addLoadingClass","notifyLoading","stopLoading","removeLoadingClass","handleSuccess","data","parseData","handleError","jqXHR","submitRequest","classList","add","isLoading","node","$el","jQuery","getParsedData","JSON","parse","parsedData","remove","urlInfoInput","url","ajaxSettings","cache","dataType","error","method","success","toUpperCase","ajax","Position","positionNames","after","After","before","Before","inside","Inside","none","None","getPositionName","position","name","Object","prototype","hasOwnProperty","call","getPosition","isInt","n","isFunction","v","getBoolString","value","getOffsetTop","getElementPosition","top","rect","getBoundingClientRect","left","x","window","scrollX","y","scrollY","binarySearch","items","compareFn","low","high","length","mid","item","undefined","compareResult","DragElement","autoEscape","nodeName","offsetX","offsetY","createElement","appendChild","move","pageX","pageY","style","document","textContent","innerHTML","iterateVisibleNodes","tree","handleAfterOpenFolder","handleClosedFolder","handleFirstNode","handleNode","handleOpenFolder","isFirstNode","iterate","nextNode","mustIterateInside","is_open","hasChildren","offsetParent","childrenLength","children","forEach","_","i","child","nextChild","generateHitPositions","currentNode","hitPositions","lastTop","addHitPosition","push","height","clientHeight","generateHitAreasForGroup","hitAreas","positionsInGroup","bottom","positionCount","Math","min","areaHeight","round","areaTop","generateHitAreasFromPositions","treeBottom","previousTop","group","generateHitAreas","DragAndDropHandler","getNodeElement","getNodeElementForNode","getScrollLeft","getTree","onCanMove","onCanMoveTo","onDragMove","onDragStop","onIsMoveHandle","openNode","refreshElements","slide","hoveredArea","isDragging","currentItem","mouseCapture","positionInfo","target","mustCaptureElement","nodeElement","mouseDrag","dragElement","area","findHoveredArea","canMoveToArea","isFolder","stopOpenFolderTimer","mustOpenFolderTimer","startOpenFolderTimer","updateDropHint","removeDropHint","originalEvent","mouseStart","refresh","mouseStop","moveItem","clear","removeHover","removeHitAreas","positionName","dimensions","getTreeDimensions","right","treePosition","clientWidth","movedNode","targetNode","previousParent","parent","doMove","moveNode","event","move_info","do_move","moved_node","original_event","previous_parent","target_node","isDefaultPrevented","previousGhost","folder","openFolder","openFolderDelay","openFolderTimer","setTimeout","clearTimeout","addDropHint","ElementsRenderer","$element","buttonLeft","closedIcon","dragAndDrop","isNodeSelected","onCreateLi","openedIcon","rtl","showEmptyFolder","tabIndex","openedIconElement","createButtonElement","closedIconElement","render","fromNode","renderFromNode","renderFromRoot","$previousLi","li","createLi","getLevel","createDomElements","empty","attachNodeData","div","createTextNode","nodeType","isRootNode","level","ul","createUl","createFolderLi","isSelected","buttonClasses","getButtonClasses","folderClasses","getFolderClasses","iconElement","className","setAttribute","buttonLink","cloneNode","titleSpan","createTitleSpan","Boolean","mustShowFolder","isEmptyFolder","createNodeLi","liClasses","classString","join","classes","setTreeItemAriaAttributes","role","is_loading","KeyHandler","closeNode","getSelectedNode","isFocusOnTree","keyboardSupport","selectNode","originalSelectNode","addEventListener","handleKeyDown","deinit","removeEventListener","moveDown","selectedNode","getNextVisibleNode","moveUp","getPreviousVisibleNode","canHandleKeyboard","e","isKeyHandled","key","moveLeft","moveRight","preventDefault","getParent","getPositionInfoFromMouseEvent","getPositionInfoFromTouch","touch","MouseHandler","getMouseDelay","getNode","onClickButton","onClickTitle","onMouseCapture","onMouseDrag","onMouseStart","onMouseStop","useContextMenu","handleClick","handleDblclick","mouseDown","passive","touchStart","handleContextmenu","isMouseStarted","mouseDelayTimer","isMouseDelayMet","mouseDownInfo","removeMouseMoveEventListeners","getClickTarget","button","closest","type","jqTreeElement","clickTarget","stopPropagation","click_event","handleMouseDown","handleMouseUp","handleStartMouse","handleMouseMove","cancelable","mouseMove","touchMove","mouseUp","touchEnd","mouseDelay","startMouseDelayTimer","result","touches","isNodeRecordWithChildren","Array","Node","nodeData","arguments","isRoot","nodeClass","load_on_demand","setData","idMapping","Map","addAfter","nodeInfo","createNode","childIndex","getChildIndex","addChildAtPosition","loadChildrenFromData","addBefore","addChild","setParent","index","splice","addNodeToIndex","id","set","addParent","newParent","originalParent","append","filter","f","indexOf","getData","includeParent","getDataFromNodes","nodes","map","tmpNode","k","getLastChild","lastChild","getNextNode","includeChildren","nextSibling","getNextSibling","nextIndex","getNodeByCallback","callback","getNodeById","nodeId","get","getNodeByName","getNodeByNameMustExist","Error","getNodesByProperty","getPreviousNode","previousSibling","getPreviousSibling","previousIndex","initFromData","addNode","addChildren","childrenData","isParentOf","_iterate","loadFromData","removeChildren","childData","doRemoveChild","prepend","removeChild","removeNodeFromIndex","delete","o","getNodeClass","BorderDropHint","scrollLeft","querySelector","hint","width","max","offsetWidth","GhostDropHint","ghost","createGhostElement","moveAfter","moveBefore","moveInsideOpenFolder","moveInside","circleSpan","lineSpan","childElement","NodeElement","init","mustShowBorderDropHint","deselect","getTitleSpan","removeAttribute","blur","select","mustSetFocus","toString","focus","getUl","FolderElement","close","animationSpeed","getButton","icon","doClose","slideUp","hide","open","doOpen","slideDown","show","SaveStateHandler","addToSelection","getSelectedNodes","onGetStateFromStorage","onSetStateFromStorage","removeFromSelection","saveState","saveStateOption","getNodeIdToBeSelected","state","getStateFromStorage","selected_node","getState","getOpenNodeIds","openNodes","getSelectedNodeIds","selectedNodeIds","open_nodes","jsonData","loadFromStorage","parseState","stringify","localStorage","setItem","getKeyName","setInitialState","mustLoadOnDemand","openInitialNodes","resetSelection","selectInitialNodes","setInitialStateOnDemand","cbFinished","loadingCount","nodeIds","newNodesIds","loadAndOpenNode","getItem","selectedNodes","selectCount","ContainerScrollParent","container","refreshHitAreas","checkHorizontalScrolling","newHorizontalScrollDirection","getNewHorizontalScrollDirection","horizontalScrollDirection","horizontalScrollTimeout","verticalScrollTimeout","scrollHorizontally","bind","checkVerticalScrolling","newVerticalScrollDirection","getNewVerticalScrollDirection","verticalScrollDirection","scrollVertically","scrollToY","scrollTop","stopScrolling","scrollParentTop","scrollParentBottom","scrollParentOffset","rightEdge","leftEdge","isNearRightEdge","isNearLeftEdge","getScrollParentTop","getScrollParentBottom","distance","scrollBy","behavior","DocumentScrollParent","documentElement","treeTop","documentScrollHeight","documentScrollWidth","canScrollDown","getDocumentScrollHeight","canScrollRight","getDocumentScrollWidth","scrollHeight","scrollWidth","windowWidth","innerWidth","distanceTop","windowHeight","innerHeight","isOverflow","overflowValue","hasOverFlow","getComputedStyle","overflowX","overflowY","getParentWithOverflow","parentElement","createScrollParent","tagName","ScrollHandler","scrollParent","checkScrolling","getScrollParent","SelectNodeHandler","Set","selectedSingleNode","getSelectedNodesUnder","has","register","widgetClass","widgetName","getDataKey","getWidgetData","el","dataKey","widget","SimpleWidget","createWidget","options","existingWidget","simpleWidgetClass","destroyWidget","destroy","removeData","callFunction","functionName","args","simpleWidget","widgetFunction","apply","fn","argument1","_len","_key","defaults","version","NODE_PARAM_IS_EMPTY","PARAM_IS_EMPTY","JqTreeWidget","autoOpen","dataUrl","onCanSelectNode","selectable","startDndDelay","addNodeAfter","newNodeInfo","existingNode","newNode","addNodeBefore","addParentNode","selectNodeHandler","openParents","appendNode","parentNodeParam","slideParam","createFolderElement","off","keyHandler","mouseHandler","getNodeByHtmlElement","inputElement","HTMLElement","saveStateHandler","getVersion","__version__","isInitialized","getRtlOption","getDefaultClosedIcon","connectHandlers","initData","dndHandler","doLoadData","loadDataFromUrl","param1","param2","param3","doLoadDataFromUrl","positionIndex","parseParams","openNodeInternal","prependNode","reload","removeNode","scrollToNode","scrollHandler","optionsParam","doSelectNode","setOption","option","setState","toggle","toJson","updateNode","idIsChanged","$treeElement","dataLoader","renderer","containsElement","createNodeElement","deselectCurrentNode","deselectNodes","selectedNodesUnderParent","loadSubtree","initTree","parent_node","tree_data","urlInfoParam","getDataUrlInfo","defaultOptions","mustToggle","selectOptions","canSelect","previous_node","deselectedNode","deselected_node","getAutoOpenMaxLevel","parseInt","getUrlFromString","setUrlInfoData","selectedNodeId","liElement","dataRtl","doInit","activeElement","isSelectedNodeInSubtree","subtree","loadFolderOnDemand","doOpenNode","_node","_slide","_onFinished","folderElement","mustSelect","selectCurrentNode","restoreState","autoOpenNodes","maxLevel","isRestored","eventName","values","Event","trigger"],"mappings":"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"}