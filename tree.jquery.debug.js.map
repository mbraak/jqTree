{"version":3,"file":"tree.jquery.debug.js","sources":["src/version.ts","src/nodeUtils.ts","src/node.ts","src/dragAndDropHandler/dragElement.ts","src/util.ts","src/dragAndDropHandler/visibleNodeIterator.ts","src/dragAndDropHandler/hitAreasGenerator.ts","src/dragAndDropHandler/index.ts","src/elementsRenderer.ts","src/dataLoader.ts","src/keyHandler.ts","src/simple.widget.ts","src/mouse.widget.ts","src/saveStateHandler.ts","src/scrollHandler/containerScrollParent.ts","src/scrollHandler/documentScrollParent.ts","src/scrollHandler/createScrollParent.ts","src/scrollHandler.ts","src/selectNodeHandler.ts","src/nodeElement/borderDropHint.ts","src/nodeElement/ghostDropHint.ts","src/nodeElement/index.ts","src/nodeElement/folderElement.ts","src/tree.jquery.ts"],"sourcesContent":["const version = \"1.8.0\";\n\nexport default version;\n","interface NodeRecordWithChildren extends NodeRecord {\n    children: NodeData[];\n}\n\nexport const isNodeRecordWithChildren = (\n    data: NodeData,\n): data is NodeRecordWithChildren =>\n    typeof data === \"object\" &&\n    \"children\" in data &&\n    data[\"children\"] instanceof Array;\n","import { isNodeRecordWithChildren } from \"./nodeUtils\";\n\nexport enum Position {\n    Before = 1,\n    After,\n    Inside,\n    None,\n}\n\nconst positionNames: Record<string, Position> = {\n    before: Position.Before,\n    after: Position.After,\n    inside: Position.Inside,\n    none: Position.None,\n};\n\ntype IterateCallback = (node: Node, level: number) => boolean;\n\nexport const getPositionName = (position: Position): string => {\n    for (const name in positionNames) {\n        if (Object.prototype.hasOwnProperty.call(positionNames, name)) {\n            if (positionNames[name] === position) {\n                return name;\n            }\n        }\n    }\n\n    return \"\";\n};\n\nexport const getPosition = (name: string): Position | undefined =>\n    positionNames[name];\n\nexport class Node implements INode {\n    public id?: NodeId;\n    public name: string;\n    public children: Node[];\n    public parent: Node | null;\n    public idMapping: Map<NodeId, Node>;\n    public tree?: Node;\n    public nodeClass?: typeof Node;\n    public load_on_demand: boolean;\n    public is_open: boolean;\n    public element: HTMLElement;\n    public is_loading: boolean;\n    public isEmptyFolder: boolean;\n\n    [key: string]: unknown;\n\n    constructor(\n        nodeData: NodeData | null = null,\n        isRoot = false,\n        nodeClass = Node,\n    ) {\n        this.name = \"\";\n        this.load_on_demand = false;\n\n        this.isEmptyFolder =\n            nodeData != null &&\n            isNodeRecordWithChildren(nodeData) &&\n            nodeData.children.length === 0;\n\n        this.setData(nodeData);\n\n        this.children = [];\n        this.parent = null;\n\n        if (isRoot) {\n            this.idMapping = new Map<NodeId, Node>();\n            this.tree = this;\n            this.nodeClass = nodeClass;\n        }\n    }\n\n    /*\n    Set the data of this node.\n\n    setData(string): set the name of the node\n    setData(object): set attributes of the node\n\n    Examples:\n        setData('node1')\n\n        setData({ name: 'node1', id: 1});\n\n        setData({ name: 'node2', id: 2, color: 'green'});\n\n    * This is an internal function; it is not in the docs\n    * Does not remove existing node values\n    */\n    public setData(o: NodeData | null): void {\n        if (!o) {\n            return;\n        } else if (typeof o === \"string\") {\n            this.name = o;\n        } else if (typeof o === \"object\") {\n            for (const key in o) {\n                if (Object.prototype.hasOwnProperty.call(o, key)) {\n                    const value = o[key];\n\n                    if (key === \"label\" || key === \"name\") {\n                        // You can use the 'label' key instead of 'name'; this is a legacy feature\n                        if (typeof value === \"string\") {\n                            this.name = value;\n                        }\n                    } else if (key !== \"children\" && key !== \"parent\") {\n                        // You can't update the children or the parent using this function\n                        this[key] = value;\n                    }\n                }\n            }\n        }\n    }\n\n    /*\n    Create tree from data.\n\n    Structure of data is:\n    [\n        {\n            name: 'node1',\n            children: [\n                { name: 'child1' },\n                { name: 'child2' }\n            ]\n        },\n        {\n            name: 'node2'\n        }\n    ]\n    */\n    public loadFromData(data: NodeData[]): Node {\n        this.removeChildren();\n\n        for (const childData of data) {\n            const node = this.createNode(childData);\n            this.addChild(node);\n\n            if (isNodeRecordWithChildren(childData)) {\n                node.loadFromData(childData.children);\n            }\n        }\n\n        return this;\n    }\n\n    /*\n    Add child.\n\n    tree.addChild(\n        new Node('child1')\n    );\n    */\n    public addChild(node: Node): void {\n        this.children.push(node);\n        node.setParent(this);\n    }\n\n    /*\n    Add child at position. Index starts at 0.\n\n    tree.addChildAtPosition(\n        new Node('abc'),\n        1\n    );\n    */\n    public addChildAtPosition(node: Node, index: number): void {\n        this.children.splice(index, 0, node);\n        node.setParent(this);\n    }\n\n    /*\n    Remove child. This also removes the children of the node.\n\n    tree.removeChild(tree.children[0]);\n    */\n    public removeChild(node: Node): void {\n        // remove children from the index\n        node.removeChildren();\n\n        this.doRemoveChild(node);\n    }\n\n    /*\n    Get child index.\n\n    var index = getChildIndex(node);\n    */\n    public getChildIndex(node: Node): number {\n        return this.children.indexOf(node);\n    }\n\n    /*\n    Does the tree have children?\n\n    if (tree.hasChildren()) {\n        //\n    }\n    */\n    public hasChildren(): boolean {\n        return this.children.length !== 0;\n    }\n\n    public isFolder(): boolean {\n        return this.hasChildren() || this.load_on_demand;\n    }\n\n    /*\n    Iterate over all the nodes in the tree.\n\n    Calls callback with (node, level).\n\n    The callback must return true to continue the iteration on current node.\n\n    tree.iterate(\n        function(node, level) {\n           console.log(node.name);\n\n           // stop iteration after level 2\n           return (level <= 2);\n        }\n    );\n\n    */\n    public iterate(callback: IterateCallback): void {\n        const _iterate = (node: Node, level: number): void => {\n            if (node.children) {\n                for (const child of node.children) {\n                    const result = callback(child, level);\n\n                    if (result && child.hasChildren()) {\n                        _iterate(child, level + 1);\n                    }\n                }\n            }\n        };\n\n        _iterate(this, 0);\n    }\n\n    /*\n    Move node relative to another node.\n\n    Argument position: Position.BEFORE, Position.AFTER or Position.Inside\n\n    // move node1 after node2\n    tree.moveNode(node1, node2, Position.AFTER);\n    */\n    public moveNode(\n        movedNode: Node,\n        targetNode: Node,\n        position: Position,\n    ): boolean {\n        if (!movedNode.parent || movedNode.isParentOf(targetNode)) {\n            // - Node is parent of target node\n            // - Or, parent is empty\n            return false;\n        } else {\n            movedNode.parent.doRemoveChild(movedNode);\n\n            switch (position) {\n                case Position.After: {\n                    if (targetNode.parent) {\n                        targetNode.parent.addChildAtPosition(\n                            movedNode,\n                            targetNode.parent.getChildIndex(targetNode) + 1,\n                        );\n                        return true;\n                    }\n                    return false;\n                }\n\n                case Position.Before: {\n                    if (targetNode.parent) {\n                        targetNode.parent.addChildAtPosition(\n                            movedNode,\n                            targetNode.parent.getChildIndex(targetNode),\n                        );\n                        return true;\n                    }\n                    return false;\n                }\n\n                case Position.Inside: {\n                    // move inside as first child\n                    targetNode.addChildAtPosition(movedNode, 0);\n                    return true;\n                }\n\n                default:\n                    return false;\n            }\n        }\n    }\n\n    /*\n    Get the tree as data.\n    */\n    public getData(includeParent = false): NodeRecord[] {\n        const getDataFromNodes = (nodes: Node[]): Record<string, unknown>[] => {\n            return nodes.map((node) => {\n                const tmpNode: Record<string, unknown> = {};\n\n                for (const k in node) {\n                    if (\n                        [\n                            \"parent\",\n                            \"children\",\n                            \"element\",\n                            \"idMapping\",\n                            \"load_on_demand\",\n                            \"nodeClass\",\n                            \"tree\",\n                            \"isEmptyFolder\",\n                        ].indexOf(k) === -1 &&\n                        Object.prototype.hasOwnProperty.call(node, k)\n                    ) {\n                        const v = node[k];\n                        tmpNode[k] = v;\n                    }\n                }\n\n                if (node.hasChildren()) {\n                    tmpNode[\"children\"] = getDataFromNodes(node.children);\n                }\n\n                return tmpNode;\n            });\n        };\n\n        if (includeParent) {\n            return getDataFromNodes([this]);\n        } else {\n            return getDataFromNodes(this.children);\n        }\n    }\n\n    public getNodeByName(name: string): Node | null {\n        return this.getNodeByCallback((node: Node) => node.name === name);\n    }\n\n    public getNodeByNameMustExist(name: string): Node {\n        const node = this.getNodeByCallback((n: Node) => n.name === name);\n\n        if (!node) {\n            throw `Node with name ${name} not found`;\n        }\n\n        return node;\n    }\n\n    public getNodeByCallback(callback: (node: Node) => boolean): Node | null {\n        let result: Node | null = null;\n\n        this.iterate((node: Node) => {\n            if (result) {\n                return false;\n            } else if (callback(node)) {\n                result = node;\n                return false;\n            } else {\n                return true;\n            }\n        });\n\n        return result;\n    }\n\n    public addAfter(nodeInfo: NodeData): Node | null {\n        if (!this.parent) {\n            return null;\n        } else {\n            const node = this.createNode(nodeInfo);\n\n            const childIndex = this.parent.getChildIndex(this);\n            this.parent.addChildAtPosition(node, childIndex + 1);\n\n            node.loadChildrenFromData(nodeInfo);\n            return node;\n        }\n    }\n\n    public addBefore(nodeInfo: NodeData): Node | null {\n        if (!this.parent) {\n            return null;\n        } else {\n            const node = this.createNode(nodeInfo);\n\n            const childIndex = this.parent.getChildIndex(this);\n            this.parent.addChildAtPosition(node, childIndex);\n\n            node.loadChildrenFromData(nodeInfo);\n            return node;\n        }\n    }\n\n    public addParent(nodeInfo: NodeData): Node | null {\n        if (!this.parent) {\n            return null;\n        } else {\n            const newParent = this.createNode(nodeInfo);\n\n            if (this.tree) {\n                newParent.setParent(this.tree);\n            }\n            const originalParent = this.parent;\n\n            for (const child of originalParent.children) {\n                newParent.addChild(child);\n            }\n\n            originalParent.children = [];\n            originalParent.addChild(newParent);\n            return newParent;\n        }\n    }\n\n    public remove(): void {\n        if (this.parent) {\n            this.parent.removeChild(this);\n            this.parent = null;\n        }\n    }\n\n    public append(nodeInfo: NodeData): Node {\n        const node = this.createNode(nodeInfo);\n        this.addChild(node);\n\n        node.loadChildrenFromData(nodeInfo);\n        return node;\n    }\n\n    public prepend(nodeInfo: NodeData): Node {\n        const node = this.createNode(nodeInfo);\n        this.addChildAtPosition(node, 0);\n\n        node.loadChildrenFromData(nodeInfo);\n        return node;\n    }\n\n    public isParentOf(node: Node): boolean {\n        let parent = node.parent;\n\n        while (parent) {\n            if (parent === this) {\n                return true;\n            }\n\n            parent = parent.parent;\n        }\n\n        return false;\n    }\n\n    public getLevel(): number {\n        let level = 0;\n        let node: Node = this; // eslint-disable-line @typescript-eslint/no-this-alias\n\n        while (node.parent) {\n            level += 1;\n            node = node.parent;\n        }\n\n        return level;\n    }\n\n    public getNodeById(nodeId: NodeId): Node | null {\n        return this.idMapping.get(nodeId) || null;\n    }\n\n    public addNodeToIndex(node: Node): void {\n        if (node.id != null) {\n            this.idMapping.set(node.id, node);\n        }\n    }\n\n    public removeNodeFromIndex(node: Node): void {\n        if (node.id != null) {\n            this.idMapping.delete(node.id);\n        }\n    }\n\n    public removeChildren(): void {\n        this.iterate((child: Node) => {\n            this.tree?.removeNodeFromIndex(child);\n            return true;\n        });\n\n        this.children = [];\n    }\n\n    public getPreviousSibling(): Node | null {\n        if (!this.parent) {\n            return null;\n        } else {\n            const previousIndex = this.parent.getChildIndex(this) - 1;\n            if (previousIndex >= 0) {\n                return this.parent.children[previousIndex] || null;\n            } else {\n                return null;\n            }\n        }\n    }\n\n    public getNextSibling(): Node | null {\n        if (!this.parent) {\n            return null;\n        } else {\n            const nextIndex = this.parent.getChildIndex(this) + 1;\n            if (nextIndex < this.parent.children.length) {\n                return this.parent.children[nextIndex] || null;\n            } else {\n                return null;\n            }\n        }\n    }\n\n    public getNodesByProperty(key: string, value: unknown): Node[] {\n        return this.filter((node: Node) => node[key] === value);\n    }\n\n    public filter(f: (node: Node) => boolean): Node[] {\n        const result: Node[] = [];\n\n        this.iterate((node: Node) => {\n            if (f(node)) {\n                result.push(node);\n            }\n\n            return true;\n        });\n\n        return result;\n    }\n\n    public getNextNode(includeChildren = true): Node | null {\n        if (includeChildren && this.hasChildren()) {\n            return this.children[0] || null;\n        } else if (!this.parent) {\n            return null;\n        } else {\n            const nextSibling = this.getNextSibling();\n\n            if (nextSibling) {\n                return nextSibling;\n            } else {\n                return this.parent.getNextNode(false);\n            }\n        }\n    }\n\n    public getNextVisibleNode(): Node | null {\n        if (this.hasChildren() && this.is_open) {\n            // First child\n            return this.children[0] || null;\n        } else {\n            if (!this.parent) {\n                return null;\n            } else {\n                const nextSibling = this.getNextSibling();\n                if (nextSibling) {\n                    // Next sibling\n                    return nextSibling;\n                } else {\n                    // Next node of parent\n                    return this.parent.getNextNode(false);\n                }\n            }\n        }\n    }\n\n    public getPreviousNode(): Node | null {\n        if (!this.parent) {\n            return null;\n        } else {\n            const previousSibling = this.getPreviousSibling();\n\n            if (!previousSibling) {\n                return this.getParent();\n            } else if (previousSibling.hasChildren()) {\n                return previousSibling.getLastChild();\n            } else {\n                return previousSibling;\n            }\n        }\n    }\n\n    public getPreviousVisibleNode(): Node | null {\n        if (!this.parent) {\n            return null;\n        } else {\n            const previousSibling = this.getPreviousSibling();\n\n            if (!previousSibling) {\n                return this.getParent();\n            } else if (\n                !previousSibling.hasChildren() ||\n                !previousSibling.is_open\n            ) {\n                // Previous sibling\n                return previousSibling;\n            } else {\n                // Last child of previous sibling\n                return previousSibling.getLastChild();\n            }\n        }\n    }\n\n    public getParent(): Node | null {\n        // Return parent except if it is the root node\n        if (!this.parent) {\n            return null;\n        } else if (!this.parent.parent) {\n            // Root node -> null\n            return null;\n        } else {\n            return this.parent;\n        }\n    }\n\n    public getLastChild(): Node | null {\n        if (!this.hasChildren()) {\n            return null;\n        } else {\n            const lastChild = this.children[this.children.length - 1];\n\n            if (!lastChild) {\n                return null;\n            }\n\n            if (!(lastChild.hasChildren() && lastChild.is_open)) {\n                return lastChild;\n            } else {\n                return lastChild?.getLastChild();\n            }\n        }\n    }\n\n    // Init Node from data without making it the root of the tree\n    public initFromData(data: NodeData): void {\n        const addNode = (nodeData: NodeData): void => {\n            this.setData(nodeData);\n\n            if (\n                isNodeRecordWithChildren(nodeData) &&\n                nodeData.children.length\n            ) {\n                addChildren(nodeData.children);\n            }\n        };\n\n        const addChildren = (childrenData: NodeData[]): void => {\n            for (const child of childrenData) {\n                const node = this.createNode();\n                node.initFromData(child);\n                this.addChild(node);\n            }\n        };\n\n        addNode(data);\n    }\n\n    private setParent(parent: Node): void {\n        this.parent = parent;\n        this.tree = parent.tree;\n        this.tree?.addNodeToIndex(this);\n    }\n\n    private doRemoveChild(node: Node): void {\n        this.children.splice(this.getChildIndex(node), 1);\n        this.tree?.removeNodeFromIndex(node);\n    }\n\n    private getNodeClass(): typeof Node {\n        return this.nodeClass || this?.tree?.nodeClass || Node;\n    }\n\n    private createNode(nodeData?: NodeData): Node {\n        const nodeClass = this.getNodeClass();\n        return new nodeClass(nodeData);\n    }\n\n    // Load children data from nodeInfo if it has children\n    private loadChildrenFromData(nodeInfo: NodeData) {\n        if (isNodeRecordWithChildren(nodeInfo) && nodeInfo.children.length) {\n            this.loadFromData(nodeInfo.children);\n        }\n    }\n}\n","interface DragElementParams {\n    autoEscape: boolean;\n    nodeName: string;\n    offsetX: number;\n    offsetY: number;\n    treeElement: HTMLElement;\n}\n\nclass DragElement {\n    private offsetX: number;\n    private offsetY: number;\n    private element: HTMLElement;\n\n    constructor({\n        autoEscape,\n        nodeName,\n        offsetX,\n        offsetY,\n        treeElement,\n    }: DragElementParams) {\n        this.offsetX = offsetX;\n        this.offsetY = offsetY;\n\n        this.element = this.createElement(nodeName, autoEscape);\n\n        treeElement.appendChild(this.element);\n    }\n\n    public move(pageX: number, pageY: number): void {\n        this.element.style.left = `${pageX - this.offsetX}px`;\n        this.element.style.top = `${pageY - this.offsetY}px`;\n    }\n\n    public remove(): void {\n        this.element.remove();\n    }\n\n    private createElement(nodeName: string, autoEscape: boolean) {\n        const element = document.createElement(\"span\");\n        element.classList.add(\"jqtree-title\", \"jqtree-dragging\");\n\n        if (autoEscape) {\n            element.textContent = nodeName;\n        } else {\n            element.innerHTML = nodeName;\n        }\n\n        element.style.position = \"absolute\";\n\n        return element;\n    }\n}\n\nexport default DragElement;\n","export const isInt = (n: unknown): boolean =>\n    typeof n === \"number\" && n % 1 === 0;\n\nexport const isFunction = (v: unknown): boolean => typeof v === \"function\";\n\nexport const getBoolString = (value: unknown): string =>\n    value ? \"true\" : \"false\";\n\nexport const getOffsetTop = (element: HTMLElement) =>\n    getElementPosition(element).top;\n\nexport const getElementPosition = (element: HTMLElement) => {\n    const rect = element.getBoundingClientRect();\n\n    return {\n        left: rect.x + window.scrollX,\n        top: rect.y + window.scrollY,\n    };\n};\n","import { Node } from \"../node\";\n\nabstract class VisibleNodeIterator {\n    private tree: Node;\n\n    constructor(tree: Node) {\n        this.tree = tree;\n    }\n\n    protected iterate(): void {\n        let isFirstNode = true;\n\n        const _iterateNode = (node: Node, nextNode: Node | null): void => {\n            let mustIterateInside =\n                (node.is_open || !node.element) && node.hasChildren();\n\n            let element: HTMLElement | null = null;\n\n            // Is the element visible?\n            if (node.element?.offsetParent) {\n                element = node.element;\n\n                if (isFirstNode) {\n                    this.handleFirstNode(node);\n                    isFirstNode = false;\n                }\n\n                if (!node.hasChildren()) {\n                    this.handleNode(node, nextNode, node.element);\n                } else if (node.is_open) {\n                    if (!this.handleOpenFolder(node, node.element)) {\n                        mustIterateInside = false;\n                    }\n                } else {\n                    this.handleClosedFolder(node, nextNode, element);\n                }\n            }\n\n            if (mustIterateInside) {\n                const childrenLength = node.children.length;\n                node.children.forEach((_, i) => {\n                    const child = node.children[i];\n\n                    if (child) {\n                        if (i === childrenLength - 1) {\n                            _iterateNode(child, null);\n                        } else {\n                            const nextChild = node.children[i + 1];\n\n                            if (nextChild) {\n                                _iterateNode(child, nextChild);\n                            }\n                        }\n                    }\n                });\n\n                if (node.is_open && element) {\n                    this.handleAfterOpenFolder(node, nextNode);\n                }\n            }\n        };\n\n        _iterateNode(this.tree, null);\n    }\n\n    protected abstract handleNode(\n        node: Node,\n        nextNode: Node | null,\n        element: HTMLElement,\n    ): void;\n\n    /*\n    override\n    return\n        - true: continue iterating\n        - false: stop iterating\n    */\n    protected abstract handleOpenFolder(\n        node: Node,\n        element: HTMLElement,\n    ): boolean;\n\n    protected abstract handleClosedFolder(\n        node: Node,\n        nextNode: Node | null,\n        element: HTMLElement,\n    ): void;\n\n    protected abstract handleAfterOpenFolder(\n        node: Node,\n        nextNode: Node | null,\n    ): void;\n\n    protected abstract handleFirstNode(node: Node): void;\n}\n\nexport default VisibleNodeIterator;\n","import { HitArea } from \"./types\";\nimport { Node, Position } from \"../node\";\nimport { getOffsetTop } from \"../util\";\nimport VisibleNodeIterator from \"./visibleNodeIterator\";\n\nclass HitAreasGenerator extends VisibleNodeIterator {\n    private currentNode: Node;\n    private treeBottom: number;\n    private positions: HitArea[];\n    private lastTop: number;\n\n    constructor(tree: Node, currentNode: Node, treeBottom: number) {\n        super(tree);\n\n        this.currentNode = currentNode;\n        this.treeBottom = treeBottom;\n    }\n\n    public generate(): HitArea[] {\n        this.positions = [];\n        this.lastTop = 0;\n\n        this.iterate();\n\n        return this.generateHitAreas(this.positions);\n    }\n\n    protected generateHitAreas(positions: HitArea[]): HitArea[] {\n        let previousTop = positions[0]?.top ?? 0;\n        let group = [];\n        const hitAreas: HitArea[] = [];\n\n        for (const position of positions) {\n            if (position.top !== previousTop && group.length) {\n                this.generateHitAreasForGroup(\n                    hitAreas,\n                    group,\n                    previousTop,\n                    position.top,\n                );\n\n                previousTop = position.top;\n                group = [];\n            }\n\n            group.push(position);\n        }\n\n        this.generateHitAreasForGroup(\n            hitAreas,\n            group,\n            previousTop,\n            this.treeBottom,\n        );\n\n        return hitAreas;\n    }\n\n    protected handleOpenFolder(node: Node, element: HTMLElement): boolean {\n        if (node === this.currentNode) {\n            // Cannot move inside current item\n            // Stop iterating\n            return false;\n        }\n\n        // Cannot move before current item\n        if (node.children[0] !== this.currentNode) {\n            this.addPosition(node, Position.Inside, getOffsetTop(element));\n        }\n\n        // Continue iterating\n        return true;\n    }\n\n    protected handleClosedFolder(\n        node: Node,\n        nextNode: Node,\n        element: HTMLElement,\n    ): void {\n        const top = getOffsetTop(element);\n\n        if (node === this.currentNode) {\n            // Cannot move after current item\n            this.addPosition(node, Position.None, top);\n        } else {\n            this.addPosition(node, Position.Inside, top);\n\n            // Cannot move before current item\n            if (nextNode !== this.currentNode) {\n                this.addPosition(node, Position.After, top);\n            }\n        }\n    }\n\n    protected handleFirstNode(node: Node): void {\n        if (node !== this.currentNode) {\n            this.addPosition(node, Position.Before, getOffsetTop(node.element));\n        }\n    }\n\n    protected handleAfterOpenFolder(node: Node, nextNode: Node): void {\n        if (node === this.currentNode || nextNode === this.currentNode) {\n            // Cannot move before or after current item\n            this.addPosition(node, Position.None, this.lastTop);\n        } else {\n            this.addPosition(node, Position.After, this.lastTop);\n        }\n    }\n\n    protected handleNode(\n        node: Node,\n        nextNode: Node,\n        element: HTMLElement,\n    ): void {\n        const top = getOffsetTop(element);\n\n        if (node === this.currentNode) {\n            // Cannot move inside current item\n            this.addPosition(node, Position.None, top);\n        } else {\n            this.addPosition(node, Position.Inside, top);\n        }\n\n        if (nextNode === this.currentNode || node === this.currentNode) {\n            // Cannot move before or after current item\n            this.addPosition(node, Position.None, top);\n        } else {\n            this.addPosition(node, Position.After, top);\n        }\n    }\n\n    private addPosition(node: Node, position: number, top: number): void {\n        const area = {\n            top,\n            bottom: 0,\n            node,\n            position,\n        };\n\n        this.positions.push(area);\n        this.lastTop = top;\n    }\n\n    private generateHitAreasForGroup(\n        hitAreas: HitArea[],\n        positionsInGroup: HitArea[],\n        top: number,\n        bottom: number,\n    ): void {\n        // limit positions in group\n        const positionCount = Math.min(positionsInGroup.length, 4);\n\n        const areaHeight = Math.round((bottom - top) / positionCount);\n        let areaTop = top;\n\n        let i = 0;\n        while (i < positionCount) {\n            const position = positionsInGroup[i];\n\n            if (position) {\n                hitAreas.push({\n                    top: areaTop,\n                    bottom: areaTop + areaHeight,\n                    node: position.node,\n                    position: position.position,\n                });\n            }\n\n            areaTop += areaHeight;\n            i += 1;\n        }\n    }\n}\n\nexport default HitAreasGenerator;\n","import { getPositionName, Node, Position } from \"../node\";\nimport { DropHint, HitArea } from \"./types\";\nimport { PositionInfo } from \"../mouseWidgetTypes\";\nimport NodeElement from \"../nodeElement\";\nimport DragElement from \"./dragElement\";\nimport HitAreasGenerator from \"./hitAreasGenerator\";\nimport { getElementPosition } from \"../util\";\nimport {\n    OnCanMove,\n    OnCanMoveTo,\n    OnIsMoveHandle,\n    DragMethod,\n} from \"../jqtreeOptions\";\nimport {\n    GetTree,\n    OpenNode,\n    RefreshElements,\n    TriggerEvent,\n} from \"../jqtreeMethodTypes\";\n\ninterface Dimensions {\n    left: number;\n    top: number;\n    right: number;\n    bottom: number;\n}\n\ntype GetNodeElement = (element: HTMLElement) => NodeElement | null;\ntype GetNodeElementForNode = (node: Node) => NodeElement;\n\ninterface DragAndDropHandlerParams {\n    autoEscape?: boolean;\n    getNodeElement: GetNodeElement;\n    getNodeElementForNode: GetNodeElementForNode;\n    getTree: GetTree;\n    onCanMove?: OnCanMove;\n    onCanMoveTo?: OnCanMoveTo;\n    onDragMove?: DragMethod;\n    onDragStop?: DragMethod;\n    onIsMoveHandle?: OnIsMoveHandle;\n    openFolderDelay: number | false;\n    openNode: OpenNode;\n    refreshElements: RefreshElements;\n    slide: boolean;\n    treeElement: HTMLElement;\n    triggerEvent: TriggerEvent;\n}\n\nexport class DragAndDropHandler {\n    public hitAreas: HitArea[];\n    public isDragging: boolean;\n    public currentItem: NodeElement | null;\n    public hoveredArea: HitArea | null;\n\n    private autoEscape?: boolean;\n    private dragElement: DragElement | null;\n    private getNodeElement: GetNodeElement;\n    private getNodeElementForNode: GetNodeElementForNode;\n    private getTree: GetTree;\n    private onCanMove?: OnCanMove;\n    private onCanMoveTo?: OnCanMoveTo;\n    private onDragMove?: DragMethod;\n    private onDragStop?: DragMethod;\n    private onIsMoveHandle?: OnIsMoveHandle;\n    private openFolderDelay: number | false;\n    private openFolderTimer: number | null;\n    private openNode: OpenNode;\n    private previousGhost: DropHint | null;\n    private refreshElements: RefreshElements;\n    private slide: boolean;\n    private treeElement: HTMLElement;\n    private triggerEvent: TriggerEvent;\n\n    constructor({\n        autoEscape,\n        getNodeElement,\n        getNodeElementForNode,\n        getTree,\n        onCanMove,\n        onCanMoveTo,\n        onDragMove,\n        onDragStop,\n        onIsMoveHandle,\n        openNode,\n        refreshElements,\n        slide,\n        treeElement,\n        triggerEvent,\n    }: DragAndDropHandlerParams) {\n        this.autoEscape = autoEscape;\n        this.getNodeElement = getNodeElement;\n        this.getNodeElementForNode = getNodeElementForNode;\n        this.getTree = getTree;\n        this.onCanMove = onCanMove;\n        this.onCanMoveTo = onCanMoveTo;\n        this.onDragMove = onDragMove;\n        this.onDragStop = onDragStop;\n        this.onIsMoveHandle = onIsMoveHandle;\n        this.openNode = openNode;\n        this.refreshElements = refreshElements;\n        this.slide = slide;\n        this.treeElement = treeElement;\n        this.triggerEvent = triggerEvent;\n\n        this.hoveredArea = null;\n        this.hitAreas = [];\n        this.isDragging = false;\n        this.currentItem = null;\n    }\n\n    public mouseCapture(positionInfo: PositionInfo): boolean | null {\n        const element = positionInfo.target;\n\n        if (!this.mustCaptureElement(element)) {\n            return null;\n        }\n\n        if (this.onIsMoveHandle && !this.onIsMoveHandle(jQuery(element))) {\n            return null;\n        }\n\n        let nodeElement = this.getNodeElement(element);\n\n        if (nodeElement && this.onCanMove) {\n            if (!this.onCanMove(nodeElement.node)) {\n                nodeElement = null;\n            }\n        }\n\n        this.currentItem = nodeElement;\n        return this.currentItem != null;\n    }\n\n    public mouseStart(positionInfo: PositionInfo): boolean {\n        if (\n            !this.currentItem ||\n            positionInfo.pageX === undefined ||\n            positionInfo.pageY === undefined\n        ) {\n            return false;\n        }\n\n        this.refresh();\n\n        const { left, top } = getElementPosition(positionInfo.target);\n\n        const node = this.currentItem.node;\n\n        this.dragElement = new DragElement({\n            autoEscape: this.autoEscape ?? true,\n            nodeName: node.name,\n            offsetX: positionInfo.pageX - left,\n            offsetY: positionInfo.pageY - top,\n            treeElement: this.treeElement,\n        });\n\n        this.isDragging = true;\n        this.currentItem.element.classList.add(\"jqtree-moving\");\n\n        return true;\n    }\n\n    public mouseDrag(positionInfo: PositionInfo): boolean {\n        if (\n            !this.currentItem ||\n            !this.dragElement ||\n            positionInfo.pageX === undefined ||\n            positionInfo.pageY === undefined\n        ) {\n            return false;\n        }\n\n        this.dragElement.move(positionInfo.pageX, positionInfo.pageY);\n\n        const area = this.findHoveredArea(\n            positionInfo.pageX,\n            positionInfo.pageY,\n        );\n\n        if (area && this.canMoveToArea(area)) {\n            if (!area.node.isFolder()) {\n                this.stopOpenFolderTimer();\n            }\n\n            if (this.hoveredArea !== area) {\n                this.hoveredArea = area;\n\n                // If this is a closed folder, start timer to open it\n                if (this.mustOpenFolderTimer(area)) {\n                    this.startOpenFolderTimer(area.node);\n                } else {\n                    this.stopOpenFolderTimer();\n                }\n\n                this.updateDropHint();\n            }\n        } else {\n            this.removeDropHint();\n            this.stopOpenFolderTimer();\n            this.hoveredArea = area;\n        }\n\n        if (!area) {\n            if (this.onDragMove) {\n                this.onDragMove(\n                    this.currentItem.node,\n                    positionInfo.originalEvent,\n                );\n            }\n        }\n\n        return true;\n    }\n\n    public mouseStop(positionInfo: PositionInfo): boolean {\n        this.moveItem(positionInfo);\n        this.clear();\n        this.removeHover();\n        this.removeDropHint();\n        this.removeHitAreas();\n\n        const currentItem = this.currentItem;\n\n        if (this.currentItem) {\n            this.currentItem.element.classList.remove(\"jqtree-moving\");\n            this.currentItem = null;\n        }\n\n        this.isDragging = false;\n\n        if (!this.hoveredArea && currentItem) {\n            if (this.onDragStop) {\n                this.onDragStop(currentItem.node, positionInfo.originalEvent);\n            }\n        }\n\n        return false;\n    }\n\n    public refresh(): void {\n        this.removeHitAreas();\n\n        if (this.currentItem) {\n            this.generateHitAreas();\n\n            this.currentItem = this.getNodeElementForNode(\n                this.currentItem.node,\n            );\n\n            if (this.isDragging) {\n                this.currentItem.element.classList.add(\"jqtree-moving\");\n            }\n        }\n    }\n\n    private generateHitAreas(): void {\n        const tree = this.getTree();\n\n        if (!this.currentItem || !tree) {\n            this.hitAreas = [];\n        } else {\n            const hitAreasGenerator = new HitAreasGenerator(\n                tree,\n                this.currentItem.node,\n                this.getTreeDimensions().bottom,\n            );\n            this.hitAreas = hitAreasGenerator.generate();\n        }\n    }\n\n    private mustCaptureElement(element: HTMLElement): boolean {\n        const nodeName = element.nodeName;\n\n        return (\n            nodeName !== \"INPUT\" &&\n            nodeName !== \"SELECT\" &&\n            nodeName !== \"TEXTAREA\"\n        );\n    }\n\n    private canMoveToArea(area: HitArea): boolean {\n        if (!this.onCanMoveTo) {\n            return true;\n        }\n\n        if (!this.currentItem) {\n            return false;\n        }\n\n        const positionName = getPositionName(area.position);\n\n        return this.onCanMoveTo(this.currentItem.node, area.node, positionName);\n    }\n\n    private removeHitAreas(): void {\n        this.hitAreas = [];\n    }\n\n    private clear(): void {\n        if (this.dragElement) {\n            this.dragElement.remove();\n            this.dragElement = null;\n        }\n    }\n\n    private removeDropHint(): void {\n        if (this.previousGhost) {\n            this.previousGhost.remove();\n        }\n    }\n\n    private removeHover(): void {\n        this.hoveredArea = null;\n    }\n\n    private findHoveredArea(x: number, y: number): HitArea | null {\n        const dimensions = this.getTreeDimensions();\n\n        if (\n            x < dimensions.left ||\n            y < dimensions.top ||\n            x > dimensions.right ||\n            y > dimensions.bottom\n        ) {\n            return null;\n        }\n\n        let low = 0;\n        let high = this.hitAreas.length;\n        while (low < high) {\n            const mid = (low + high) >> 1;\n            const area = this.hitAreas[mid];\n\n            if (!area) {\n                return null;\n            }\n\n            if (y < area.top) {\n                high = mid;\n            } else if (y > area.bottom) {\n                low = mid + 1;\n            } else {\n                return area;\n            }\n        }\n\n        return null;\n    }\n\n    private mustOpenFolderTimer(area: HitArea): boolean {\n        const node = area.node;\n\n        return (\n            node.isFolder() &&\n            !node.is_open &&\n            area.position === Position.Inside\n        );\n    }\n\n    private updateDropHint(): void {\n        if (!this.hoveredArea) {\n            return;\n        }\n\n        // remove previous drop hint\n        this.removeDropHint();\n\n        // add new drop hint\n        const nodeElement = this.getNodeElementForNode(this.hoveredArea.node);\n        this.previousGhost = nodeElement.addDropHint(this.hoveredArea.position);\n    }\n\n    private startOpenFolderTimer(folder: Node): void {\n        const openFolder = (): void => {\n            this.openNode(folder, this.slide, () => {\n                this.refresh();\n                this.updateDropHint();\n            });\n        };\n\n        this.stopOpenFolderTimer();\n\n        const openFolderDelay = this.openFolderDelay;\n\n        if (openFolderDelay !== false) {\n            this.openFolderTimer = window.setTimeout(\n                openFolder,\n                openFolderDelay,\n            );\n        }\n    }\n\n    private stopOpenFolderTimer(): void {\n        if (this.openFolderTimer) {\n            clearTimeout(this.openFolderTimer);\n            this.openFolderTimer = null;\n        }\n    }\n\n    private moveItem(positionInfo: PositionInfo): void {\n        if (\n            this.currentItem &&\n            this.hoveredArea &&\n            this.hoveredArea.position !== Position.None &&\n            this.canMoveToArea(this.hoveredArea)\n        ) {\n            const movedNode = this.currentItem.node;\n            const targetNode = this.hoveredArea.node;\n            const position = this.hoveredArea.position;\n            const previousParent = movedNode.parent;\n\n            if (position === Position.Inside) {\n                this.hoveredArea.node.is_open = true;\n            }\n\n            const doMove = (): void => {\n                const tree = this.getTree();\n\n                if (tree) {\n                    tree.moveNode(movedNode, targetNode, position);\n\n                    this.treeElement.textContent = \"\";\n                    this.refreshElements(null);\n                }\n            };\n\n            const event = this.triggerEvent(\"tree.move\", {\n                move_info: {\n                    moved_node: movedNode,\n                    target_node: targetNode,\n                    position: getPositionName(position),\n                    previous_parent: previousParent,\n                    do_move: doMove,\n                    original_event: positionInfo.originalEvent,\n                },\n            });\n\n            if (!event.isDefaultPrevented()) {\n                doMove();\n            }\n        }\n    }\n\n    private getTreeDimensions(): Dimensions {\n        // Return the dimensions of the tree. Add a margin to the bottom to allow\n        // to drag-and-drop after the last element.\n        const { left, top } = getElementPosition(this.treeElement);\n\n        return {\n            left,\n            top,\n            right: left + this.treeElement.clientWidth,\n            bottom: top + this.treeElement.clientHeight + 16,\n        };\n    }\n}\n","import { getBoolString } from \"./util\";\nimport { Node } from \"./node\";\nimport { IconElement, OnCreateLi } from \"./jqtreeOptions\";\nimport { GetTree, IsNodeSelected } from \"./jqtreeMethodTypes\";\n\ninterface ElementsRendererParams {\n    autoEscape: boolean;\n    buttonLeft: boolean;\n    closedIcon?: IconElement;\n    dragAndDrop: boolean;\n    $element: JQuery<HTMLElement>;\n    getTree: GetTree;\n    isNodeSelected: IsNodeSelected;\n    onCreateLi?: OnCreateLi;\n    openedIcon?: IconElement;\n    rtl?: boolean;\n    showEmptyFolder: boolean;\n    tabIndex?: number;\n}\n\nexport default class ElementsRenderer {\n    public openedIconElement?: HTMLElement | Text;\n    public closedIconElement?: HTMLElement | Text;\n    private autoEscape: boolean;\n    private buttonLeft: boolean;\n    private dragAndDrop: boolean;\n    private $element: JQuery<HTMLElement>;\n    private getTree: GetTree;\n    private isNodeSelected: IsNodeSelected;\n    private onCreateLi?: OnCreateLi;\n    private rtl?: boolean;\n    private showEmptyFolder: boolean;\n    private tabIndex?: number;\n\n    constructor({\n        autoEscape,\n        buttonLeft,\n        closedIcon,\n        onCreateLi,\n        dragAndDrop,\n        $element,\n        getTree,\n        isNodeSelected,\n        openedIcon,\n        rtl,\n        showEmptyFolder,\n        tabIndex,\n    }: ElementsRendererParams) {\n        this.autoEscape = autoEscape;\n        this.buttonLeft = buttonLeft;\n        this.dragAndDrop = dragAndDrop;\n        this.$element = $element;\n        this.getTree = getTree;\n        this.isNodeSelected = isNodeSelected;\n        this.onCreateLi = onCreateLi;\n        this.rtl = rtl;\n        this.showEmptyFolder = showEmptyFolder;\n        this.tabIndex = tabIndex;\n        this.openedIconElement = this.createButtonElement(openedIcon || \"+\");\n        this.closedIconElement = this.createButtonElement(closedIcon || \"-\");\n    }\n\n    public render(fromNode: Node | null): void {\n        if (fromNode && fromNode.parent) {\n            this.renderFromNode(fromNode);\n        } else {\n            this.renderFromRoot();\n        }\n    }\n\n    public renderFromRoot(): void {\n        this.$element.empty();\n\n        const tree = this.getTree();\n\n        if (this.$element[0] && tree) {\n            this.createDomElements(this.$element[0], tree.children, true, 1);\n        }\n    }\n\n    public renderFromNode(node: Node): void {\n        // remember current li\n        const $previousLi = jQuery(node.element);\n\n        // create element\n        const li = this.createLi(node, node.getLevel());\n        this.attachNodeData(node, li);\n\n        // add element to dom\n        $previousLi.after(li);\n\n        // remove previous li\n        $previousLi.remove();\n\n        // create children\n        if (node.children) {\n            this.createDomElements(\n                li,\n                node.children,\n                false,\n                node.getLevel() + 1,\n            );\n        }\n    }\n\n    private createDomElements(\n        element: Element,\n        children: Node[],\n        isRootNode: boolean,\n        level: number,\n    ): void {\n        const ul = this.createUl(isRootNode);\n        element.appendChild(ul);\n\n        for (const child of children) {\n            const li = this.createLi(child, level);\n            ul.appendChild(li);\n\n            this.attachNodeData(child, li);\n\n            if (child.hasChildren()) {\n                this.createDomElements(li, child.children, false, level + 1);\n            }\n        }\n    }\n\n    private attachNodeData(node: Node, li: HTMLElement): void {\n        node.element = li;\n        jQuery(li).data(\"node\", node);\n    }\n\n    private createUl(isRootNode: boolean): HTMLUListElement {\n        let classString;\n        let role;\n\n        if (!isRootNode) {\n            classString = \"\";\n            role = \"group\";\n        } else {\n            classString = \"jqtree-tree\";\n            role = \"tree\";\n\n            if (this.rtl) {\n                classString += \" jqtree-rtl\";\n            }\n        }\n\n        if (this.dragAndDrop) {\n            classString += \" jqtree-dnd\";\n        }\n\n        const ul = document.createElement(\"ul\");\n        ul.className = `jqtree_common ${classString}`;\n\n        ul.setAttribute(\"role\", role);\n\n        return ul;\n    }\n\n    private createLi(node: Node, level: number): HTMLLIElement {\n        const isSelected = Boolean(this.isNodeSelected(node));\n\n        const mustShowFolder =\n            node.isFolder() || (node.isEmptyFolder && this.showEmptyFolder);\n\n        const li = mustShowFolder\n            ? this.createFolderLi(node, level, isSelected)\n            : this.createNodeLi(node, level, isSelected);\n\n        if (this.onCreateLi) {\n            this.onCreateLi(node, jQuery(li), isSelected);\n        }\n\n        return li;\n    }\n\n    private setTreeItemAriaAttributes(\n        element: HTMLElement,\n        name: string,\n        level: number,\n        isSelected: boolean,\n    ) {\n        element.setAttribute(\"aria-label\", name);\n        element.setAttribute(\"aria-level\", `${level}`);\n        element.setAttribute(\"aria-selected\", getBoolString(isSelected));\n        element.setAttribute(\"role\", \"treeitem\");\n    }\n\n    private createFolderLi(\n        node: Node,\n        level: number,\n        isSelected: boolean,\n    ): HTMLLIElement {\n        const buttonClasses = this.getButtonClasses(node);\n        const folderClasses = this.getFolderClasses(node, isSelected);\n\n        const iconElement = node.is_open\n            ? this.openedIconElement\n            : this.closedIconElement;\n\n        // li\n        const li = document.createElement(\"li\");\n        li.className = `jqtree_common ${folderClasses}`;\n        li.setAttribute(\"role\", \"none\");\n\n        // div\n        const div = document.createElement(\"div\");\n        div.className = \"jqtree-element jqtree_common\";\n        div.setAttribute(\"role\", \"none\");\n\n        li.appendChild(div);\n\n        // button link\n        const buttonLink = document.createElement(\"a\");\n        buttonLink.className = buttonClasses;\n\n        if (iconElement) {\n            buttonLink.appendChild(iconElement.cloneNode(true));\n        }\n\n        if (this.buttonLeft) {\n            div.appendChild(buttonLink);\n        }\n\n        // title span\n        const titleSpan = this.createTitleSpan(\n            node.name,\n            isSelected,\n            true,\n            level,\n        );\n        titleSpan.setAttribute(\"aria-expanded\", getBoolString(node.is_open));\n        div.appendChild(titleSpan);\n\n        if (!this.buttonLeft) {\n            div.appendChild(buttonLink);\n        }\n\n        return li;\n    }\n\n    private createNodeLi(\n        node: Node,\n        level: number,\n        isSelected: boolean,\n    ): HTMLLIElement {\n        const liClasses = [\"jqtree_common\"];\n\n        if (isSelected) {\n            liClasses.push(\"jqtree-selected\");\n        }\n\n        const classString = liClasses.join(\" \");\n\n        // li\n        const li = document.createElement(\"li\");\n        li.className = classString;\n        li.setAttribute(\"role\", \"none\");\n\n        // div\n        const div = document.createElement(\"div\");\n        div.className = \"jqtree-element jqtree_common\";\n        div.setAttribute(\"role\", \"none\");\n\n        li.appendChild(div);\n\n        // title span\n        const titleSpan = this.createTitleSpan(\n            node.name,\n            isSelected,\n            false,\n            level,\n        );\n        div.appendChild(titleSpan);\n\n        return li;\n    }\n\n    private createTitleSpan(\n        nodeName: string,\n        isSelected: boolean,\n        isFolder: boolean,\n        level: number,\n    ): HTMLSpanElement {\n        const titleSpan = document.createElement(\"span\");\n\n        let classes = \"jqtree-title jqtree_common\";\n\n        if (isFolder) {\n            classes += \" jqtree-title-folder\";\n        }\n\n        classes += ` jqtree-title-button-${this.buttonLeft ? \"left\" : \"right\"}`;\n\n        titleSpan.className = classes;\n\n        if (isSelected) {\n            const tabIndex = this.tabIndex;\n\n            if (tabIndex !== undefined) {\n                titleSpan.setAttribute(\"tabindex\", `${tabIndex}`);\n            }\n        }\n\n        this.setTreeItemAriaAttributes(titleSpan, nodeName, level, isSelected);\n\n        if (this.autoEscape) {\n            titleSpan.textContent = nodeName;\n        } else {\n            titleSpan.innerHTML = nodeName;\n        }\n\n        return titleSpan;\n    }\n\n    private getButtonClasses(node: Node): string {\n        const classes = [\"jqtree-toggler\", \"jqtree_common\"];\n\n        if (!node.is_open) {\n            classes.push(\"jqtree-closed\");\n        }\n\n        if (this.buttonLeft) {\n            classes.push(\"jqtree-toggler-left\");\n        } else {\n            classes.push(\"jqtree-toggler-right\");\n        }\n\n        return classes.join(\" \");\n    }\n\n    private getFolderClasses(node: Node, isSelected: boolean): string {\n        const classes = [\"jqtree-folder\"];\n\n        if (!node.is_open) {\n            classes.push(\"jqtree-closed\");\n        }\n\n        if (isSelected) {\n            classes.push(\"jqtree-selected\");\n        }\n\n        if (node.is_loading) {\n            classes.push(\"jqtree-loading\");\n        }\n\n        return classes.join(\" \");\n    }\n\n    private createButtonElement(\n        value: IconElement,\n    ): HTMLElement | Text | undefined {\n        if (typeof value === \"string\") {\n            // convert value to html\n            const div = document.createElement(\"div\");\n            div.innerHTML = value;\n\n            return document.createTextNode(div.innerHTML);\n        } else if (value == null) {\n            return undefined;\n        } else if ((value as HTMLElement).nodeType) {\n            return value as HTMLElement;\n        } else {\n            return jQuery(value)[0];\n        }\n    }\n}\n","import { Node } from \"./node\";\nimport { DataFilter, OnLoadFailed, OnLoading } from \"./jqtreeOptions\";\nimport { LoadData, TriggerEvent } from \"./jqtreeMethodTypes\";\n\nexport type HandleFinishedLoading = () => void;\n\ninterface DataLoaderParams {\n    dataFilter?: DataFilter;\n    loadData: LoadData;\n    onLoadFailed?: OnLoadFailed;\n    onLoading?: OnLoading;\n    $treeElement: JQuery<HTMLElement>;\n    triggerEvent: TriggerEvent;\n}\n\nexport default class DataLoader {\n    private dataFilter?: DataFilter;\n    private loadData: LoadData;\n    private onLoadFailed?: OnLoadFailed;\n    private onLoading?: OnLoading;\n    private $treeElement: JQuery<HTMLElement>;\n    private triggerEvent: TriggerEvent;\n\n    constructor({\n        dataFilter,\n        loadData,\n        onLoadFailed,\n        onLoading,\n        $treeElement,\n        triggerEvent,\n    }: DataLoaderParams) {\n        this.dataFilter = dataFilter;\n        this.loadData = loadData;\n        this.onLoadFailed = onLoadFailed;\n        this.onLoading = onLoading;\n        this.$treeElement = $treeElement;\n        this.triggerEvent = triggerEvent;\n    }\n\n    public loadFromUrl(\n        urlInfo: string | JQuery.AjaxSettings | null,\n        parentNode: Node | null,\n        onFinished: HandleFinishedLoading | null,\n    ): void {\n        if (!urlInfo) {\n            return;\n        }\n\n        const $el = this.getDomElement(parentNode);\n        this.addLoadingClass($el);\n        this.notifyLoading(true, parentNode, $el);\n\n        const stopLoading = (): void => {\n            this.removeLoadingClass($el);\n            this.notifyLoading(false, parentNode, $el);\n        };\n\n        const handleSuccess = (data: string | NodeData[]): void => {\n            stopLoading();\n            this.loadData(this.parseData(data), parentNode);\n\n            if (onFinished && typeof onFinished === \"function\") {\n                onFinished();\n            }\n        };\n\n        const handleError = (jqXHR: JQuery.jqXHR): void => {\n            stopLoading();\n\n            if (this.onLoadFailed) {\n                this.onLoadFailed(jqXHR);\n            }\n        };\n\n        this.submitRequest(urlInfo, handleSuccess, handleError);\n    }\n\n    private addLoadingClass($el: JQuery<HTMLElement>): void {\n        if ($el) {\n            $el.addClass(\"jqtree-loading\");\n        }\n    }\n\n    private removeLoadingClass($el: JQuery<HTMLElement>): void {\n        if ($el) {\n            $el.removeClass(\"jqtree-loading\");\n        }\n    }\n\n    private getDomElement(parentNode: Node | null): JQuery<HTMLElement> {\n        if (parentNode) {\n            return jQuery(parentNode.element);\n        } else {\n            return this.$treeElement;\n        }\n    }\n\n    private notifyLoading(\n        isLoading: boolean,\n        node: Node | null,\n        $el: JQuery,\n    ): void {\n        if (this.onLoading) {\n            this.onLoading(isLoading, node, $el);\n        }\n\n        this.triggerEvent(\"tree.loading_data\", {\n            isLoading,\n            node,\n            $el,\n        });\n    }\n\n    private submitRequest(\n        urlInfoInput: string | JQuery.AjaxSettings,\n        handleSuccess: JQuery.Ajax.SuccessCallback<any>,\n        handleError: JQuery.Ajax.ErrorCallback<any>,\n    ): void {\n        const urlInfo =\n            typeof urlInfoInput === \"string\"\n                ? { url: urlInfoInput }\n                : urlInfoInput;\n\n        const ajaxSettings: JQuery.AjaxSettings = {\n            method: \"GET\",\n            cache: false,\n            dataType: \"json\",\n            success: handleSuccess,\n            error: handleError,\n            ...urlInfo,\n        };\n\n        ajaxSettings.method = ajaxSettings.method?.toUpperCase() || \"GET\";\n\n        void jQuery.ajax(ajaxSettings);\n    }\n\n    private parseData(data: string | NodeData[]): NodeData[] {\n        const getParsedData = () => {\n            if (typeof data === \"string\") {\n                return JSON.parse(data) as NodeData[];\n            } else {\n                return data;\n            }\n        };\n\n        const parsedData = getParsedData();\n\n        if (this.dataFilter) {\n            return this.dataFilter(parsedData);\n        } else {\n            return parsedData;\n        }\n    }\n}\n","import { Node } from \"./node\";\nimport {\n    CloseNode,\n    GetSelectedNode,\n    IsFocusOnTree,\n    OpenNode,\n    SelectNode,\n} from \"./jqtreeMethodTypes\";\n\ntype KeyboardEventHandler = (event: KeyboardEvent) => boolean;\n\ninterface KeyHandlerParams {\n    closeNode: CloseNode;\n    getSelectedNode: GetSelectedNode;\n    isFocusOnTree: IsFocusOnTree;\n    keyboardSupport: boolean;\n    openNode: OpenNode;\n    selectNode: SelectNode;\n}\n\nexport default class KeyHandler {\n    private closeNode: CloseNode;\n    private getSelectedNode: GetSelectedNode;\n    private handleKeyDownHandler?: KeyboardEventHandler;\n    private isFocusOnTree: IsFocusOnTree;\n    private keyboardSupport: boolean;\n    private openNode: OpenNode;\n    private originalSelectNode: SelectNode;\n\n    constructor({\n        closeNode,\n        getSelectedNode,\n        isFocusOnTree,\n        keyboardSupport,\n        openNode,\n        selectNode,\n    }: KeyHandlerParams) {\n        this.closeNode = closeNode;\n        this.getSelectedNode = getSelectedNode;\n        this.isFocusOnTree = isFocusOnTree;\n        this.keyboardSupport = keyboardSupport;\n        this.openNode = openNode;\n        this.originalSelectNode = selectNode;\n\n        if (keyboardSupport) {\n            this.handleKeyDownHandler = this.handleKeyDown.bind(this);\n\n            document.addEventListener(\"keydown\", this.handleKeyDownHandler);\n        }\n    }\n\n    public deinit(): void {\n        if (this.handleKeyDownHandler) {\n            document.removeEventListener(\"keydown\", this.handleKeyDownHandler);\n        }\n    }\n\n    public moveDown(selectedNode: Node): boolean {\n        return this.selectNode(selectedNode.getNextVisibleNode());\n    }\n\n    public moveUp(selectedNode: Node): boolean {\n        return this.selectNode(selectedNode.getPreviousVisibleNode());\n    }\n\n    public moveRight(selectedNode: Node): boolean {\n        if (!selectedNode.isFolder()) {\n            return true;\n        } else {\n            // folder node\n            if (selectedNode.is_open) {\n                // Right moves to the first child of an open node\n                return this.selectNode(selectedNode.getNextVisibleNode());\n            } else {\n                // Right expands a closed node\n                this.openNode(selectedNode);\n                return false;\n            }\n        }\n    }\n\n    public moveLeft(selectedNode: Node): boolean {\n        if (selectedNode.isFolder() && selectedNode.is_open) {\n            // Left on an open node closes the node\n            this.closeNode(selectedNode);\n            return false;\n        } else {\n            // Left on a closed or end node moves focus to the node's parent\n            return this.selectNode(selectedNode.getParent());\n        }\n    }\n\n    public selectNode(node: Node | null): boolean {\n        if (!node) {\n            return true;\n        } else {\n            this.originalSelectNode(node);\n\n            return false;\n        }\n    }\n\n    private handleKeyDown = (e: KeyboardEvent): boolean => {\n        if (!this.canHandleKeyboard()) {\n            return true;\n        }\n\n        const selectedNode = this.getSelectedNode();\n        if (!selectedNode) {\n            return true;\n        }\n\n        switch (e.key) {\n            case \"ArrowDown\":\n                return this.moveDown(selectedNode);\n\n            case \"ArrowUp\":\n                return this.moveUp(selectedNode);\n\n            case \"ArrowRight\":\n                return this.moveRight(selectedNode);\n\n            case \"ArrowLeft\":\n                return this.moveLeft(selectedNode);\n\n            default:\n                return true;\n        }\n    };\n\n    private canHandleKeyboard(): boolean {\n        return this.keyboardSupport && this.isFocusOnTree();\n    }\n}\n","const register = (widgetClass: unknown, widgetName: string): void => {\n    const getDataKey = (): string => `simple_widget_${widgetName}`;\n\n    const getWidgetData = (\n        el: HTMLElement,\n        dataKey: string\n    ): SimpleWidget<unknown> | null => {\n        const widget = jQuery.data(el, dataKey) as unknown;\n\n        if (widget && widget instanceof SimpleWidget) {\n            return widget;\n        } else {\n            return null;\n        }\n    };\n\n    const createWidget = ($el: JQuery, options: unknown): JQuery => {\n        const dataKey = getDataKey();\n\n        for (const el of $el.get()) {\n            const existingWidget = getWidgetData(el, dataKey);\n\n            if (!existingWidget) {\n                const simpleWidgetClass = widgetClass as typeof SimpleWidget;\n                const widget = new simpleWidgetClass(el, options);\n\n                if (!jQuery.data(el, dataKey)) {\n                    jQuery.data(el, dataKey, widget);\n                }\n\n                // Call init after setting data, so we can call methods\n                widget.init();\n            }\n        }\n\n        return $el;\n    };\n\n    const destroyWidget = ($el: JQuery): void => {\n        const dataKey = getDataKey();\n\n        for (const el of $el.get()) {\n            const widget = getWidgetData(el, dataKey);\n\n            if (widget) {\n                widget.destroy();\n            }\n\n            jQuery.removeData(el, dataKey);\n        }\n    };\n\n    const callFunction = (\n        $el: JQuery,\n        functionName: string,\n        args: unknown[]\n    ): unknown => {\n        let result = null;\n\n        for (const el of $el.get()) {\n            const widget = jQuery.data(el, getDataKey()) as unknown;\n\n            if (widget && widget instanceof SimpleWidget) {\n                const simpleWidget = widget as SimpleWidget<unknown>;\n                const widgetFunction = simpleWidget[functionName];\n\n                if (widgetFunction && typeof widgetFunction === \"function\") {\n                    result = widgetFunction.apply(widget, args) as unknown;\n                }\n            }\n        }\n\n        return result;\n    };\n\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    (jQuery.fn as any)[widgetName] = function (\n        this: JQuery,\n        argument1: unknown,\n        ...args: unknown[]\n    ) {\n        if (!argument1) {\n            return createWidget(this, null);\n        } else if (typeof argument1 === \"object\") {\n            const options = argument1 as unknown;\n            return createWidget(this, options);\n        } else if (typeof argument1 === \"string\" && argument1[0] !== \"_\") {\n            const functionName = argument1;\n\n            if (functionName === \"destroy\") {\n                return destroyWidget(this);\n            } else if (functionName === \"get_widget_class\") {\n                return widgetClass;\n            } else {\n                return callFunction(this, functionName, args);\n            }\n        } else {\n            return undefined;\n        }\n    };\n};\n\nexport default class SimpleWidget<WidgetOptions> {\n    public static register(widgetClass: unknown, widgetName: string): void {\n        register(widgetClass, widgetName);\n    }\n\n    [key: string]: unknown;\n\n    protected static defaults: unknown = {};\n\n    public options: WidgetOptions;\n\n    public $el: JQuery<HTMLElement>;\n\n    constructor(el: HTMLElement, options: WidgetOptions) {\n        this.$el = jQuery(el);\n\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        const defaults = (this.constructor as any)[\"defaults\"] as WidgetOptions;\n        this.options = { ...defaults, ...options };\n    }\n\n    public destroy(): void {\n        this.deinit();\n    }\n\n    public init(): void {\n        //\n    }\n\n    public deinit(): void {\n        //\n    }\n}\n","/*\nThis widget does the same a the mouse widget in jqueryui.\n*/\nimport SimpleWidget from \"./simple.widget\";\nimport { PositionInfo } from \"./mouseWidgetTypes\";\n\nconst getPositionInfoFromMouseEvent = (e: MouseEvent): PositionInfo => ({\n    pageX: e.pageX,\n    pageY: e.pageY,\n    target: e.target as HTMLElement,\n    originalEvent: e,\n});\n\nconst getPositionInfoFromTouch = (\n    touch: Touch,\n    e: TouchEvent,\n): PositionInfo => ({\n    pageX: touch.pageX,\n    pageY: touch.pageY,\n    target: touch.target as HTMLElement,\n    originalEvent: e,\n});\n\nabstract class MouseWidget<WidgetOptions> extends SimpleWidget<WidgetOptions> {\n    protected isMouseStarted: boolean;\n    protected mouseDownInfo: PositionInfo | null;\n    private mouseDelayTimer: number | null;\n    private isMouseDelayMet: boolean;\n\n    public init(): void {\n        const element = this.$el.get(0);\n\n        if (element) {\n            element.addEventListener(\"mousedown\", this.mouseDown, {\n                passive: false,\n            });\n            element.addEventListener(\"touchstart\", this.touchStart, {\n                passive: false,\n            });\n        }\n\n        this.isMouseStarted = false;\n        this.mouseDelayTimer = null;\n        this.isMouseDelayMet = false;\n        this.mouseDownInfo = null;\n    }\n\n    public deinit(): void {\n        const el = this.$el.get(0);\n\n        if (el) {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-call, @typescript-eslint/no-unsafe-member-access\n            (el as any).removeEventListener(\"mousedown\", this.mouseDown, {\n                passive: false,\n            });\n\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-call, @typescript-eslint/no-unsafe-member-access\n            (el as any).removeEventListener(\"touchstart\", this.touchStart, {\n                passive: false,\n            });\n        }\n\n        this.removeMouseMoveEventListeners();\n    }\n\n    protected abstract mouseCapture(positionInfo: PositionInfo): boolean | null;\n\n    protected abstract mouseStart(positionInfo: PositionInfo): boolean;\n\n    protected abstract mouseDrag(positionInfo: PositionInfo): void;\n\n    protected abstract mouseStop(positionInfo: PositionInfo): void;\n\n    protected abstract getMouseDelay(): number;\n\n    private mouseDown = (e: MouseEvent): void => {\n        // Left mouse button?\n        if (e.button !== 0) {\n            return;\n        }\n\n        const result = this.handleMouseDown(getPositionInfoFromMouseEvent(e));\n\n        if (result && e.cancelable) {\n            e.preventDefault();\n        }\n    };\n\n    private handleMouseDown(positionInfo: PositionInfo): boolean {\n        // We may have missed mouseup (out of window)\n        if (this.isMouseStarted) {\n            this.handleMouseUp(positionInfo);\n        }\n\n        this.mouseDownInfo = positionInfo;\n\n        if (!this.mouseCapture(positionInfo)) {\n            return false;\n        }\n\n        this.handleStartMouse();\n\n        return true;\n    }\n\n    private handleStartMouse(): void {\n        document.addEventListener(\"mousemove\", this.mouseMove, {\n            passive: false,\n        });\n        document.addEventListener(\"touchmove\", this.touchMove, {\n            passive: false,\n        });\n        document.addEventListener(\"mouseup\", this.mouseUp, { passive: false });\n        document.addEventListener(\"touchend\", this.touchEnd, {\n            passive: false,\n        });\n\n        const mouseDelay = this.getMouseDelay();\n\n        if (mouseDelay) {\n            this.startMouseDelayTimer(mouseDelay);\n        } else {\n            this.isMouseDelayMet = true;\n        }\n    }\n\n    private startMouseDelayTimer(mouseDelay: number): void {\n        if (this.mouseDelayTimer) {\n            clearTimeout(this.mouseDelayTimer);\n        }\n\n        this.mouseDelayTimer = window.setTimeout(() => {\n            if (this.mouseDownInfo) {\n                this.isMouseDelayMet = true;\n            }\n        }, mouseDelay);\n\n        this.isMouseDelayMet = false;\n    }\n\n    private mouseMove = (e: MouseEvent): void => {\n        this.handleMouseMove(e, getPositionInfoFromMouseEvent(e));\n    };\n\n    private handleMouseMove(\n        e: MouseEvent | TouchEvent,\n        positionInfo: PositionInfo,\n    ): void {\n        if (this.isMouseStarted) {\n            this.mouseDrag(positionInfo);\n\n            if (e.cancelable) {\n                e.preventDefault();\n            }\n            return;\n        }\n\n        if (!this.isMouseDelayMet) {\n            return;\n        }\n\n        if (this.mouseDownInfo) {\n            this.isMouseStarted = this.mouseStart(this.mouseDownInfo) !== false;\n        }\n\n        if (this.isMouseStarted) {\n            this.mouseDrag(positionInfo);\n\n            if (e.cancelable) {\n                e.preventDefault();\n            }\n        } else {\n            this.handleMouseUp(positionInfo);\n        }\n    }\n\n    private mouseUp = (e: MouseEvent): void => {\n        this.handleMouseUp(getPositionInfoFromMouseEvent(e));\n    };\n\n    private handleMouseUp(positionInfo: PositionInfo): void {\n        this.removeMouseMoveEventListeners();\n        this.isMouseDelayMet = false;\n        this.mouseDownInfo = null;\n\n        if (this.isMouseStarted) {\n            this.isMouseStarted = false;\n            this.mouseStop(positionInfo);\n        }\n    }\n\n    private removeMouseMoveEventListeners() {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-call, @typescript-eslint/no-unsafe-member-access\n        (document as any).removeEventListener(\"mousemove\", this.mouseMove, {\n            passive: false,\n        });\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-call, @typescript-eslint/no-unsafe-member-access\n        (document as any).removeEventListener(\"touchmove\", this.touchMove, {\n            passive: false,\n        });\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-call, @typescript-eslint/no-unsafe-member-access\n        (document as any).removeEventListener(\"mouseup\", this.mouseUp, {\n            passive: false,\n        });\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-call, @typescript-eslint/no-unsafe-member-access\n        (document as any).removeEventListener(\"touchend\", this.touchEnd, {\n            passive: false,\n        });\n    }\n\n    private touchStart = (e: TouchEvent): void => {\n        if (!e) {\n            return;\n        }\n\n        if (e.touches.length > 1) {\n            return;\n        }\n\n        const touch = e.changedTouches[0];\n\n        if (!touch) {\n            return;\n        }\n\n        this.handleMouseDown(getPositionInfoFromTouch(touch, e));\n    };\n\n    private touchMove = (e: TouchEvent): void => {\n        if (!e) {\n            return;\n        }\n\n        if (e.touches.length > 1) {\n            return;\n        }\n\n        const touch = e.changedTouches[0];\n\n        if (!touch) {\n            return;\n        }\n\n        this.handleMouseMove(e, getPositionInfoFromTouch(touch, e));\n    };\n\n    private touchEnd = (e: TouchEvent): void => {\n        if (!e) {\n            return;\n        }\n\n        if (e.touches.length > 1) {\n            return;\n        }\n\n        const touch = e.changedTouches[0];\n\n        if (!touch) {\n            return;\n        }\n\n        this.handleMouseUp(getPositionInfoFromTouch(touch, e));\n    };\n}\n\nexport default MouseWidget;\n","import { isInt } from \"./util\";\nimport { Node } from \"./node\";\nimport { OnGetStateFromStorage, OnSetStateFromStorage } from \"./jqtreeOptions\";\nimport {\n    AddToSelection,\n    GetNodeById,\n    GetSelectedNodes,\n    GetTree,\n    OpenNode,\n    RefreshElements,\n    RemoveFromSelection,\n} from \"./jqtreeMethodTypes\";\n\nexport interface SavedState {\n    open_nodes: NodeId[];\n    selected_node: NodeId[];\n}\n\ninterface SaveStateHandlerParams {\n    addToSelection: AddToSelection;\n    getNodeById: GetNodeById;\n    getSelectedNodes: GetSelectedNodes;\n    getTree: GetTree;\n    onGetStateFromStorage?: OnGetStateFromStorage;\n    onSetStateFromStorage?: OnSetStateFromStorage;\n    openNode: OpenNode;\n    refreshElements: RefreshElements;\n    removeFromSelection: RemoveFromSelection;\n    saveState: boolean | string;\n}\n\nexport default class SaveStateHandler {\n    private addToSelection: AddToSelection;\n    private getNodeById: GetNodeById;\n    private getSelectedNodes: GetSelectedNodes;\n    private getTree: GetTree;\n    private onGetStateFromStorage?: OnGetStateFromStorage;\n    private onSetStateFromStorage?: OnSetStateFromStorage;\n    private openNode: OpenNode;\n    private refreshElements: RefreshElements;\n    private removeFromSelection: RemoveFromSelection;\n    private saveStateOption: boolean | string;\n    private _supportsLocalStorage: boolean | null;\n\n    constructor({\n        addToSelection,\n        getNodeById,\n        getSelectedNodes,\n        getTree,\n        onGetStateFromStorage,\n        onSetStateFromStorage,\n        openNode,\n        refreshElements,\n        removeFromSelection,\n        saveState,\n    }: SaveStateHandlerParams) {\n        this.addToSelection = addToSelection;\n        this.getNodeById = getNodeById;\n        this.getSelectedNodes = getSelectedNodes;\n        this.getTree = getTree;\n        this.onGetStateFromStorage = onGetStateFromStorage;\n        this.onSetStateFromStorage = onSetStateFromStorage;\n        this.openNode = openNode;\n        this.refreshElements = refreshElements;\n        this.removeFromSelection = removeFromSelection;\n        this.saveStateOption = saveState;\n    }\n\n    public saveState(): void {\n        const state = JSON.stringify(this.getState());\n\n        if (this.onSetStateFromStorage) {\n            this.onSetStateFromStorage(state);\n        } else if (this.supportsLocalStorage()) {\n            localStorage.setItem(this.getKeyName(), state);\n        }\n    }\n\n    public getStateFromStorage(): SavedState | null {\n        const jsonData = this.loadFromStorage();\n\n        if (jsonData) {\n            return this.parseState(jsonData) as unknown as SavedState;\n        } else {\n            return null;\n        }\n    }\n\n    public getState(): SavedState {\n        const getOpenNodeIds = (): NodeId[] => {\n            const openNodes: NodeId[] = [];\n\n            this.getTree()?.iterate((node: Node) => {\n                if (node.is_open && node.id && node.hasChildren()) {\n                    openNodes.push(node.id);\n                }\n                return true;\n            });\n\n            return openNodes;\n        };\n\n        const getSelectedNodeIds = (): NodeId[] => {\n            const selectedNodeIds: NodeId[] = [];\n\n            this.getSelectedNodes().forEach((node) => {\n                if (node.id != null) {\n                    selectedNodeIds.push(node.id);\n                }\n            });\n\n            return selectedNodeIds;\n        };\n\n        return {\n            open_nodes: getOpenNodeIds(),\n            selected_node: getSelectedNodeIds(),\n        };\n    }\n\n    /*\n    Set initial state\n    Don't handle nodes that are loaded on demand\n\n    result: must load on demand\n    */\n    public setInitialState(state: SavedState): boolean {\n        if (!state) {\n            return false;\n        } else {\n            let mustLoadOnDemand = false;\n\n            if (state.open_nodes) {\n                mustLoadOnDemand = this.openInitialNodes(state.open_nodes);\n            }\n\n            if (state.selected_node) {\n                this.resetSelection();\n                this.selectInitialNodes(state.selected_node);\n            }\n\n            return mustLoadOnDemand;\n        }\n    }\n\n    public setInitialStateOnDemand(\n        state: SavedState,\n        cbFinished: () => void,\n    ): void {\n        if (state) {\n            this.doSetInitialStateOnDemand(\n                state.open_nodes,\n                state.selected_node,\n                cbFinished,\n            );\n        } else {\n            cbFinished();\n        }\n    }\n\n    public getNodeIdToBeSelected(): NodeId | null {\n        const state = this.getStateFromStorage();\n\n        if (state && state.selected_node) {\n            return state.selected_node[0] || null;\n        } else {\n            return null;\n        }\n    }\n\n    private parseState(jsonData: string): SavedState {\n        const state = JSON.parse(jsonData) as Record<string, unknown>;\n\n        // Check if selected_node is an int (instead of an array)\n        if (state && state.selected_node && isInt(state.selected_node)) {\n            // Convert to array\n            state.selected_node = [state.selected_node];\n        }\n\n        return state as unknown as SavedState;\n    }\n\n    private loadFromStorage(): string | null {\n        if (this.onGetStateFromStorage) {\n            return this.onGetStateFromStorage();\n        } else if (this.supportsLocalStorage()) {\n            return localStorage.getItem(this.getKeyName());\n        } else {\n            return null;\n        }\n    }\n\n    private openInitialNodes(nodeIds: NodeId[]): boolean {\n        let mustLoadOnDemand = false;\n\n        for (const nodeId of nodeIds) {\n            const node = this.getNodeById(nodeId);\n\n            if (node) {\n                if (!node.load_on_demand) {\n                    node.is_open = true;\n                } else {\n                    mustLoadOnDemand = true;\n                }\n            }\n        }\n\n        return mustLoadOnDemand;\n    }\n\n    private selectInitialNodes(nodeIds: NodeId[]): boolean {\n        let selectCount = 0;\n\n        for (const nodeId of nodeIds) {\n            const node = this.getNodeById(nodeId);\n\n            if (node) {\n                selectCount += 1;\n\n                this.addToSelection(node);\n            }\n        }\n\n        return selectCount !== 0;\n    }\n\n    private resetSelection(): void {\n        const selectedNodes = this.getSelectedNodes();\n\n        selectedNodes.forEach((node) => {\n            this.removeFromSelection(node);\n        });\n    }\n\n    private doSetInitialStateOnDemand(\n        nodeIdsParam: NodeId[],\n        selectedNodes: NodeId[],\n        cbFinished: () => void,\n    ): void {\n        let loadingCount = 0;\n        let nodeIds = nodeIdsParam;\n\n        const openNodes = (): void => {\n            const newNodesIds = [];\n\n            for (const nodeId of nodeIds) {\n                const node = this.getNodeById(nodeId);\n\n                if (!node) {\n                    newNodesIds.push(nodeId);\n                } else {\n                    if (!node.is_loading) {\n                        if (node.load_on_demand) {\n                            loadAndOpenNode(node);\n                        } else {\n                            this.openNode(node, false);\n                        }\n                    }\n                }\n            }\n\n            nodeIds = newNodesIds;\n\n            if (this.selectInitialNodes(selectedNodes)) {\n                this.refreshElements(null);\n            }\n\n            if (loadingCount === 0) {\n                cbFinished();\n            }\n        };\n\n        const loadAndOpenNode = (node: Node): void => {\n            loadingCount += 1;\n            this.openNode(node, false, () => {\n                loadingCount -= 1;\n                openNodes();\n            });\n        };\n\n        openNodes();\n    }\n\n    private getKeyName(): string {\n        if (typeof this.saveStateOption === \"string\") {\n            return this.saveStateOption;\n        } else {\n            return \"tree\";\n        }\n    }\n\n    private supportsLocalStorage(): boolean {\n        const testSupport = (): boolean => {\n            // Is local storage supported?\n            if (localStorage == null) {\n                return false;\n            } else {\n                // Check if it's possible to store an item. Safari does not allow this in private browsing mode.\n                try {\n                    const key = \"_storage_test\";\n                    sessionStorage.setItem(key, \"value\");\n                    sessionStorage.removeItem(key);\n                } catch (error) {\n                    return false;\n                }\n\n                return true;\n            }\n        };\n\n        if (this._supportsLocalStorage == null) {\n            this._supportsLocalStorage = testSupport();\n        }\n\n        return this._supportsLocalStorage;\n    }\n}\n","import type { ScrollParent } from \"./types\";\nimport { getElementPosition, getOffsetTop } from '../util'\n\ntype HorizontalScrollDirection = \"left\" | \"right\";\ntype VerticalScrollDirection = \"bottom\" | \"top\";\n\ninterface Params {\n    container: HTMLElement;\n    refreshHitAreas: () => void;\n}\n\nexport default class ContainerScrollParent implements ScrollParent {\n    private container: HTMLElement;\n    private horizontalScrollDirection?: HorizontalScrollDirection;\n    private horizontalScrollTimeout?: number;\n    private refreshHitAreas: () => void;\n    private scrollParentBottom?: number;\n    private scrollParentTop?: number;\n    private verticalScrollTimeout?: number;\n    private verticalScrollDirection?: VerticalScrollDirection;\n\n    constructor({ container, refreshHitAreas }: Params) {\n        this.container = container;\n        this.refreshHitAreas = refreshHitAreas;\n    }\n\n    public checkHorizontalScrolling(pageX: number): void {\n        const newHorizontalScrollDirection =\n            this.getNewHorizontalScrollDirection(pageX);\n\n        if (this.horizontalScrollDirection !== newHorizontalScrollDirection) {\n            this.horizontalScrollDirection = newHorizontalScrollDirection;\n\n            if (this.horizontalScrollTimeout != null) {\n                window.clearTimeout(this.verticalScrollTimeout);\n            }\n\n            if (newHorizontalScrollDirection) {\n                this.horizontalScrollTimeout = window.setTimeout(\n                    this.scrollHorizontally.bind(this),\n                    40,\n                );\n            }\n        }\n    }\n\n    public checkVerticalScrolling(pageY: number) {\n        const newVerticalScrollDirection =\n            this.getNewVerticalScrollDirection(pageY);\n\n        if (this.verticalScrollDirection !== newVerticalScrollDirection) {\n            this.verticalScrollDirection = newVerticalScrollDirection;\n\n            if (this.verticalScrollTimeout != null) {\n                window.clearTimeout(this.verticalScrollTimeout);\n                this.verticalScrollTimeout = undefined;\n            }\n\n            if (newVerticalScrollDirection) {\n                this.verticalScrollTimeout = window.setTimeout(\n                    this.scrollVertically.bind(this),\n                    40,\n                );\n            }\n        }\n    }\n\n    public getScrollLeft(): number {\n        return this.container.scrollLeft;\n    }\n\n    public scrollToY(top: number): void {\n        this.container.scrollTop = top;\n    }\n\n    public stopScrolling() {\n        this.horizontalScrollDirection = undefined;\n        this.verticalScrollDirection = undefined;\n        this.scrollParentTop = undefined;\n        this.scrollParentBottom = undefined;\n    }\n\n    private getNewHorizontalScrollDirection(\n        pageX: number,\n    ): HorizontalScrollDirection | undefined {\n        const scrollParentOffset = getElementPosition(this.container);\n\n        const rightEdge = scrollParentOffset.left + this.container.clientWidth;\n        const leftEdge = scrollParentOffset.left;\n        const isNearRightEdge = pageX > rightEdge - 20;\n        const isNearLeftEdge = pageX < leftEdge + 20;\n\n        if (isNearRightEdge) {\n            return \"right\";\n        } else if (isNearLeftEdge) {\n            return \"left\";\n        }\n\n        return undefined;\n    }\n\n    private getNewVerticalScrollDirection(\n        pageY: number,\n    ): VerticalScrollDirection | undefined {\n        if (pageY < this.getScrollParentTop()) {\n            return \"top\";\n        }\n\n        if (pageY > this.getScrollParentBottom()) {\n            return \"bottom\";\n        }\n\n        return undefined;\n    }\n\n    private scrollHorizontally() {\n        if (!this.horizontalScrollDirection) {\n            return;\n        }\n\n        const distance = this.horizontalScrollDirection === \"left\" ? -20 : 20;\n\n        this.container.scrollBy({\n            left: distance,\n            top: 0,\n            behavior: \"instant\",\n        });\n\n        this.refreshHitAreas();\n\n        setTimeout(this.scrollHorizontally.bind(this), 40);\n    }\n\n    private scrollVertically() {\n        if (!this.verticalScrollDirection) {\n            return;\n        }\n\n        const distance = this.verticalScrollDirection === \"top\" ? -20 : 20;\n\n        this.container.scrollBy({\n            left: 0,\n            top: distance,\n            behavior: \"instant\",\n        });\n\n        this.refreshHitAreas();\n\n        setTimeout(this.scrollVertically.bind(this), 40);\n    }\n\n    private getScrollParentTop() {\n        if (this.scrollParentTop == null) {\n            this.scrollParentTop = getOffsetTop(this.container)\n        }\n\n        return this.scrollParentTop;\n    }\n\n    private getScrollParentBottom() {\n        if (this.scrollParentBottom == null) {\n            this.scrollParentBottom = this.getScrollParentTop() + this.container.clientHeight;\n        }\n\n        return this.scrollParentBottom;\n    }\n}\n","import type { ScrollParent } from \"./types\";\nimport { getOffsetTop } from '../util'\n\ntype HorizontalScrollDirection = \"left\" | \"right\";\ntype VerticalScrollDirection = \"bottom\" | \"top\";\n\ninterface Params {\n    refreshHitAreas: () => void;\n    treeElement: HTMLElement;\n}\n\nexport default class DocumentScrollParent implements ScrollParent {\n    private documentScrollHeight?: number;\n    private documentScrollWidth?: number;\n    private horizontalScrollDirection?: HorizontalScrollDirection;\n    private horizontalScrollTimeout?: number;\n    private refreshHitAreas: () => void;\n    private treeElement: HTMLElement;\n    private verticalScrollDirection?: VerticalScrollDirection;\n    private verticalScrollTimeout?: number;\n\n    constructor({ refreshHitAreas, treeElement }: Params) {\n        this.refreshHitAreas = refreshHitAreas;\n        this.treeElement = treeElement;\n    }\n\n    public checkHorizontalScrolling(pageX: number): void {\n        const newHorizontalScrollDirection =\n            this.getNewHorizontalScrollDirection(pageX);\n\n        if (this.horizontalScrollDirection !== newHorizontalScrollDirection) {\n            this.horizontalScrollDirection = newHorizontalScrollDirection;\n\n            if (this.horizontalScrollTimeout != null) {\n                window.clearTimeout(this.horizontalScrollTimeout);\n            }\n\n            if (newHorizontalScrollDirection) {\n                this.horizontalScrollTimeout = window.setTimeout(\n                    this.scrollHorizontally.bind(this),\n                    40,\n                );\n            }\n        }\n    }\n\n    public checkVerticalScrolling(pageY: number) {\n        const newVerticalScrollDirection =\n            this.getNewVerticalScrollDirection(pageY);\n\n        if (this.verticalScrollDirection !== newVerticalScrollDirection) {\n            this.verticalScrollDirection = newVerticalScrollDirection;\n\n            if (this.verticalScrollTimeout != null) {\n                window.clearTimeout(this.verticalScrollTimeout);\n                this.verticalScrollTimeout = undefined;\n            }\n\n            if (newVerticalScrollDirection) {\n                this.verticalScrollTimeout = window.setTimeout(\n                    this.scrollVertically.bind(this),\n                    40,\n                );\n            }\n        }\n    }\n\n    public getScrollLeft(): number {\n        return document.documentElement.scrollLeft;\n    }\n\n    public scrollToY(top: number): void {\n        const treeTop = getOffsetTop(this.treeElement);\n\n        document.documentElement.scrollTop = top + treeTop;\n    }\n\n    public stopScrolling() {\n        this.horizontalScrollDirection = undefined;\n        this.verticalScrollDirection = undefined;\n        this.documentScrollHeight = undefined;\n        this.documentScrollWidth = undefined;\n    }\n\n    private getNewHorizontalScrollDirection(\n        pageX: number,\n    ): HorizontalScrollDirection | undefined {\n        const scrollLeft = document.documentElement.scrollLeft;\n        const windowWidth = window.innerWidth;\n\n        const isNearRightEdge = pageX > windowWidth - 20;\n        const isNearLeftEdge = pageX - scrollLeft < 20;\n\n        if (isNearRightEdge && this.canScrollRight()) {\n            return \"right\";\n        }\n\n        if (isNearLeftEdge) {\n            return \"left\";\n        }\n\n        return undefined;\n    }\n\n    private canScrollRight() {\n        const documentElement = document.documentElement;\n\n        return (\n            documentElement.scrollLeft + documentElement.clientWidth <\n            this.getDocumentScrollWidth()\n        );\n    }\n\n    private canScrollDown() {\n        const documentElement = document.documentElement;\n\n        return (\n            documentElement.scrollTop + documentElement.clientHeight <\n            this.getDocumentScrollHeight()\n        );\n    }\n\n    private getDocumentScrollHeight() {\n        // Store the original scroll height because the scroll height can increase when the drag element is moved beyond the scroll height.\n        if (this.documentScrollHeight == null) {\n            this.documentScrollHeight = document.documentElement.scrollHeight;\n        }\n\n        return this.documentScrollHeight;\n    }\n\n    private getDocumentScrollWidth() {\n        // Store the original scroll width because the scroll width can increase when the drag element is moved beyond the scroll width.\n        if (this.documentScrollWidth == null) {\n            this.documentScrollWidth = document.documentElement.scrollWidth;\n        }\n\n        return this.documentScrollWidth;\n    }\n\n    private getNewVerticalScrollDirection(\n        pageY: number,\n    ): VerticalScrollDirection | undefined {\n        const scrollTop = jQuery(document).scrollTop() || 0;\n        const distanceTop = pageY - scrollTop;\n\n        if (distanceTop < 20) {\n            return \"top\";\n        }\n\n        const windowHeight = window.innerHeight;\n\n        if (windowHeight - (pageY - scrollTop) < 20 && this.canScrollDown()) {\n            return \"bottom\";\n        }\n\n        return undefined;\n    }\n\n    private scrollHorizontally() {\n        if (!this.horizontalScrollDirection) {\n            return;\n        }\n\n        const distance = this.horizontalScrollDirection === \"left\" ? -20 : 20;\n        window.scrollBy({ left: distance, top: 0, behavior: \"instant\" });\n\n        this.refreshHitAreas();\n\n        setTimeout(this.scrollHorizontally.bind(this), 40);\n    }\n\n    private scrollVertically() {\n        if (!this.verticalScrollDirection) {\n            return;\n        }\n\n        const distance = this.verticalScrollDirection === \"top\" ? -20 : 20;\n        window.scrollBy({ left: 0, top: distance, behavior: \"instant\" });\n\n        this.refreshHitAreas();\n\n        setTimeout(this.scrollVertically.bind(this), 40);\n    }\n}\n","import type { ScrollParent } from \"./types\";\nimport ContainerScrollParent from \"./containerScrollParent\";\nimport DocumentScrollParent from \"./documentScrollParent\";\n\nconst isOverflow = (overflowValue: string) => overflowValue === 'auto' || overflowValue === 'scroll';\n\nconst hasOverFlow = (element: HTMLElement): boolean => isOverflow(element.style.overflow) || isOverflow(element.style.overflowY);\n\nconst getParentWithOverflow = (\n    treeElement: HTMLElement,\n): HTMLElement | null => {\n    if (hasOverFlow(treeElement)) {\n        return treeElement;\n    }\n\n    let parent = treeElement.parentElement;\n\n    while (parent) {\n        if (hasOverFlow(parent)) {\n            return parent;\n        }\n\n        parent = parent.parentElement;\n    }\n\n    return null;\n};\n\nconst createScrollParent = (\n    treeElement: HTMLElement,\n    refreshHitAreas: () => void,\n): ScrollParent => {\n    const container = getParentWithOverflow(treeElement);\n\n    if (container && container.tagName !== \"HTML\") {\n        return new ContainerScrollParent({\n            container,\n            refreshHitAreas,\n        });\n    } else {\n        return new DocumentScrollParent({ refreshHitAreas, treeElement });\n    }\n};\n\nexport default createScrollParent;\n","import { PositionInfo } from \"./mouseWidgetTypes\";\nimport { ScrollParent } from \"./scrollHandler/types\";\nimport createScrollParent from \"./scrollHandler/createScrollParent\";\n\ninterface ScrollHandlerParams {\n    refreshHitAreas: () => void;\n    treeElement: HTMLElement;\n}\n\nexport default class ScrollHandler {\n    private refreshHitAreas: () => void;\n    private scrollParent?: ScrollParent;\n    private treeElement: HTMLElement;\n\n    constructor({ refreshHitAreas, treeElement }: ScrollHandlerParams) {\n        this.refreshHitAreas = refreshHitAreas;\n        this.scrollParent = undefined;\n        this.treeElement = treeElement;\n    }\n\n    public checkScrolling(positionInfo: PositionInfo): void {\n        this.checkVerticalScrolling(positionInfo);\n        this.checkHorizontalScrolling(positionInfo);\n    }\n\n    public stopScrolling() {\n        this.getScrollParent().stopScrolling();\n    }\n\n    public scrollToY(top: number): void {\n        this.getScrollParent().scrollToY(top);\n    }\n\n    public getScrollLeft(): number {\n        return this.getScrollParent().getScrollLeft();\n    }\n\n    private checkVerticalScrolling(positionInfo: PositionInfo): void {\n        if (positionInfo.pageY == null) {\n            return;\n        }\n\n        this.getScrollParent().checkVerticalScrolling(positionInfo.pageY);\n    }\n\n    private checkHorizontalScrolling(positionInfo: PositionInfo): void {\n        if (positionInfo.pageX == null) {\n            return;\n        }\n\n        this.getScrollParent().checkHorizontalScrolling(positionInfo.pageX);\n    }\n\n    private getScrollParent(): ScrollParent {\n        if (!this.scrollParent) {\n            this.scrollParent = createScrollParent(\n                this.treeElement,\n                this.refreshHitAreas,\n            );\n        }\n\n        return this.scrollParent;\n    }\n}\n","import { Node } from \"./node\";\nimport { GetNodeById } from \"./jqtreeMethodTypes\";\n\ninterface SelectNodeHandlerParameters {\n    getNodeById: GetNodeById;\n}\n\nexport default class SelectNodeHandler {\n    private getNodeById: GetNodeById;\n    private selectedNodes: Set<NodeId>;\n    private selectedSingleNode: Node | null;\n\n    constructor({ getNodeById }: SelectNodeHandlerParameters) {\n        this.getNodeById = getNodeById;\n        this.selectedNodes = new Set<NodeId>();\n        this.clear();\n    }\n\n    public getSelectedNode(): Node | false {\n        const selectedNodes = this.getSelectedNodes();\n\n        if (selectedNodes.length) {\n            return selectedNodes[0] || false;\n        } else {\n            return false;\n        }\n    }\n\n    public getSelectedNodes(): Node[] {\n        if (this.selectedSingleNode) {\n            return [this.selectedSingleNode];\n        } else {\n            const selectedNodes: Node[] = [];\n\n            this.selectedNodes.forEach((id) => {\n                const node = this.getNodeById(id);\n                if (node) {\n                    selectedNodes.push(node);\n                }\n            });\n\n            return selectedNodes;\n        }\n    }\n\n    public getSelectedNodesUnder(parent: Node): Node[] {\n        if (this.selectedSingleNode) {\n            if (parent.isParentOf(this.selectedSingleNode)) {\n                return [this.selectedSingleNode];\n            } else {\n                return [];\n            }\n        } else {\n            const selectedNodes = [];\n\n            for (const id in this.selectedNodes) {\n                if (\n                    Object.prototype.hasOwnProperty.call(this.selectedNodes, id)\n                ) {\n                    const node = this.getNodeById(id);\n                    if (node && parent.isParentOf(node)) {\n                        selectedNodes.push(node);\n                    }\n                }\n            }\n\n            return selectedNodes;\n        }\n    }\n\n    public isNodeSelected(node: Node): boolean {\n        if (node.id != null) {\n            return this.selectedNodes.has(node.id);\n        } else if (this.selectedSingleNode) {\n            return this.selectedSingleNode.element === node.element;\n        } else {\n            return false;\n        }\n    }\n\n    public clear(): void {\n        this.selectedNodes.clear();\n        this.selectedSingleNode = null;\n    }\n\n    public removeFromSelection(node: Node, includeChildren = false): void {\n        if (node.id == null) {\n            if (\n                this.selectedSingleNode &&\n                node.element === this.selectedSingleNode.element\n            ) {\n                this.selectedSingleNode = null;\n            }\n        } else {\n            this.selectedNodes.delete(node.id);\n\n            if (includeChildren) {\n                node.iterate(() => {\n                    if (node.id != null) {\n                        this.selectedNodes.delete(node.id);\n                    }\n                    return true;\n                });\n            }\n        }\n    }\n\n    public addToSelection(node: Node): void {\n        if (node.id != null) {\n            this.selectedNodes.add(node.id);\n        } else {\n            this.selectedSingleNode = node;\n        }\n    }\n}\n","import { DropHint } from \"../dragAndDropHandler/types\";\n\nclass BorderDropHint implements DropHint {\n    private hint?: HTMLElement;\n\n    constructor(element: HTMLElement, scrollLeft: number) {\n        const div = element.querySelector(\":scope > .jqtree-element\");\n\n        if (!div) {\n            this.hint = undefined;\n            return;\n        }\n\n        const width = Math.max(element.offsetWidth + scrollLeft - 4, 0);\n        const height = Math.max(element.clientHeight - 4, 0);\n\n        const hint = document.createElement(\"span\");\n        hint.className = \"jqtree-border\";\n        hint.style.width = `${width}px`;\n        hint.style.height = `${height}px`;\n\n        this.hint = hint;\n\n        div.append(this.hint);\n    }\n\n    public remove(): void {\n        this.hint?.remove();\n    }\n}\n\nexport default BorderDropHint;\n","import { Position, Node } from \"../node\";\nimport { DropHint } from \"../dragAndDropHandler/types\";\n\nclass GhostDropHint implements DropHint {\n    private element: HTMLElement;\n    private node: Node;\n    private ghost: HTMLElement;\n\n    constructor(node: Node, element: HTMLElement, position: Position) {\n        this.element = element;\n        this.node = node;\n        this.ghost = this.createGhostElement();\n\n        if (position === Position.After) {\n            this.moveAfter();\n        } else if (position === Position.Before) {\n            this.moveBefore();\n        } else if (position === Position.Inside) {\n            if (node.isFolder() && node.is_open) {\n                this.moveInsideOpenFolder();\n            } else {\n                this.moveInside();\n            }\n        }\n    }\n\n    public remove(): void {\n        this.ghost.remove();\n    }\n\n    private moveAfter(): void {\n        this.element.after(this.ghost);\n    }\n\n    private moveBefore(): void {\n        this.element.before(this.ghost);\n    }\n\n    private moveInsideOpenFolder(): void {\n        const childElement = this.node.children[0]?.element;\n\n        if (childElement) {\n            childElement.before(this.ghost);\n        }\n    }\n\n    private moveInside(): void {\n        this.element.after(this.ghost);\n        this.ghost.classList.add(\"jqtree-inside\");\n    }\n\n    private createGhostElement() {\n        const ghost = document.createElement(\"li\");\n        ghost.className = \"jqtree_common jqtree-ghost\";\n\n        const circleSpan = document.createElement(\"span\");\n        circleSpan.className = \"jqtree_common jqtree-circle\";\n        ghost.append(circleSpan);\n\n        const lineSpan = document.createElement(\"span\");\n        lineSpan.className = \"jqtree_common jqtree-line\";\n        ghost.append(lineSpan);\n\n        return ghost;\n    }\n}\n\nexport default GhostDropHint;\n","import { Position, Node } from \"../node\";\nimport { DropHint } from \"../dragAndDropHandler/types\";\nimport BorderDropHint from \"./borderDropHint\";\nimport GhostDropHint from \"./ghostDropHint\";\nimport { GetScrollLeft } from \"../jqtreeMethodTypes\";\n\nexport interface NodeElementParams {\n    getScrollLeft: GetScrollLeft;\n    node: Node;\n    tabIndex?: number;\n    $treeElement: JQuery<HTMLElement>;\n}\n\nclass NodeElement {\n    public node: Node;\n    public element: HTMLElement;\n    private getScrollLeft: GetScrollLeft;\n    private tabIndex?: number;\n    private $treeElement: JQuery<HTMLElement>;\n\n    constructor({\n        getScrollLeft,\n        node,\n        tabIndex,\n        $treeElement,\n    }: NodeElementParams) {\n        this.getScrollLeft = getScrollLeft;\n        this.tabIndex = tabIndex;\n        this.$treeElement = $treeElement;\n\n        this.init(node);\n    }\n\n    public init(node: Node): void {\n        this.node = node;\n\n        if (!node.element) {\n            const element = this.$treeElement.get(0);\n\n            if (element) {\n                node.element = element;\n            }\n        }\n\n        if (node.element) {\n            this.element = node.element;\n        }\n    }\n\n    public addDropHint(position: number): DropHint {\n        if (this.mustShowBorderDropHint(position)) {\n            return new BorderDropHint(this.element, this.getScrollLeft());\n        } else {\n            return new GhostDropHint(this.node, this.element, position);\n        }\n    }\n\n    public select(mustSetFocus: boolean): void {\n        this.element.classList.add(\"jqtree-selected\");\n\n        const titleSpan = this.getTitleSpan();\n        const tabIndex = this.tabIndex;\n\n        // Check for null or undefined\n        if (tabIndex != null) {\n            titleSpan.setAttribute(\"tabindex\", tabIndex.toString());\n        }\n\n        titleSpan.setAttribute(\"aria-selected\", \"true\");\n\n        if (mustSetFocus) {\n            titleSpan.focus();\n        }\n    }\n\n    public deselect(): void {\n        this.element.classList.remove(\"jqtree-selected\");\n\n        const titleSpan = this.getTitleSpan();\n        titleSpan.removeAttribute(\"tabindex\");\n        titleSpan.setAttribute(\"aria-selected\", \"false\");\n\n        titleSpan.blur();\n    }\n\n    protected getUl(): HTMLUListElement {\n        return this.element.querySelector(\":scope > ul\") as HTMLUListElement;\n    }\n\n    protected getTitleSpan(): HTMLSpanElement {\n        return this.element.querySelector(\n            \":scope > .jqtree-element > span.jqtree-title\",\n        ) as HTMLSpanElement;\n    }\n\n    protected mustShowBorderDropHint(position: Position): boolean {\n        return position === Position.Inside;\n    }\n}\n\nexport default NodeElement;\n","import { Position } from \"../node\";\nimport NodeElement, { NodeElementParams } from \"./index\";\nimport { OnFinishOpenNode, TriggerEvent } from \"../jqtreeMethodTypes\";\n\ninterface FolderElementParams extends NodeElementParams {\n    closedIconElement?: HTMLElement | Text;\n    openedIconElement?: HTMLElement | Text;\n    triggerEvent: TriggerEvent;\n}\n\nclass FolderElement extends NodeElement {\n    private closedIconElement?: HTMLElement | Text;\n    private openedIconElement?: HTMLElement | Text;\n    private triggerEvent: TriggerEvent;\n\n    constructor({\n        closedIconElement,\n        getScrollLeft,\n        node,\n        openedIconElement,\n        tabIndex,\n        $treeElement,\n        triggerEvent,\n    }: FolderElementParams) {\n        super({\n            getScrollLeft,\n            node,\n            tabIndex,\n            $treeElement,\n        });\n\n        this.closedIconElement = closedIconElement;\n        this.openedIconElement = openedIconElement;\n        this.triggerEvent = triggerEvent;\n    }\n\n    public open(\n        onFinished: OnFinishOpenNode | undefined,\n        slide = true,\n        animationSpeed: JQuery.Duration = \"fast\",\n    ): void {\n        if (this.node.is_open) {\n            return;\n        }\n\n        this.node.is_open = true;\n\n        const button = this.getButton();\n        button.classList.remove(\"jqtree-closed\");\n        button.innerHTML = \"\";\n\n        const openedIconElement = this.openedIconElement;\n\n        if (openedIconElement) {\n            const icon = openedIconElement.cloneNode(true);\n            button.appendChild(icon);\n        }\n\n        const doOpen = (): void => {\n            this.element.classList.remove(\"jqtree-closed\");\n\n            const titleSpan = this.getTitleSpan();\n            titleSpan.setAttribute(\"aria-expanded\", \"true\");\n\n            if (onFinished) {\n                onFinished(this.node);\n            }\n\n            this.triggerEvent(\"tree.open\", {\n                node: this.node,\n            });\n        };\n\n        if (slide) {\n            jQuery(this.getUl()).slideDown(animationSpeed, doOpen);\n        } else {\n            jQuery(this.getUl()).show();\n            doOpen();\n        }\n    }\n\n    public close(\n        slide = true,\n        animationSpeed: JQuery.Duration | undefined = \"fast\",\n    ): void {\n        if (!this.node.is_open) {\n            return;\n        }\n\n        this.node.is_open = false;\n\n        const button = this.getButton();\n        button.classList.add(\"jqtree-closed\");\n        button.innerHTML = \"\";\n\n        const closedIconElement = this.closedIconElement;\n\n        if (closedIconElement) {\n            const icon = closedIconElement.cloneNode(true);\n            button.appendChild(icon);\n        }\n\n        const doClose = (): void => {\n            this.element.classList.add(\"jqtree-closed\");\n\n            const titleSpan = this.getTitleSpan();\n            titleSpan.setAttribute(\"aria-expanded\", \"false\");\n\n            this.triggerEvent(\"tree.close\", {\n                node: this.node,\n            });\n        };\n\n        if (slide) {\n            jQuery(this.getUl()).slideUp(animationSpeed, doClose);\n        } else {\n            jQuery(this.getUl()).hide();\n            doClose();\n        }\n    }\n\n    protected mustShowBorderDropHint(position: Position): boolean {\n        return !this.node.is_open && position === Position.Inside;\n    }\n\n    private getButton(): HTMLLinkElement {\n        return this.element.querySelector(\n            \":scope > .jqtree-element > a.jqtree-toggler\",\n        ) as HTMLLinkElement;\n    }\n}\n\nexport default FolderElement;\n","import __version__ from \"./version\";\nimport { DragAndDropHandler } from \"./dragAndDropHandler\";\nimport ElementsRenderer from \"./elementsRenderer\";\nimport DataLoader, { HandleFinishedLoading } from \"./dataLoader\";\nimport KeyHandler from \"./keyHandler\";\nimport MouseWidget from \"./mouse.widget\";\nimport { PositionInfo } from \"./mouseWidgetTypes\";\nimport SaveStateHandler, { SavedState } from \"./saveStateHandler\";\nimport ScrollHandler from \"./scrollHandler\";\nimport SelectNodeHandler from \"./selectNodeHandler\";\nimport SimpleWidget from \"./simple.widget\";\nimport { Node, getPosition } from \"./node\";\nimport { getOffsetTop, isFunction } from \"./util\";\nimport NodeElement from \"./nodeElement\";\nimport FolderElement from \"./nodeElement/folderElement\";\nimport { OnFinishOpenNode } from \"./jqtreeMethodTypes\";\nimport { JQTreeOptions } from \"./jqtreeOptions\";\n\ninterface ClickTarget {\n    node: Node;\n    type: \"button\" | \"label\";\n}\n\ninterface SelectNodeOptions {\n    mustToggle?: boolean;\n    mustSetFocus?: boolean;\n}\n\nconst NODE_PARAM_IS_EMPTY = \"Node parameter is empty\";\nconst PARAM_IS_EMPTY = \"Parameter is empty: \";\n\nexport class JqTreeWidget extends MouseWidget<JQTreeOptions> {\n    protected static defaults: JQTreeOptions = {\n        animationSpeed: \"fast\",\n        autoEscape: true,\n        autoOpen: false, // true / false / int (open n levels starting at 0)\n        buttonLeft: true,\n        // The symbol to use for a closed node - ► BLACK RIGHT-POINTING POINTER\n        // http://www.fileformat.info/info/unicode/char/25ba/index.htm\n        closedIcon: undefined,\n        data: undefined,\n        dataFilter: undefined,\n        dataUrl: undefined,\n        dragAndDrop: false,\n        keyboardSupport: true,\n        nodeClass: Node,\n        onCanMove: undefined, // Can this node be moved?\n        onCanMoveTo: undefined, // Can this node be moved to this position? function(moved_node, target_node, position)\n        onCanSelectNode: undefined,\n        onCreateLi: undefined,\n        onDragMove: undefined,\n        onDragStop: undefined,\n        onGetStateFromStorage: undefined,\n        onIsMoveHandle: undefined,\n        onLoadFailed: undefined,\n        onLoading: undefined,\n        onSetStateFromStorage: undefined,\n        openedIcon: \"&#x25bc;\",\n        openFolderDelay: 500, // The delay for opening a folder during drag and drop; the value is in milliseconds\n        // The symbol to use for an open node - ▼ BLACK DOWN-POINTING TRIANGLE\n        // http://www.fileformat.info/info/unicode/char/25bc/index.htm\n        rtl: undefined, // right-to-left support; true / false (default)\n        saveState: false, // true / false / string (cookie name)\n        selectable: true,\n        showEmptyFolder: false,\n        slide: true, // must display slide animation?\n        startDndDelay: 300, // The delay for starting dnd (in milliseconds)\n        tabIndex: 0,\n        useContextMenu: true,\n    };\n\n    public element: JQuery;\n    public tree: Node;\n    public dndHandler: DragAndDropHandler;\n    public renderer: ElementsRenderer;\n    public dataLoader: DataLoader;\n    public scrollHandler: ScrollHandler;\n    public selectNodeHandler: SelectNodeHandler;\n\n    private isInitialized: boolean;\n    private saveStateHandler: SaveStateHandler;\n    private keyHandler: KeyHandler;\n\n    public toggle(node: Node, slideParam: null | boolean = null): JQuery {\n        if (!node) {\n            throw Error(NODE_PARAM_IS_EMPTY);\n        }\n\n        const slide = slideParam ?? this.options.slide;\n\n        if (node.is_open) {\n            this.closeNode(node, slide);\n        } else {\n            this.openNode(node, slide);\n        }\n\n        return this.element;\n    }\n\n    public getTree(): Node {\n        return this.tree;\n    }\n\n    public selectNode(\n        node: Node | null,\n        optionsParam?: SelectNodeOptions,\n    ): JQuery {\n        this.doSelectNode(node, optionsParam);\n        return this.element;\n    }\n\n    public getSelectedNode(): Node | false {\n        return this.selectNodeHandler.getSelectedNode();\n    }\n\n    public toJson(): string {\n        return JSON.stringify(this.tree.getData());\n    }\n\n    public loadData(data: NodeData[], parentNode: Node | null): JQuery {\n        this.doLoadData(data, parentNode);\n        return this.element;\n    }\n\n    /*\n    signatures:\n    - loadDataFromUrl(url, parent_node=null, on_finished=null)\n        loadDataFromUrl('/my_data');\n        loadDataFromUrl('/my_data', node1);\n        loadDataFromUrl('/my_data', node1, function() { console.log('finished'); });\n        loadDataFromUrl('/my_data', null, function() { console.log('finished'); });\n\n    - loadDataFromUrl(parent_node=null, on_finished=null)\n        loadDataFromUrl();\n        loadDataFromUrl(node1);\n        loadDataFromUrl(null, function() { console.log('finished'); });\n        loadDataFromUrl(node1, function() { console.log('finished'); });\n    */\n    public loadDataFromUrl(\n        param1: string | null | Node,\n        param2?: Node | null | HandleFinishedLoading,\n        param3?: HandleFinishedLoading,\n    ): JQuery {\n        if (typeof param1 === \"string\") {\n            // first parameter is url\n            this.doLoadDataFromUrl(\n                param1,\n                param2 as Node | null,\n                param3 ?? null,\n            );\n        } else {\n            // first parameter is not url\n            this.doLoadDataFromUrl(\n                null,\n                param1,\n                param2 as HandleFinishedLoading | null,\n            );\n        }\n\n        return this.element;\n    }\n\n    public reload(onFinished: HandleFinishedLoading | null): JQuery {\n        this.doLoadDataFromUrl(null, null, onFinished);\n        return this.element;\n    }\n\n    public refresh(): JQuery {\n        this._refreshElements(null);\n        return this.element;\n    }\n\n    public getNodeById(nodeId: NodeId): Node | null {\n        return this.tree.getNodeById(nodeId);\n    }\n\n    public getNodeByName(name: string): Node | null {\n        return this.tree.getNodeByName(name);\n    }\n\n    public getNodeByNameMustExist(name: string): Node {\n        return this.tree.getNodeByNameMustExist(name);\n    }\n\n    public getNodesByProperty(key: string, value: unknown): Node[] {\n        return this.tree.getNodesByProperty(key, value);\n    }\n\n    public getNodeByHtmlElement(\n        inputElement: HTMLElement | JQuery<HTMLElement>,\n    ): Node | null {\n        const element =\n            inputElement instanceof HTMLElement\n                ? inputElement\n                : inputElement[0];\n\n        if (!element) {\n            return null;\n        }\n\n        return this.getNode(element);\n    }\n\n    public getNodeByCallback(callback: (node: Node) => boolean): Node | null {\n        return this.tree.getNodeByCallback(callback);\n    }\n\n    public openNode(\n        node: Node,\n        param1?: boolean | OnFinishOpenNode,\n        param2?: OnFinishOpenNode,\n    ): JQuery {\n        if (!node) {\n            throw Error(NODE_PARAM_IS_EMPTY);\n        }\n\n        const parseParams = (): [boolean, OnFinishOpenNode | undefined] => {\n            let onFinished: OnFinishOpenNode | null;\n            let slide: boolean | null;\n\n            if (isFunction(param1)) {\n                onFinished = param1 as OnFinishOpenNode;\n                slide = null;\n            } else {\n                slide = param1 as boolean;\n                onFinished = param2 as OnFinishOpenNode;\n            }\n\n            if (slide == null) {\n                slide = this.options.slide ?? false;\n            }\n\n            return [slide, onFinished];\n        };\n\n        const [slide, onFinished] = parseParams();\n\n        this._openNode(node, slide, onFinished);\n        return this.element;\n    }\n\n    public closeNode(node: Node, slideParam?: null | boolean): JQuery {\n        if (!node) {\n            throw Error(NODE_PARAM_IS_EMPTY);\n        }\n\n        const slide = slideParam ?? this.options.slide;\n\n        if (node.isFolder() || node.isEmptyFolder) {\n            this.createFolderElement(node).close(\n                slide,\n                this.options.animationSpeed,\n            );\n\n            this.saveState();\n        }\n\n        return this.element;\n    }\n\n    public isDragging(): boolean {\n        return this.dndHandler.isDragging;\n    }\n\n    public refreshHitAreas(): JQuery {\n        this.dndHandler.refresh();\n        return this.element;\n    }\n\n    public addNodeAfter(\n        newNodeInfo: NodeData,\n        existingNode: Node,\n    ): Node | null {\n        const newNode = existingNode.addAfter(newNodeInfo);\n\n        if (newNode) {\n            this._refreshElements(existingNode.parent);\n        }\n\n        return newNode;\n    }\n\n    public addNodeBefore(\n        newNodeInfo: NodeData,\n        existingNode: Node,\n    ): Node | null {\n        if (!existingNode) {\n            throw Error(PARAM_IS_EMPTY + \"existingNode\");\n        }\n\n        const newNode = existingNode.addBefore(newNodeInfo);\n\n        if (newNode) {\n            this._refreshElements(existingNode.parent);\n        }\n\n        return newNode;\n    }\n\n    public addParentNode(\n        newNodeInfo: NodeData,\n        existingNode: Node,\n    ): Node | null {\n        if (!existingNode) {\n            throw Error(PARAM_IS_EMPTY + \"existingNode\");\n        }\n\n        const newNode = existingNode.addParent(newNodeInfo);\n\n        if (newNode) {\n            this._refreshElements(newNode.parent);\n        }\n\n        return newNode;\n    }\n\n    public removeNode(node: Node): JQuery {\n        if (!node) {\n            throw Error(NODE_PARAM_IS_EMPTY);\n        }\n\n        if (!node.parent) {\n            throw Error(\"Node has no parent\");\n        }\n\n        this.selectNodeHandler.removeFromSelection(node, true); // including children\n\n        const parent = node.parent;\n        node.remove();\n        this._refreshElements(parent);\n\n        return this.element;\n    }\n\n    public appendNode(newNodeInfo: NodeData, parentNodeParam?: Node): Node {\n        const parentNode = parentNodeParam || this.tree;\n\n        const node = parentNode.append(newNodeInfo);\n\n        this._refreshElements(parentNode);\n\n        return node;\n    }\n\n    public prependNode(newNodeInfo: NodeData, parentNodeParam?: Node): Node {\n        const parentNode = parentNodeParam ?? this.tree;\n\n        const node = parentNode.prepend(newNodeInfo);\n\n        this._refreshElements(parentNode);\n\n        return node;\n    }\n\n    public updateNode(node: Node, data: NodeData): JQuery {\n        if (!node) {\n            throw Error(NODE_PARAM_IS_EMPTY);\n        }\n\n        const idIsChanged =\n            typeof data === \"object\" && data.id && data.id !== node.id;\n\n        if (idIsChanged) {\n            this.tree.removeNodeFromIndex(node);\n        }\n\n        node.setData(data);\n\n        if (idIsChanged) {\n            this.tree.addNodeToIndex(node);\n        }\n\n        if (\n            typeof data === \"object\" &&\n            data[\"children\"] &&\n            data[\"children\"] instanceof Array\n        ) {\n            node.removeChildren();\n\n            if (data.children.length) {\n                node.loadFromData(data.children as Node[]);\n            }\n        }\n\n        this._refreshElements(node);\n\n        return this.element;\n    }\n\n    private isSelectedNodeInSubtree(subtree: Node): boolean {\n        const selectedNode = this.getSelectedNode();\n\n        if (!selectedNode) {\n            return false;\n        } else {\n            return subtree === selectedNode || subtree.isParentOf(selectedNode);\n        }\n    }\n\n    public moveNode(node: Node, targetNode: Node, position: string): JQuery {\n        if (!node) {\n            throw Error(NODE_PARAM_IS_EMPTY);\n        }\n\n        if (!targetNode) {\n            throw Error(PARAM_IS_EMPTY + \"targetNode\");\n        }\n\n        const positionIndex = getPosition(position);\n\n        if (positionIndex !== undefined) {\n            this.tree.moveNode(node, targetNode, positionIndex);\n            this._refreshElements(null);\n        }\n\n        return this.element;\n    }\n\n    public getStateFromStorage(): SavedState | null {\n        return this.saveStateHandler.getStateFromStorage();\n    }\n\n    public addToSelection(node: Node, mustSetFocus?: boolean): JQuery {\n        if (!node) {\n            throw Error(NODE_PARAM_IS_EMPTY);\n        }\n\n        this.selectNodeHandler.addToSelection(node);\n        this.openParents(node);\n\n        this._getNodeElementForNode(node).select(\n            mustSetFocus === undefined ? true : mustSetFocus,\n        );\n\n        this.saveState();\n\n        return this.element;\n    }\n\n    public getSelectedNodes(): Node[] {\n        return this.selectNodeHandler.getSelectedNodes();\n    }\n\n    public isNodeSelected(node: Node): boolean {\n        if (!node) {\n            throw Error(NODE_PARAM_IS_EMPTY);\n        }\n\n        return this.selectNodeHandler.isNodeSelected(node);\n    }\n\n    public removeFromSelection(node: Node): JQuery {\n        if (!node) {\n            throw Error(NODE_PARAM_IS_EMPTY);\n        }\n\n        this.selectNodeHandler.removeFromSelection(node);\n\n        this._getNodeElementForNode(node).deselect();\n        this.saveState();\n\n        return this.element;\n    }\n\n    public scrollToNode(node: Node): JQuery {\n        if (!node) {\n            throw Error(NODE_PARAM_IS_EMPTY);\n        }\n\n        const top = getOffsetTop(node.element) - getOffsetTop(this.$el.get(0) as HTMLElement);\n\n        this.scrollHandler.scrollToY(top);\n\n        return this.element;\n    }\n\n    public getState(): SavedState | null {\n        return this.saveStateHandler.getState();\n    }\n\n    public setState(state: SavedState): JQuery {\n        this.saveStateHandler.setInitialState(state);\n        this._refreshElements(null);\n\n        return this.element;\n    }\n\n    public setOption(option: string, value: unknown): JQuery {\n        (this.options as unknown as Record<string, unknown>)[option] = value;\n        return this.element;\n    }\n\n    public moveDown(): JQuery {\n        const selectedNode = this.getSelectedNode();\n        if (selectedNode) {\n            this.keyHandler.moveDown(selectedNode);\n        }\n\n        return this.element;\n    }\n\n    public moveUp(): JQuery {\n        const selectedNode = this.getSelectedNode();\n        if (selectedNode) {\n            this.keyHandler.moveUp(selectedNode);\n        }\n\n        return this.element;\n    }\n\n    public getVersion(): string {\n        return __version__;\n    }\n\n    public _triggerEvent(\n        eventName: string,\n        values?: Record<string, unknown>,\n    ): JQuery.Event {\n        const event = jQuery.Event(eventName, values);\n        this.element.trigger(event);\n        return event;\n    }\n\n    public _openNode(\n        node: Node,\n        slide = true,\n        onFinished?: OnFinishOpenNode,\n    ): void {\n        const doOpenNode = (\n            _node: Node,\n            _slide: boolean,\n            _onFinished?: OnFinishOpenNode,\n        ): void => {\n            const folderElement = this.createFolderElement(_node);\n            folderElement.open(\n                _onFinished,\n                _slide,\n                this.options.animationSpeed,\n            );\n        };\n\n        if (node.isFolder() || node.isEmptyFolder) {\n            if (node.load_on_demand) {\n                this.loadFolderOnDemand(node, slide, onFinished);\n            } else {\n                let parent = node.parent;\n\n                while (parent) {\n                    // nb: do not open root element\n                    if (parent.parent) {\n                        doOpenNode(parent, false);\n                    }\n                    parent = parent.parent;\n                }\n\n                doOpenNode(node, slide, onFinished);\n                this.saveState();\n            }\n        }\n    }\n\n    /*\n    Redraw the tree or part of the tree.\n     from_node: redraw this subtree\n    */\n    public _refreshElements(fromNode: Node | null): void {\n        const mustSetFocus = this.isFocusOnTree();\n        const mustSelect = fromNode\n            ? this.isSelectedNodeInSubtree(fromNode)\n            : false;\n\n        this.renderer.render(fromNode);\n\n        if (mustSelect) {\n            this.selectCurrentNode(mustSetFocus);\n        }\n\n        this._triggerEvent(\"tree.refresh\");\n    }\n\n    public _getNodeElementForNode(node: Node): NodeElement {\n        if (node.isFolder()) {\n            return this.createFolderElement(node);\n        } else {\n            return this.createNodeElement(node);\n        }\n    }\n\n    public _getNodeElement(element: HTMLElement): NodeElement | null {\n        const node = this.getNode(element);\n        if (node) {\n            return this._getNodeElementForNode(node);\n        } else {\n            return null;\n        }\n    }\n\n    public _getScrollLeft(): number {\n        return this.scrollHandler.getScrollLeft();\n    }\n\n    public init(): void {\n        super.init();\n\n        this.element = this.$el;\n        this.isInitialized = false;\n\n        this.options.rtl = this.getRtlOption();\n\n        if (this.options.closedIcon == null) {\n            this.options.closedIcon = this.getDefaultClosedIcon();\n        }\n\n        this.connectHandlers();\n\n        this.initData();\n\n        this.element.on(\"click\", this.handleClick);\n        this.element.on(\"dblclick\", this.handleDblclick);\n\n        if (this.options.useContextMenu) {\n            this.element.on(\"contextmenu\", this.handleContextmenu);\n        }\n    }\n\n    public deinit(): void {\n        this.element.empty();\n        this.element.off();\n\n        this.keyHandler.deinit();\n\n        this.tree = new Node({}, true);\n\n        super.deinit();\n    }\n\n    protected mouseCapture(positionInfo: PositionInfo): boolean | null {\n        if (this.options.dragAndDrop) {\n            return this.dndHandler.mouseCapture(positionInfo);\n        } else {\n            return false;\n        }\n    }\n\n    protected mouseStart(positionInfo: PositionInfo): boolean {\n        if (this.options.dragAndDrop) {\n            return this.dndHandler.mouseStart(positionInfo);\n        } else {\n            return false;\n        }\n    }\n\n    protected mouseDrag(positionInfo: PositionInfo): boolean {\n        if (this.options.dragAndDrop) {\n            const result = this.dndHandler.mouseDrag(positionInfo);\n\n            this.scrollHandler.checkScrolling(positionInfo);\n            return result;\n        } else {\n            return false;\n        }\n    }\n\n    protected mouseStop(positionInfo: PositionInfo): boolean {\n        if (this.options.dragAndDrop) {\n            this.scrollHandler.stopScrolling();\n            return this.dndHandler.mouseStop(positionInfo);\n        } else {\n            return false;\n        }\n    }\n\n    protected getMouseDelay(): number {\n        return this.options.startDndDelay ?? 0;\n    }\n\n    private initData(): void {\n        if (this.options.data) {\n            this.doLoadData(this.options.data, null);\n        } else {\n            const dataUrl = this.getDataUrlInfo(null);\n\n            if (dataUrl) {\n                this.doLoadDataFromUrl(null, null, null);\n            } else {\n                this.doLoadData([], null);\n            }\n        }\n    }\n\n    private getDataUrlInfo(node: Node | null): JQuery.AjaxSettings | null {\n        const dataUrl =\n            this.options.dataUrl || (this.element.data(\"url\") as string | null);\n\n        const getUrlFromString = (url: string): JQuery.AjaxSettings => {\n            const urlInfo: JQuery.AjaxSettings = { url };\n\n            setUrlInfoData(urlInfo);\n\n            return urlInfo;\n        };\n\n        const setUrlInfoData = (urlInfo: JQuery.AjaxSettings): void => {\n            if (node?.id) {\n                // Load on demand of a subtree; add node parameter\n                const data = { node: node.id };\n                urlInfo[\"data\"] = data;\n            } else {\n                // Add selected_node parameter\n                const selectedNodeId = this.getNodeIdToBeSelected();\n                if (selectedNodeId) {\n                    const data = { selected_node: selectedNodeId };\n                    urlInfo[\"data\"] = data;\n                }\n            }\n        };\n\n        if (typeof dataUrl === \"function\") {\n            return dataUrl(node);\n        } else if (typeof dataUrl === \"string\") {\n            return getUrlFromString(dataUrl);\n        } else if (dataUrl && typeof dataUrl === \"object\") {\n            setUrlInfoData(dataUrl);\n            return dataUrl;\n        } else {\n            return null;\n        }\n    }\n\n    private getNodeIdToBeSelected(): NodeId | null {\n        if (this.options.saveState) {\n            return this.saveStateHandler.getNodeIdToBeSelected();\n        } else {\n            return null;\n        }\n    }\n\n    private initTree(data: NodeData[]): void {\n        const doInit = (): void => {\n            if (!this.isInitialized) {\n                this.isInitialized = true;\n                this._triggerEvent(\"tree.init\");\n            }\n        };\n\n        if (!this.options.nodeClass) {\n            return;\n        }\n\n        this.tree = new this.options.nodeClass(\n            null,\n            true,\n            this.options.nodeClass,\n        );\n\n        this.selectNodeHandler.clear();\n\n        this.tree.loadFromData(data);\n\n        const mustLoadOnDemand = this.setInitialState();\n\n        this._refreshElements(null);\n\n        if (!mustLoadOnDemand) {\n            doInit();\n        } else {\n            // Load data on demand and then init the tree\n            this.setInitialStateOnDemand(doInit);\n        }\n    }\n\n    // Set initial state, either by restoring the state or auto-opening nodes\n    // result: must load nodes on demand?\n    private setInitialState(): boolean {\n        const restoreState = (): [boolean, boolean] => {\n            // result: is state restored, must load on demand?\n            if (!this.options.saveState) {\n                return [false, false];\n            } else {\n                const state = this.saveStateHandler.getStateFromStorage();\n\n                if (!state) {\n                    return [false, false];\n                } else {\n                    const mustLoadOnDemand =\n                        this.saveStateHandler.setInitialState(state);\n\n                    // return true: the state is restored\n                    return [true, mustLoadOnDemand];\n                }\n            }\n        };\n\n        const autoOpenNodes = (): boolean => {\n            // result: must load on demand?\n            if (this.options.autoOpen === false) {\n                return false;\n            }\n\n            const maxLevel = this.getAutoOpenMaxLevel();\n            let mustLoadOnDemand = false;\n\n            this.tree.iterate((node: Node, level: number) => {\n                if (node.load_on_demand) {\n                    mustLoadOnDemand = true;\n                    return false;\n                } else if (!node.hasChildren()) {\n                    return false;\n                } else {\n                    node.is_open = true;\n                    return level !== maxLevel;\n                }\n            });\n\n            return mustLoadOnDemand;\n        };\n\n        let [isRestored, mustLoadOnDemand] = restoreState(); // eslint-disable-line prefer-const\n\n        if (!isRestored) {\n            mustLoadOnDemand = autoOpenNodes();\n        }\n\n        return mustLoadOnDemand;\n    }\n\n    // Set the initial state for nodes that are loaded on demand\n    // Call cb_finished when done\n    private setInitialStateOnDemand(cbFinished: () => void): void {\n        const restoreState = (): boolean => {\n            if (!this.options.saveState) {\n                return false;\n            } else {\n                const state = this.saveStateHandler.getStateFromStorage();\n\n                if (!state) {\n                    return false;\n                } else {\n                    this.saveStateHandler.setInitialStateOnDemand(\n                        state,\n                        cbFinished,\n                    );\n\n                    return true;\n                }\n            }\n        };\n\n        const autoOpenNodes = (): void => {\n            const maxLevel = this.getAutoOpenMaxLevel();\n            let loadingCount = 0;\n\n            const loadAndOpenNode = (node: Node): void => {\n                loadingCount += 1;\n                this._openNode(node, false, () => {\n                    loadingCount -= 1;\n                    openNodes();\n                });\n            };\n\n            const openNodes = (): void => {\n                this.tree.iterate((node: Node, level: number) => {\n                    if (node.load_on_demand) {\n                        if (!node.is_loading) {\n                            loadAndOpenNode(node);\n                        }\n\n                        return false;\n                    } else {\n                        this._openNode(node, false);\n\n                        return level !== maxLevel;\n                    }\n                });\n\n                if (loadingCount === 0) {\n                    cbFinished();\n                }\n            };\n\n            openNodes();\n        };\n\n        if (!restoreState()) {\n            autoOpenNodes();\n        }\n    }\n\n    private getAutoOpenMaxLevel(): number {\n        if (this.options.autoOpen === true) {\n            return -1;\n        } else if (typeof this.options.autoOpen === \"number\") {\n            return this.options.autoOpen;\n        } else if (typeof this.options.autoOpen === \"string\") {\n            return parseInt(this.options.autoOpen, 10);\n        } else {\n            return 0;\n        }\n    }\n\n    private handleClick = (\n        e: JQuery.ClickEvent<HTMLElement, any, HTMLElement, HTMLElement>,\n    ): void => {\n        const clickTarget = this.getClickTarget(e.target);\n\n        if (clickTarget) {\n            if (clickTarget.type === \"button\") {\n                this.toggle(clickTarget.node, this.options.slide);\n\n                e.preventDefault();\n                e.stopPropagation();\n            } else if (clickTarget.type === \"label\") {\n                const node = clickTarget.node;\n                const event = this._triggerEvent(\"tree.click\", {\n                    node,\n                    click_event: e,\n                });\n\n                if (!event.isDefaultPrevented()) {\n                    this.doSelectNode(node);\n                }\n            }\n        }\n    };\n\n    private handleDblclick = (\n        e: JQuery.DoubleClickEvent<HTMLElement, any, HTMLElement, HTMLElement>,\n    ): void => {\n        const clickTarget = this.getClickTarget(e.target);\n\n        if (clickTarget?.type === \"label\") {\n            this._triggerEvent(\"tree.dblclick\", {\n                node: clickTarget.node,\n                click_event: e,\n            });\n        }\n    };\n\n    private getClickTarget(element: HTMLElement): ClickTarget | null {\n        const button = element.closest(\".jqtree-toggler\");\n\n        if (button) {\n            const node = this.getNode(button as HTMLElement);\n\n            if (node) {\n                return {\n                    type: \"button\",\n                    node,\n                };\n            }\n        } else {\n            const jqTreeElement = element.closest(\".jqtree-element\");\n\n            if (jqTreeElement) {\n                const node = this.getNode(jqTreeElement as HTMLElement);\n                if (node) {\n                    return {\n                        type: \"label\",\n                        node,\n                    };\n                }\n            }\n        }\n\n        return null;\n    }\n\n    private getNode(element: HTMLElement): null | Node {\n        const liElement = element.closest(\"li.jqtree_common\");\n\n        if (liElement) {\n            return jQuery(liElement).data(\"node\") as Node;\n        } else {\n            return null;\n        }\n    }\n\n    private handleContextmenu = (\n        e: JQuery.ContextMenuEvent<HTMLElement, any, HTMLElement, HTMLElement>,\n    ) => {\n        const div = e.target.closest(\"ul.jqtree-tree .jqtree-element\");\n\n        if (div) {\n            const node = this.getNode(div as HTMLElement);\n            if (node) {\n                e.preventDefault();\n                e.stopPropagation();\n\n                this._triggerEvent(\"tree.contextmenu\", {\n                    node,\n                    click_event: e,\n                });\n                return false;\n            }\n        }\n\n        return null;\n    };\n\n    private saveState(): void {\n        if (this.options.saveState) {\n            this.saveStateHandler.saveState();\n        }\n    }\n\n    private selectCurrentNode(mustSetFocus: boolean): void {\n        const node = this.getSelectedNode();\n        if (node) {\n            const nodeElement = this._getNodeElementForNode(node);\n            if (nodeElement) {\n                nodeElement.select(mustSetFocus);\n            }\n        }\n    }\n\n    private deselectCurrentNode(): void {\n        const node = this.getSelectedNode();\n        if (node) {\n            this.removeFromSelection(node);\n        }\n    }\n\n    private getDefaultClosedIcon(): string {\n        if (this.options.rtl) {\n            // triangle to the left\n            return \"&#x25c0;\";\n        } else {\n            // triangle to the right\n            return \"&#x25ba;\";\n        }\n    }\n\n    private getRtlOption(): boolean {\n        if (this.options.rtl != null) {\n            return this.options.rtl;\n        } else {\n            const dataRtl = this.element.data(\"rtl\") as unknown;\n\n            if (\n                dataRtl !== null &&\n                dataRtl !== false &&\n                dataRtl !== undefined\n            ) {\n                return true;\n            } else {\n                return false;\n            }\n        }\n    }\n\n    private doSelectNode(\n        node: Node | null,\n        optionsParam?: SelectNodeOptions,\n    ): void {\n        const saveState = (): void => {\n            if (this.options.saveState) {\n                this.saveStateHandler.saveState();\n            }\n        };\n\n        if (!node) {\n            // Called with empty node -> deselect current node\n            this.deselectCurrentNode();\n            saveState();\n            return;\n        }\n        const defaultOptions = { mustSetFocus: true, mustToggle: true };\n        const selectOptions = { ...defaultOptions, ...(optionsParam || {}) };\n\n        const canSelect = (): boolean => {\n            if (this.options.onCanSelectNode) {\n                return (\n                    this.options.selectable === true &&\n                    this.options.onCanSelectNode(node)\n                );\n            } else {\n                return this.options.selectable === true;\n            }\n        };\n\n        if (!canSelect()) {\n            return;\n        }\n\n        if (this.selectNodeHandler.isNodeSelected(node)) {\n            if (selectOptions.mustToggle) {\n                this.deselectCurrentNode();\n                this._triggerEvent(\"tree.select\", {\n                    node: null,\n                    previous_node: node,\n                });\n            }\n        } else {\n            const deselectedNode = this.getSelectedNode() || null;\n            this.deselectCurrentNode();\n            this.addToSelection(node, selectOptions.mustSetFocus);\n\n            this._triggerEvent(\"tree.select\", {\n                node,\n                deselected_node: deselectedNode,\n            });\n            this.openParents(node);\n        }\n\n        saveState();\n    }\n\n    private doLoadData(data: NodeData[] | null, parentNode: Node | null): void {\n        if (data) {\n            if (parentNode) {\n                this.deselectNodes(parentNode);\n                this.loadSubtree(data, parentNode);\n            } else {\n                this.initTree(data);\n            }\n\n            if (this.isDragging()) {\n                this.dndHandler.refresh();\n            }\n        }\n\n        this._triggerEvent(\"tree.load_data\", {\n            tree_data: data,\n            parent_node: parentNode,\n        });\n    }\n\n    private deselectNodes(parentNode: Node): void {\n        const selectedNodesUnderParent =\n            this.selectNodeHandler.getSelectedNodesUnder(parentNode);\n        for (const n of selectedNodesUnderParent) {\n            this.selectNodeHandler.removeFromSelection(n);\n        }\n    }\n\n    private loadSubtree(data: NodeData[], parentNode: Node): void {\n        parentNode.loadFromData(data);\n\n        parentNode.load_on_demand = false;\n        parentNode.is_loading = false;\n\n        this._refreshElements(parentNode);\n    }\n\n    private doLoadDataFromUrl(\n        urlInfoParam: string | JQuery.AjaxSettings | null,\n        parentNode: Node | null,\n        onFinished: HandleFinishedLoading | null,\n    ): void {\n        const urlInfo = urlInfoParam || this.getDataUrlInfo(parentNode);\n\n        this.dataLoader.loadFromUrl(urlInfo, parentNode, onFinished);\n    }\n\n    private loadFolderOnDemand(\n        node: Node,\n        slide = true,\n        onFinished?: OnFinishOpenNode,\n    ): void {\n        node.is_loading = true;\n\n        this.doLoadDataFromUrl(null, node, () => {\n            this._openNode(node, slide, onFinished);\n        });\n    }\n\n    private containsElement(element: HTMLElement): boolean {\n        const node = this.getNode(element);\n\n        return node != null && node.tree === this.tree;\n    }\n\n    private isFocusOnTree(): boolean {\n        const activeElement = document.activeElement;\n\n        return Boolean(\n            activeElement &&\n                activeElement.tagName === \"SPAN\" &&\n                this.containsElement(activeElement as HTMLElement),\n        );\n    }\n\n    private connectHandlers() {\n        const {\n            autoEscape,\n            buttonLeft,\n            closedIcon,\n            dataFilter,\n            dragAndDrop,\n            keyboardSupport,\n            onCanMove,\n            onCreateLi,\n            onDragMove,\n            onDragStop,\n            onGetStateFromStorage,\n            onIsMoveHandle,\n            onLoadFailed,\n            onLoading,\n            onSetStateFromStorage,\n            openedIcon,\n            openFolderDelay,\n            rtl,\n            saveState,\n            showEmptyFolder,\n            slide,\n            tabIndex,\n        } = this.options;\n\n        const closeNode = this.closeNode.bind(this);\n        const getNodeElement = this._getNodeElement.bind(this);\n        const getNodeElementForNode = this._getNodeElementForNode.bind(this);\n        const getNodeById = this.getNodeById.bind(this);\n        const getSelectedNode = this.getSelectedNode.bind(this);\n        const getTree = this.getTree.bind(this);\n        const isFocusOnTree = this.isFocusOnTree.bind(this);\n        const loadData = this.loadData.bind(this);\n        const openNode = this._openNode.bind(this);\n        const refreshElements = this._refreshElements.bind(this);\n        const refreshHitAreas = this.refreshHitAreas.bind(this);\n        const selectNode = this.selectNode.bind(this);\n        const $treeElement = this.element;\n        const treeElement = this.element.get(0) as HTMLElement;\n        const triggerEvent = this._triggerEvent.bind(this);\n\n        const selectNodeHandler = new SelectNodeHandler({\n            getNodeById,\n        });\n\n        const addToSelection =\n            selectNodeHandler.addToSelection.bind(selectNodeHandler);\n        const getSelectedNodes =\n            selectNodeHandler.getSelectedNodes.bind(selectNodeHandler);\n        const isNodeSelected =\n            selectNodeHandler.isNodeSelected.bind(selectNodeHandler);\n        const removeFromSelection =\n            selectNodeHandler.removeFromSelection.bind(selectNodeHandler);\n\n        const dataLoader = new DataLoader({\n            dataFilter,\n            loadData,\n            onLoadFailed,\n            onLoading,\n            $treeElement,\n            triggerEvent,\n        });\n\n        const saveStateHandler = new SaveStateHandler({\n            addToSelection,\n            getNodeById,\n            getSelectedNodes,\n            getTree,\n            onGetStateFromStorage,\n            onSetStateFromStorage,\n            openNode,\n            refreshElements,\n            removeFromSelection,\n            saveState,\n        });\n\n        const dndHandler = new DragAndDropHandler({\n            autoEscape,\n            getNodeElement,\n            getNodeElementForNode,\n            getTree,\n            onCanMove,\n            onDragMove,\n            onDragStop,\n            onIsMoveHandle,\n            openFolderDelay,\n            openNode,\n            refreshElements,\n            slide,\n            treeElement,\n            triggerEvent,\n        });\n\n        const scrollHandler = new ScrollHandler({\n            refreshHitAreas,\n            treeElement,\n        });\n\n        const keyHandler = new KeyHandler({\n            closeNode,\n            getSelectedNode,\n            isFocusOnTree,\n            keyboardSupport,\n            openNode,\n            selectNode,\n        });\n\n        const renderer = new ElementsRenderer({\n            autoEscape,\n            buttonLeft,\n            closedIcon,\n            dragAndDrop,\n            $element: $treeElement,\n            getTree,\n            isNodeSelected,\n            onCreateLi,\n            openedIcon,\n            rtl,\n            showEmptyFolder,\n            tabIndex,\n        });\n\n        this.dataLoader = dataLoader;\n        this.dndHandler = dndHandler;\n        this.keyHandler = keyHandler;\n        this.renderer = renderer;\n        this.saveStateHandler = saveStateHandler;\n        this.scrollHandler = scrollHandler;\n        this.selectNodeHandler = selectNodeHandler;\n    }\n\n    private createFolderElement(node: Node) {\n        const closedIconElement = this.renderer.closedIconElement;\n        const getScrollLeft = this._getScrollLeft.bind(this);\n        const openedIconElement = this.renderer.openedIconElement;\n        const tabIndex = this.options.tabIndex;\n        const $treeElement = this.element;\n        const triggerEvent = this._triggerEvent.bind(this);\n\n        return new FolderElement({\n            closedIconElement,\n            getScrollLeft,\n            node,\n            openedIconElement,\n            tabIndex,\n            $treeElement,\n            triggerEvent,\n        });\n    }\n\n    private createNodeElement(node: Node) {\n        const getScrollLeft = this._getScrollLeft.bind(this);\n        const tabIndex = this.options.tabIndex;\n        const $treeElement = this.element;\n\n        return new NodeElement({\n            getScrollLeft,\n            node,\n            tabIndex,\n            $treeElement,\n        });\n    }\n\n    private openParents(node: Node) {\n        const parent = node.parent;\n\n        if (parent && parent.parent && !parent.is_open) {\n            this.openNode(parent, false);\n        }\n    }\n}\n\nSimpleWidget.register(JqTreeWidget, \"tree\");\n"],"names":["version","isNodeRecordWithChildren","data","Array","Position","positionNames","before","Before","after","After","inside","Inside","none","None","getPositionName","position","name","Object","prototype","hasOwnProperty","call","getPosition","Node","constructor","nodeData","arguments","length","undefined","isRoot","nodeClass","load_on_demand","isEmptyFolder","children","setData","parent","idMapping","Map","tree","o","key","value","loadFromData","removeChildren","childData","node","createNode","addChild","push","setParent","addChildAtPosition","index","splice","removeChild","doRemoveChild","getChildIndex","indexOf","hasChildren","isFolder","iterate","callback","_iterate","level","child","result","moveNode","movedNode","targetNode","isParentOf","getData","includeParent","getDataFromNodes","nodes","map","tmpNode","k","v","getNodeByName","getNodeByCallback","getNodeByNameMustExist","n","addAfter","nodeInfo","childIndex","loadChildrenFromData","addBefore","addParent","newParent","originalParent","remove","append","prepend","getLevel","getNodeById","nodeId","get","addNodeToIndex","id","set","removeNodeFromIndex","delete","getPreviousSibling","previousIndex","getNextSibling","nextIndex","getNodesByProperty","filter","f","getNextNode","includeChildren","nextSibling","getNextVisibleNode","is_open","getPreviousNode","previousSibling","getParent","getLastChild","getPreviousVisibleNode","lastChild","initFromData","addNode","addChildren","childrenData","getNodeClass","DragElement","_ref","autoEscape","nodeName","offsetX","offsetY","treeElement","element","createElement","appendChild","move","pageX","pageY","style","left","top","document","classList","add","textContent","innerHTML","isInt","isFunction","getBoolString","getOffsetTop","getElementPosition","rect","getBoundingClientRect","x","window","scrollX","y","scrollY","VisibleNodeIterator","isFirstNode","_iterateNode","nextNode","mustIterateInside","offsetParent","handleFirstNode","handleNode","handleOpenFolder","handleClosedFolder","childrenLength","forEach","_","i","nextChild","handleAfterOpenFolder","HitAreasGenerator","currentNode","treeBottom","generate","positions","lastTop","generateHitAreas","previousTop","group","hitAreas","generateHitAreasForGroup","addPosition","area","bottom","positionsInGroup","positionCount","Math","min","areaHeight","round","areaTop","DragAndDropHandler","getNodeElement","getNodeElementForNode","getTree","onCanMove","onCanMoveTo","onDragMove","onDragStop","onIsMoveHandle","openNode","refreshElements","slide","triggerEvent","hoveredArea","isDragging","currentItem","mouseCapture","positionInfo","target","mustCaptureElement","jQuery","nodeElement","mouseStart","refresh","dragElement","mouseDrag","findHoveredArea","canMoveToArea","stopOpenFolderTimer","mustOpenFolderTimer","startOpenFolderTimer","updateDropHint","removeDropHint","originalEvent","mouseStop","moveItem","clear","removeHover","removeHitAreas","hitAreasGenerator","getTreeDimensions","positionName","previousGhost","dimensions","right","low","high","mid","addDropHint","folder","openFolder","openFolderDelay","openFolderTimer","setTimeout","clearTimeout","previousParent","doMove","event","move_info","moved_node","target_node","previous_parent","do_move","original_event","isDefaultPrevented","clientWidth","clientHeight","ElementsRenderer","buttonLeft","closedIcon","onCreateLi","dragAndDrop","$element","isNodeSelected","openedIcon","rtl","showEmptyFolder","tabIndex","openedIconElement","createButtonElement","closedIconElement","render","fromNode","renderFromNode","renderFromRoot","empty","createDomElements","$previousLi","li","createLi","attachNodeData","isRootNode","ul","createUl","classString","role","className","setAttribute","isSelected","Boolean","mustShowFolder","createFolderLi","createNodeLi","setTreeItemAriaAttributes","buttonClasses","getButtonClasses","folderClasses","getFolderClasses","iconElement","div","buttonLink","cloneNode","titleSpan","createTitleSpan","liClasses","join","classes","is_loading","createTextNode","nodeType","DataLoader","dataFilter","loadData","onLoadFailed","onLoading","$treeElement","loadFromUrl","urlInfo","parentNode","onFinished","$el","getDomElement","addLoadingClass","notifyLoading","stopLoading","removeLoadingClass","handleSuccess","parseData","handleError","jqXHR","submitRequest","addClass","removeClass","isLoading","urlInfoInput","url","ajaxSettings","method","cache","dataType","success","error","toUpperCase","ajax","getParsedData","JSON","parse","parsedData","KeyHandler","closeNode","getSelectedNode","isFocusOnTree","keyboardSupport","selectNode","originalSelectNode","handleKeyDownHandler","handleKeyDown","bind","addEventListener","deinit","removeEventListener","moveDown","selectedNode","moveUp","moveRight","moveLeft","e","canHandleKeyboard","register","widgetClass","widgetName","getDataKey","getWidgetData","el","dataKey","widget","SimpleWidget","createWidget","options","existingWidget","simpleWidgetClass","init","destroyWidget","destroy","removeData","callFunction","functionName","args","simpleWidget","widgetFunction","apply","fn","argument1","_len","_key","defaults","getPositionInfoFromMouseEvent","getPositionInfoFromTouch","touch","MouseWidget","mouseDown","passive","touchStart","isMouseStarted","mouseDelayTimer","isMouseDelayMet","mouseDownInfo","removeMouseMoveEventListeners","button","handleMouseDown","cancelable","preventDefault","handleMouseUp","handleStartMouse","mouseMove","touchMove","mouseUp","touchEnd","mouseDelay","getMouseDelay","startMouseDelayTimer","handleMouseMove","touches","changedTouches","SaveStateHandler","addToSelection","getSelectedNodes","onGetStateFromStorage","onSetStateFromStorage","removeFromSelection","saveState","saveStateOption","state","stringify","getState","supportsLocalStorage","localStorage","setItem","getKeyName","getStateFromStorage","jsonData","loadFromStorage","parseState","getOpenNodeIds","openNodes","getSelectedNodeIds","selectedNodeIds","open_nodes","selected_node","setInitialState","mustLoadOnDemand","openInitialNodes","resetSelection","selectInitialNodes","setInitialStateOnDemand","cbFinished","doSetInitialStateOnDemand","getNodeIdToBeSelected","getItem","nodeIds","selectCount","selectedNodes","nodeIdsParam","loadingCount","newNodesIds","loadAndOpenNode","testSupport","sessionStorage","removeItem","_supportsLocalStorage","ContainerScrollParent","container","refreshHitAreas","checkHorizontalScrolling","newHorizontalScrollDirection","getNewHorizontalScrollDirection","horizontalScrollDirection","horizontalScrollTimeout","verticalScrollTimeout","scrollHorizontally","checkVerticalScrolling","newVerticalScrollDirection","getNewVerticalScrollDirection","verticalScrollDirection","scrollVertically","getScrollLeft","scrollLeft","scrollToY","scrollTop","stopScrolling","scrollParentTop","scrollParentBottom","scrollParentOffset","rightEdge","leftEdge","isNearRightEdge","isNearLeftEdge","getScrollParentTop","getScrollParentBottom","distance","scrollBy","behavior","DocumentScrollParent","documentElement","treeTop","documentScrollHeight","documentScrollWidth","windowWidth","innerWidth","canScrollRight","getDocumentScrollWidth","canScrollDown","getDocumentScrollHeight","scrollHeight","scrollWidth","distanceTop","windowHeight","innerHeight","isOverflow","overflowValue","hasOverFlow","overflow","overflowY","getParentWithOverflow","parentElement","createScrollParent","tagName","ScrollHandler","scrollParent","checkScrolling","getScrollParent","SelectNodeHandler","Set","selectedSingleNode","getSelectedNodesUnder","has","BorderDropHint","querySelector","hint","width","max","offsetWidth","height","GhostDropHint","ghost","createGhostElement","moveAfter","moveBefore","moveInsideOpenFolder","moveInside","childElement","circleSpan","lineSpan","NodeElement","mustShowBorderDropHint","select","mustSetFocus","getTitleSpan","toString","focus","deselect","removeAttribute","blur","getUl","FolderElement","open","animationSpeed","getButton","icon","doOpen","slideDown","show","close","doClose","slideUp","hide","NODE_PARAM_IS_EMPTY","PARAM_IS_EMPTY","JqTreeWidget","autoOpen","dataUrl","onCanSelectNode","selectable","startDndDelay","useContextMenu","toggle","slideParam","Error","optionsParam","doSelectNode","selectNodeHandler","toJson","doLoadData","loadDataFromUrl","param1","param2","param3","doLoadDataFromUrl","reload","_refreshElements","getNodeByHtmlElement","inputElement","HTMLElement","getNode","parseParams","_openNode","createFolderElement","dndHandler","addNodeAfter","newNodeInfo","existingNode","newNode","addNodeBefore","addParentNode","removeNode","appendNode","parentNodeParam","prependNode","updateNode","idIsChanged","isSelectedNodeInSubtree","subtree","positionIndex","saveStateHandler","openParents","_getNodeElementForNode","scrollToNode","scrollHandler","setState","setOption","option","keyHandler","getVersion","__version__","_triggerEvent","eventName","values","Event","trigger","doOpenNode","_node","_slide","_onFinished","folderElement","loadFolderOnDemand","mustSelect","renderer","selectCurrentNode","createNodeElement","_getNodeElement","_getScrollLeft","isInitialized","getRtlOption","getDefaultClosedIcon","connectHandlers","initData","on","handleClick","handleDblclick","handleContextmenu","off","getDataUrlInfo","getUrlFromString","setUrlInfoData","selectedNodeId","initTree","doInit","restoreState","autoOpenNodes","maxLevel","getAutoOpenMaxLevel","isRestored","parseInt","clickTarget","getClickTarget","type","stopPropagation","click_event","closest","jqTreeElement","liElement","deselectCurrentNode","dataRtl","defaultOptions","mustToggle","selectOptions","canSelect","previous_node","deselectedNode","deselected_node","deselectNodes","loadSubtree","tree_data","parent_node","selectedNodesUnderParent","urlInfoParam","dataLoader","containsElement","activeElement"],"mappings":"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"}