{"version":3,"file":"tree.jquery.debug.js","sources":["src/dataLoader.ts","src/position.ts","src/util.ts","src/dragAndDropHandler/dragElement.ts","src/dragAndDropHandler/iterateVisibleNodes.ts","src/dragAndDropHandler/generateHitAreas.ts","src/dragAndDropHandler/index.ts","src/elementsRenderer.ts","src/keyHandler.ts","src/mouseUtils.ts","src/mouseHandler.ts","src/nodeUtils.ts","src/node.ts","src/nodeElement/borderDropHint.ts","src/nodeElement/ghostDropHint.ts","src/nodeElement/index.ts","src/nodeElement/folderElement.ts","src/saveStateHandler.ts","src/scrollHandler/containerScrollParent.ts","src/scrollHandler/documentScrollParent.ts","src/scrollHandler/createScrollParent.ts","src/scrollHandler.ts","src/selectNodeHandler.ts","src/simple.widget.ts","src/version.ts","src/tree.jquery.ts"],"sourcesContent":["import { LoadData, TriggerEvent } from \"./jqtreeMethodTypes\";\nimport { DataFilter, OnLoadFailed, OnLoading } from \"./jqtreeOptions\";\nimport { Node } from \"./node\";\n\nexport type HandleFinishedLoading = () => void;\n\ninterface DataLoaderParams {\n    dataFilter?: DataFilter;\n    loadData: LoadData;\n    onLoadFailed?: OnLoadFailed;\n    onLoading?: OnLoading;\n    treeElement: HTMLElement;\n    triggerEvent: TriggerEvent;\n}\n\nexport default class DataLoader {\n    private dataFilter?: DataFilter;\n    private loadData: LoadData;\n    private onLoadFailed?: OnLoadFailed;\n    private onLoading?: OnLoading;\n    private treeElement: HTMLElement;\n    private triggerEvent: TriggerEvent;\n\n    constructor({\n        dataFilter,\n        loadData,\n        onLoadFailed,\n        onLoading,\n        treeElement,\n        triggerEvent,\n    }: DataLoaderParams) {\n        this.dataFilter = dataFilter;\n        this.loadData = loadData;\n        this.onLoadFailed = onLoadFailed;\n        this.onLoading = onLoading;\n        this.treeElement = treeElement;\n        this.triggerEvent = triggerEvent;\n    }\n\n    private addLoadingClass(element: HTMLElement): void {\n        element.classList.add(\"jqtree-loading\");\n    }\n\n    private getDomElement(parentNode: Node | null): HTMLElement {\n        if (parentNode?.element) {\n            return parentNode.element;\n        } else {\n            return this.treeElement;\n        }\n    }\n\n    private notifyLoading(\n        isLoading: boolean,\n        node: Node | null,\n        element: HTMLElement,\n    ): void {\n        const $el = jQuery(element);\n\n        if (this.onLoading) {\n            this.onLoading(isLoading, node, $el);\n        }\n\n        this.triggerEvent(\"tree.loading_data\", {\n            $el,\n            isLoading,\n            node,\n        });\n    }\n\n    private parseData(data: NodeData[] | string): NodeData[] {\n        const getParsedData = () => {\n            if (typeof data === \"string\") {\n                return JSON.parse(data) as NodeData[];\n            } else {\n                return data;\n            }\n        };\n\n        const parsedData = getParsedData();\n\n        if (this.dataFilter) {\n            return this.dataFilter(parsedData);\n        } else {\n            return parsedData;\n        }\n    }\n\n    private removeLoadingClass(element: HTMLElement): void {\n        element.classList.remove(\"jqtree-loading\");\n    }\n\n    private submitRequest(\n        urlInfoInput: JQuery.AjaxSettings | string,\n        handleSuccess: JQuery.Ajax.SuccessCallback<any>,\n        handleError: JQuery.Ajax.ErrorCallback<any>,\n    ): void {\n        const urlInfo =\n            typeof urlInfoInput === \"string\"\n                ? { url: urlInfoInput }\n                : urlInfoInput;\n\n        const ajaxSettings: JQuery.AjaxSettings = {\n            cache: false,\n            dataType: \"json\",\n            error: handleError,\n            method: \"GET\",\n            success: handleSuccess,\n            ...urlInfo,\n        };\n\n        ajaxSettings.method = ajaxSettings.method?.toUpperCase() ?? \"GET\";\n\n        void jQuery.ajax(ajaxSettings);\n    }\n\n    public loadFromUrl(\n        urlInfo: JQuery.AjaxSettings | null | string,\n        parentNode: Node | null,\n        onFinished: HandleFinishedLoading | null,\n    ): void {\n        if (!urlInfo) {\n            return;\n        }\n\n        const element = this.getDomElement(parentNode);\n        this.addLoadingClass(element);\n        this.notifyLoading(true, parentNode, element);\n\n        const stopLoading = (): void => {\n            this.removeLoadingClass(element);\n            this.notifyLoading(false, parentNode, element);\n        };\n\n        const handleSuccess = (data: NodeData[] | string): void => {\n            stopLoading();\n            this.loadData(this.parseData(data), parentNode);\n\n            if (onFinished && typeof onFinished === \"function\") {\n                onFinished();\n            }\n        };\n\n        const handleError = (jqXHR: JQuery.jqXHR): void => {\n            stopLoading();\n\n            if (this.onLoadFailed) {\n                this.onLoadFailed(jqXHR);\n            }\n        };\n\n        this.submitRequest(urlInfo, handleSuccess, handleError);\n    }\n}\n","export enum Position {\n    Before = 1,\n    After,\n    Inside,\n    None,\n}\n\nconst positionNames: Record<string, Position> = {\n    after: Position.After,\n    before: Position.Before,\n    inside: Position.Inside,\n    none: Position.None,\n};\n\nexport const getPositionName = (position: Position): string => {\n    for (const name in positionNames) {\n        if (Object.prototype.hasOwnProperty.call(positionNames, name)) {\n            if (positionNames[name] === position) {\n                return name;\n            }\n        }\n    }\n\n    return \"\";\n};\n\nexport const getPosition = (name: string): Position | undefined =>\n    positionNames[name];\n","export const isInt = (n: unknown): boolean =>\n    typeof n === \"number\" && n % 1 === 0;\n\nexport const isFunction = (v: unknown): boolean => typeof v === \"function\";\n\nexport const getBoolString = (value: unknown): string =>\n    value ? \"true\" : \"false\";\n\nexport const getOffsetTop = (element: HTMLElement) =>\n    getElementPosition(element).top;\n\nexport const getElementPosition = (element: HTMLElement) => {\n    const rect = element.getBoundingClientRect();\n\n    return {\n        left: rect.x + window.scrollX,\n        top: rect.y + window.scrollY,\n    };\n};\n","interface DragElementParams {\n    autoEscape: boolean;\n    nodeName: string;\n    offsetX: number;\n    offsetY: number;\n    treeElement: HTMLElement;\n}\n\nclass DragElement {\n    private element: HTMLElement;\n    private offsetX: number;\n    private offsetY: number;\n\n    constructor({\n        autoEscape,\n        nodeName,\n        offsetX,\n        offsetY,\n        treeElement,\n    }: DragElementParams) {\n        this.offsetX = offsetX;\n        this.offsetY = offsetY;\n\n        this.element = this.createElement(nodeName, autoEscape);\n\n        treeElement.appendChild(this.element);\n    }\n\n    private createElement(nodeName: string, autoEscape: boolean) {\n        const element = document.createElement(\"span\");\n        element.classList.add(\"jqtree-title\", \"jqtree-dragging\");\n\n        if (autoEscape) {\n            element.textContent = nodeName;\n        } else {\n            element.innerHTML = nodeName;\n        }\n\n        element.style.position = \"absolute\";\n\n        return element;\n    }\n\n    public move(pageX: number, pageY: number): void {\n        this.element.style.left = `${pageX - this.offsetX}px`;\n        this.element.style.top = `${pageY - this.offsetY}px`;\n    }\n\n    public remove(): void {\n        this.element.remove();\n    }\n}\n\nexport default DragElement;\n","import { Node } from \"../node\";\n\ninterface Options {\n    handleAfterOpenFolder: (node: Node, nextNode: Node | null) => void;\n    handleClosedFolder: (\n        node: Node,\n        nextNode: Node | null,\n        element: HTMLElement,\n    ) => void;\n    handleFirstNode: (node: Node) => void;\n    handleNode: (\n        node: Node,\n        nextNode: Node | null,\n        element: HTMLElement,\n    ) => void;\n\n    /*\n    override\n    return\n        - true: continue iterating\n        - false: stop iterating\n    */\n    handleOpenFolder: (node: Node, element: HTMLElement) => boolean;\n}\n\nconst iterateVisibleNodes = (\n    tree: Node,\n    {\n        handleAfterOpenFolder,\n        handleClosedFolder,\n        handleFirstNode,\n        handleNode,\n        handleOpenFolder,\n    }: Options,\n) => {\n    let isFirstNode = true;\n\n    const iterate = (node: Node, nextNode: Node | null): void => {\n        let mustIterateInside =\n            (node.is_open || !node.element) && node.hasChildren();\n\n        let element: HTMLElement | null = null;\n\n        // Is the element visible?\n        if (node.element?.offsetParent) {\n            element = node.element;\n\n            if (isFirstNode) {\n                handleFirstNode(node);\n                isFirstNode = false;\n            }\n\n            if (!node.hasChildren()) {\n                handleNode(node, nextNode, node.element);\n            } else if (node.is_open) {\n                if (!handleOpenFolder(node, node.element)) {\n                    mustIterateInside = false;\n                }\n            } else {\n                handleClosedFolder(node, nextNode, element);\n            }\n        }\n\n        if (mustIterateInside) {\n            const childrenLength = node.children.length;\n            node.children.forEach((_, i) => {\n                const child = node.children[i];\n\n                if (child) {\n                    if (i === childrenLength - 1) {\n                        iterate(child, null);\n                    } else {\n                        const nextChild = node.children[i + 1];\n\n                        if (nextChild) {\n                            iterate(child, nextChild);\n                        }\n                    }\n                }\n            });\n\n            if (node.is_open && element) {\n                handleAfterOpenFolder(node, nextNode);\n            }\n        }\n    };\n\n    iterate(tree, null);\n};\n\nexport default iterateVisibleNodes;\n","import { Node } from \"../node\";\nimport { Position } from \"../position\";\nimport { getOffsetTop } from \"../util\";\nimport iterateVisibleNodes from \"./iterateVisibleNodes\";\nimport { HitArea } from \"./types\";\n\ninterface HitPosition {\n    node: Node;\n    position: Position;\n    top: number;\n}\n\nexport const generateHitPositions = (\n    tree: Node,\n    currentNode: Node,\n): HitPosition[] => {\n    const hitPositions: HitPosition[] = [];\n    let lastTop = 0;\n\n    const addHitPosition = (node: Node, position: number, top: number) => {\n        hitPositions.push({\n            node,\n            position,\n            top,\n        });\n        lastTop = top;\n    };\n\n    const handleAfterOpenFolder = (node: Node, nextNode: Node | null) => {\n        if (node === currentNode || nextNode === currentNode) {\n            // Cannot move before or after current item\n            addHitPosition(node, Position.None, lastTop);\n        } else {\n            addHitPosition(node, Position.After, lastTop);\n        }\n    };\n\n    const handleClosedFolder = (\n        node: Node,\n        nextNode: Node | null,\n        element: HTMLElement,\n    ) => {\n        const top = getOffsetTop(element);\n\n        if (node === currentNode) {\n            // Cannot move after current item\n            addHitPosition(node, Position.None, top);\n        } else {\n            addHitPosition(node, Position.Inside, top);\n\n            // Cannot move before current item\n            if (nextNode !== currentNode) {\n                addHitPosition(node, Position.After, top);\n            }\n        }\n    };\n\n    const handleFirstNode = (node: Node) => {\n        if (node !== currentNode && node.element) {\n            addHitPosition(node, Position.Before, getOffsetTop(node.element));\n        }\n    };\n\n    const handleNode = (\n        node: Node,\n        nextNode: Node | null,\n        element: HTMLElement,\n    ) => {\n        const top = getOffsetTop(element);\n\n        if (node === currentNode) {\n            // Cannot move inside current item\n            addHitPosition(node, Position.None, top);\n        } else {\n            addHitPosition(node, Position.Inside, top);\n        }\n\n        if (nextNode === currentNode || node === currentNode) {\n            // Cannot move before or after current item\n            addHitPosition(node, Position.None, top);\n        } else {\n            addHitPosition(node, Position.After, top);\n        }\n    };\n\n    const handleOpenFolder = (node: Node, element: HTMLElement) => {\n        if (node === currentNode) {\n            // Cannot move inside current item\n\n            // Dnd over the current element is not possible: add a position with type None for the top and the bottom.\n            const top = getOffsetTop(element);\n            const height = element.clientHeight;\n            addHitPosition(node, Position.None, top);\n\n            if (height > 5) {\n                // Subtract 5 pixels to allow more space for the next element.\n                addHitPosition(node, Position.None, top + height - 5);\n            }\n\n            // Stop iterating\n            return false;\n        }\n\n        // Cannot move before current item\n        if (node.children[0] !== currentNode) {\n            addHitPosition(node, Position.Inside, getOffsetTop(element));\n        }\n\n        // Continue iterating\n        return true;\n    };\n\n    iterateVisibleNodes(tree, {\n        handleAfterOpenFolder,\n        handleClosedFolder,\n        handleFirstNode,\n        handleNode,\n        handleOpenFolder,\n    });\n\n    return hitPositions;\n};\n\nexport const generateHitAreasForGroup = (\n    hitAreas: HitArea[],\n    positionsInGroup: HitPosition[],\n    top: number,\n    bottom: number,\n) => {\n    // limit positions in group\n    const positionCount = Math.min(positionsInGroup.length, 4);\n\n    const areaHeight = Math.round((bottom - top) / positionCount);\n    let areaTop = top;\n\n    for (let i = 0; i < positionCount; i++) {\n        const position = positionsInGroup[i] as HitPosition;\n\n        if (position.position !== Position.None) {\n            hitAreas.push({\n                bottom: areaTop + areaHeight,\n                node: position.node,\n                position: position.position,\n                top: areaTop,\n            });\n        }\n\n        areaTop += areaHeight;\n    }\n};\n\nexport const generateHitAreasFromPositions = (\n    hitPositions: HitPosition[],\n    treeBottom: number,\n): HitArea[] => {\n    if (!hitPositions.length) {\n        return [];\n    }\n\n    let previousTop = (hitPositions[0] as HitPosition).top;\n    let group: HitPosition[] = [];\n    const hitAreas: HitArea[] = [];\n\n    for (const position of hitPositions) {\n        if (position.top !== previousTop && group.length) {\n            generateHitAreasForGroup(\n                hitAreas,\n                group,\n                previousTop,\n                position.top,\n            );\n\n            previousTop = position.top;\n            group = [];\n        }\n\n        group.push(position);\n    }\n\n    generateHitAreasForGroup(hitAreas, group, previousTop, treeBottom);\n\n    return hitAreas;\n};\n\nconst generateHitAreas = (tree: Node, currentNode: Node, treeBottom: number) =>\n    generateHitAreasFromPositions(\n        generateHitPositions(tree, currentNode),\n        treeBottom,\n    );\n\nexport default generateHitAreas;\n","import {\n    GetScrollLeft,\n    GetTree,\n    OpenNode,\n    RefreshElements,\n    TriggerEvent,\n} from \"../jqtreeMethodTypes\";\nimport {\n    DragMethod,\n    OnCanMove,\n    OnCanMoveTo,\n    OnIsMoveHandle,\n} from \"../jqtreeOptions\";\nimport { PositionInfo } from \"../mouseUtils\";\nimport { Node } from \"../node\";\nimport NodeElement from \"../nodeElement\";\nimport { getPositionName, Position } from \"../position\";\nimport { getElementPosition } from \"../util\";\nimport DragElement from \"./dragElement\";\nimport generateHitAreas from \"./generateHitAreas\";\nimport { DropHint, HitArea } from \"./types\";\n\ninterface Dimensions {\n    bottom: number;\n    left: number;\n    right: number;\n    top: number;\n}\n\ntype GetNodeElement = (element: HTMLElement) => NodeElement | null;\ntype GetNodeElementForNode = (node: Node) => NodeElement;\n\ninterface DragAndDropHandlerParams {\n    autoEscape?: boolean;\n    getNodeElement: GetNodeElement;\n    getNodeElementForNode: GetNodeElementForNode;\n    getScrollLeft: GetScrollLeft;\n    getTree: GetTree;\n    onCanMove?: OnCanMove;\n    onCanMoveTo?: OnCanMoveTo;\n    onDragMove?: DragMethod;\n    onDragStop?: DragMethod;\n    onIsMoveHandle?: OnIsMoveHandle;\n    openFolderDelay: false | number;\n    openNode: OpenNode;\n    refreshElements: RefreshElements;\n    slide: boolean;\n    treeElement: HTMLElement;\n    triggerEvent: TriggerEvent;\n}\n\nexport class DragAndDropHandler {\n    private autoEscape?: boolean;\n    private dragElement: DragElement | null;\n    private getNodeElement: GetNodeElement;\n    private getNodeElementForNode: GetNodeElementForNode;\n\n    private getScrollLeft: GetScrollLeft;\n    private getTree: GetTree;\n    private onCanMove?: OnCanMove;\n    private onCanMoveTo?: OnCanMoveTo;\n    private onDragMove?: DragMethod;\n    private onDragStop?: DragMethod;\n    private onIsMoveHandle?: OnIsMoveHandle;\n    private openFolderDelay: false | number;\n    private openFolderTimer: null | number;\n    private openNode: OpenNode;\n    private previousGhost: DropHint | null;\n    private refreshElements: RefreshElements;\n    private slide: boolean;\n    private treeElement: HTMLElement;\n    private triggerEvent: TriggerEvent;\n    public currentItem: NodeElement | null;\n    public hitAreas: HitArea[];\n    public hoveredArea: HitArea | null;\n    public isDragging: boolean;\n\n    constructor({\n        autoEscape,\n        getNodeElement,\n        getNodeElementForNode,\n        getScrollLeft,\n        getTree,\n        onCanMove,\n        onCanMoveTo,\n        onDragMove,\n        onDragStop,\n        onIsMoveHandle,\n        openNode,\n        refreshElements,\n        slide,\n        treeElement,\n        triggerEvent,\n    }: DragAndDropHandlerParams) {\n        this.autoEscape = autoEscape;\n        this.getNodeElement = getNodeElement;\n        this.getNodeElementForNode = getNodeElementForNode;\n        this.getScrollLeft = getScrollLeft;\n        this.getTree = getTree;\n        this.onCanMove = onCanMove;\n        this.onCanMoveTo = onCanMoveTo;\n        this.onDragMove = onDragMove;\n        this.onDragStop = onDragStop;\n        this.onIsMoveHandle = onIsMoveHandle;\n        this.openNode = openNode;\n        this.refreshElements = refreshElements;\n        this.slide = slide;\n        this.treeElement = treeElement;\n        this.triggerEvent = triggerEvent;\n\n        this.hoveredArea = null;\n        this.hitAreas = [];\n        this.isDragging = false;\n        this.currentItem = null;\n    }\n\n    private canMoveToArea(area: HitArea): boolean {\n        if (!this.onCanMoveTo) {\n            return true;\n        }\n\n        if (!this.currentItem) {\n            return false;\n        }\n\n        const positionName = getPositionName(area.position);\n\n        return this.onCanMoveTo(this.currentItem.node, area.node, positionName);\n    }\n\n    private clear(): void {\n        if (this.dragElement) {\n            this.dragElement.remove();\n            this.dragElement = null;\n        }\n    }\n\n    private findHoveredArea(x: number, y: number): HitArea | null {\n        const dimensions = this.getTreeDimensions();\n\n        if (\n            x < dimensions.left ||\n            y < dimensions.top ||\n            x > dimensions.right ||\n            y > dimensions.bottom\n        ) {\n            return null;\n        }\n\n        let low = 0;\n        let high = this.hitAreas.length;\n        while (low < high) {\n            const mid = (low + high) >> 1;\n            const area = this.hitAreas[mid];\n\n            if (!area) {\n                return null;\n            }\n\n            if (y < area.top) {\n                high = mid;\n            } else if (y > area.bottom) {\n                low = mid + 1;\n            } else {\n                return area;\n            }\n        }\n\n        return null;\n    }\n\n    private generateHitAreas(): void {\n        const tree = this.getTree();\n\n        if (!this.currentItem || !tree) {\n            this.hitAreas = [];\n        } else {\n            this.hitAreas = generateHitAreas(\n                tree,\n                this.currentItem.node,\n                this.getTreeDimensions().bottom,\n            );\n        }\n    }\n\n    private getTreeDimensions(): Dimensions {\n        // Return the dimensions of the tree. Add a margin to the bottom to allow\n        // to drag-and-drop after the last element.\n        const treePosition = getElementPosition(this.treeElement);\n        const left = treePosition.left + this.getScrollLeft();\n        const top = treePosition.top;\n\n        return {\n            bottom: top + this.treeElement.clientHeight + 16,\n            left,\n            right: left + this.treeElement.clientWidth,\n            top,\n        };\n    }\n\n    private moveItem(positionInfo: PositionInfo): void {\n        if (\n            this.currentItem &&\n            this.hoveredArea &&\n            this.hoveredArea.position !== Position.None &&\n            this.canMoveToArea(this.hoveredArea)\n        ) {\n            const movedNode = this.currentItem.node;\n            const targetNode = this.hoveredArea.node;\n            const position = this.hoveredArea.position;\n            const previousParent = movedNode.parent;\n\n            if (position === Position.Inside) {\n                this.hoveredArea.node.is_open = true;\n            }\n\n            const doMove = (): void => {\n                const tree = this.getTree();\n\n                if (tree) {\n                    tree.moveNode(movedNode, targetNode, position);\n\n                    this.treeElement.textContent = \"\";\n                    this.refreshElements(null);\n                }\n            };\n\n            const event = this.triggerEvent(\"tree.move\", {\n                move_info: {\n                    do_move: doMove,\n                    moved_node: movedNode,\n                    original_event: positionInfo.originalEvent,\n                    position: getPositionName(position),\n                    previous_parent: previousParent,\n                    target_node: targetNode,\n                },\n            });\n\n            if (!event.isDefaultPrevented()) {\n                doMove();\n            }\n        }\n    }\n\n    private mustCaptureElement(element: HTMLElement): boolean {\n        const nodeName = element.nodeName;\n\n        return (\n            nodeName !== \"INPUT\" &&\n            nodeName !== \"SELECT\" &&\n            nodeName !== \"TEXTAREA\"\n        );\n    }\n\n    private mustOpenFolderTimer(area: HitArea): boolean {\n        const node = area.node;\n\n        return (\n            node.isFolder() &&\n            !node.is_open &&\n            area.position === Position.Inside\n        );\n    }\n\n    private removeDropHint(): void {\n        if (this.previousGhost) {\n            this.previousGhost.remove();\n        }\n    }\n\n    private removeHitAreas(): void {\n        this.hitAreas = [];\n    }\n\n    private removeHover(): void {\n        this.hoveredArea = null;\n    }\n\n    private startOpenFolderTimer(folder: Node): void {\n        const openFolder = (): void => {\n            this.openNode(folder, this.slide, () => {\n                this.refresh();\n                this.updateDropHint();\n            });\n        };\n\n        this.stopOpenFolderTimer();\n\n        const openFolderDelay = this.openFolderDelay;\n\n        if (openFolderDelay !== false) {\n            this.openFolderTimer = window.setTimeout(\n                openFolder,\n                openFolderDelay,\n            );\n        }\n    }\n\n    private stopOpenFolderTimer(): void {\n        if (this.openFolderTimer) {\n            clearTimeout(this.openFolderTimer);\n            this.openFolderTimer = null;\n        }\n    }\n\n    private updateDropHint(): void {\n        if (!this.hoveredArea) {\n            return;\n        }\n\n        // remove previous drop hint\n        this.removeDropHint();\n\n        // add new drop hint\n        const nodeElement = this.getNodeElementForNode(this.hoveredArea.node);\n        this.previousGhost = nodeElement.addDropHint(this.hoveredArea.position);\n    }\n\n    public mouseCapture(positionInfo: PositionInfo): boolean | null {\n        const element = positionInfo.target;\n\n        if (!this.mustCaptureElement(element)) {\n            return null;\n        }\n\n        if (this.onIsMoveHandle && !this.onIsMoveHandle(jQuery(element))) {\n            return null;\n        }\n\n        let nodeElement = this.getNodeElement(element);\n\n        if (nodeElement && this.onCanMove) {\n            if (!this.onCanMove(nodeElement.node)) {\n                nodeElement = null;\n            }\n        }\n\n        this.currentItem = nodeElement;\n        return this.currentItem != null;\n    }\n\n    public mouseDrag(positionInfo: PositionInfo): boolean {\n        if (!this.currentItem || !this.dragElement) {\n            return false;\n        }\n\n        this.dragElement.move(positionInfo.pageX, positionInfo.pageY);\n\n        const area = this.findHoveredArea(\n            positionInfo.pageX,\n            positionInfo.pageY,\n        );\n\n        if (area && this.canMoveToArea(area)) {\n            if (!area.node.isFolder()) {\n                this.stopOpenFolderTimer();\n            }\n\n            if (this.hoveredArea !== area) {\n                this.hoveredArea = area;\n\n                // If this is a closed folder, start timer to open it\n                if (this.mustOpenFolderTimer(area)) {\n                    this.startOpenFolderTimer(area.node);\n                } else {\n                    this.stopOpenFolderTimer();\n                }\n\n                this.updateDropHint();\n            }\n        } else {\n            this.removeDropHint();\n            this.stopOpenFolderTimer();\n            this.hoveredArea = area;\n        }\n\n        if (!area) {\n            if (this.onDragMove) {\n                this.onDragMove(\n                    this.currentItem.node,\n                    positionInfo.originalEvent,\n                );\n            }\n        }\n\n        return true;\n    }\n\n    public mouseStart(positionInfo: PositionInfo): boolean {\n        if (!this.currentItem) {\n            return false;\n        }\n\n        this.refresh();\n\n        const { left, top } = getElementPosition(positionInfo.target);\n\n        const node = this.currentItem.node;\n\n        this.dragElement = new DragElement({\n            autoEscape: this.autoEscape ?? true,\n            nodeName: node.name,\n            offsetX: positionInfo.pageX - left,\n            offsetY: positionInfo.pageY - top,\n            treeElement: this.treeElement,\n        });\n\n        this.isDragging = true;\n        this.currentItem.element.classList.add(\"jqtree-moving\");\n\n        return true;\n    }\n\n    public mouseStop(positionInfo: PositionInfo): boolean {\n        this.moveItem(positionInfo);\n        this.clear();\n        this.removeHover();\n        this.removeDropHint();\n        this.removeHitAreas();\n\n        const currentItem = this.currentItem;\n\n        if (this.currentItem) {\n            this.currentItem.element.classList.remove(\"jqtree-moving\");\n            this.currentItem = null;\n        }\n\n        this.isDragging = false;\n\n        if (!this.hoveredArea && currentItem) {\n            if (this.onDragStop) {\n                this.onDragStop(currentItem.node, positionInfo.originalEvent);\n            }\n        }\n\n        return false;\n    }\n\n    public refresh(): void {\n        this.removeHitAreas();\n\n        if (this.currentItem) {\n            this.generateHitAreas();\n\n            this.currentItem = this.getNodeElementForNode(\n                this.currentItem.node,\n            );\n\n            if (this.isDragging) {\n                this.currentItem.element.classList.add(\"jqtree-moving\");\n            }\n        }\n    }\n}\n","import { GetTree, IsNodeSelected } from \"./jqtreeMethodTypes\";\nimport { IconElement, OnCreateLi } from \"./jqtreeOptions\";\nimport { Node } from \"./node\";\nimport { getBoolString } from \"./util\";\n\ninterface ElementsRendererParams {\n    $element: JQuery;\n    autoEscape: boolean;\n    buttonLeft: boolean;\n    closedIcon?: IconElement;\n    dragAndDrop: boolean;\n    getTree: GetTree;\n    isNodeSelected: IsNodeSelected;\n    onCreateLi?: OnCreateLi;\n    openedIcon?: IconElement;\n    rtl?: boolean;\n    showEmptyFolder: boolean;\n    tabIndex?: number;\n}\n\nexport default class ElementsRenderer {\n    private $element: JQuery;\n    private autoEscape: boolean;\n    private buttonLeft: boolean;\n    private dragAndDrop: boolean;\n    private getTree: GetTree;\n    private isNodeSelected: IsNodeSelected;\n    private onCreateLi?: OnCreateLi;\n    private rtl?: boolean;\n    private showEmptyFolder: boolean;\n    private tabIndex?: number;\n\n    public closedIconElement?: HTMLElement | Text;\n    public openedIconElement?: HTMLElement | Text;\n\n    constructor({\n        $element,\n        autoEscape,\n        buttonLeft,\n        closedIcon,\n        dragAndDrop,\n        getTree,\n        isNodeSelected,\n        onCreateLi,\n        openedIcon,\n        rtl,\n        showEmptyFolder,\n        tabIndex,\n    }: ElementsRendererParams) {\n        this.autoEscape = autoEscape;\n        this.buttonLeft = buttonLeft;\n        this.dragAndDrop = dragAndDrop;\n        this.$element = $element;\n        this.getTree = getTree;\n        this.isNodeSelected = isNodeSelected;\n        this.onCreateLi = onCreateLi;\n        this.rtl = rtl;\n        this.showEmptyFolder = showEmptyFolder;\n        this.tabIndex = tabIndex;\n        this.openedIconElement = this.createButtonElement(openedIcon ?? \"+\");\n        this.closedIconElement = this.createButtonElement(closedIcon ?? \"-\");\n    }\n\n    private attachNodeData(node: Node, li: HTMLElement): void {\n        node.element = li;\n        jQuery(li).data(\"node\", node);\n    }\n\n    private createButtonElement(\n        value: IconElement,\n    ): HTMLElement | Text | undefined {\n        if (typeof value === \"string\") {\n            // convert value to html\n            const div = document.createElement(\"div\");\n            div.innerHTML = value;\n\n            return document.createTextNode(div.innerHTML);\n        } else if ((value as HTMLElement).nodeType) {\n            return value as HTMLElement;\n        } else {\n            return jQuery(value)[0];\n        }\n    }\n\n    private createDomElements(\n        element: Element,\n        children: Node[],\n        isRootNode: boolean,\n        level: number,\n    ): void {\n        const ul = this.createUl(isRootNode);\n        element.appendChild(ul);\n\n        for (const child of children) {\n            const li = this.createLi(child, level);\n            ul.appendChild(li);\n\n            if (child.hasChildren()) {\n                this.createDomElements(li, child.children, false, level + 1);\n            }\n        }\n    }\n\n    private createFolderLi(\n        node: Node,\n        level: number,\n        isSelected: boolean,\n    ): HTMLLIElement {\n        const buttonClasses = this.getButtonClasses(node);\n        const folderClasses = this.getFolderClasses(node, isSelected);\n\n        const iconElement = node.is_open\n            ? this.openedIconElement\n            : this.closedIconElement;\n\n        // li\n        const li = document.createElement(\"li\");\n        li.className = `jqtree_common ${folderClasses}`;\n        li.setAttribute(\"role\", \"none\");\n\n        // div\n        const div = document.createElement(\"div\");\n        div.className = \"jqtree-element jqtree_common\";\n        div.setAttribute(\"role\", \"none\");\n\n        li.appendChild(div);\n\n        // button link\n        const buttonLink = document.createElement(\"a\");\n        buttonLink.className = buttonClasses;\n\n        if (iconElement) {\n            buttonLink.appendChild(iconElement.cloneNode(true));\n        }\n\n        if (this.buttonLeft) {\n            div.appendChild(buttonLink);\n        }\n\n        // title span\n        const titleSpan = this.createTitleSpan(\n            node.name,\n            isSelected,\n            true,\n            level,\n        );\n        titleSpan.setAttribute(\"aria-expanded\", getBoolString(node.is_open));\n        div.appendChild(titleSpan);\n\n        if (!this.buttonLeft) {\n            div.appendChild(buttonLink);\n        }\n\n        return li;\n    }\n\n    /* Create the <li> element\n     * Attach it to node.element.\n     * Call onCreateLi\n     */\n    private createLi(node: Node, level: number): HTMLLIElement {\n        const isSelected = Boolean(this.isNodeSelected(node));\n\n        const mustShowFolder =\n            node.isFolder() || (node.isEmptyFolder && this.showEmptyFolder);\n\n        const li = mustShowFolder\n            ? this.createFolderLi(node, level, isSelected)\n            : this.createNodeLi(node, level, isSelected);\n\n        this.attachNodeData(node, li);\n\n        if (this.onCreateLi) {\n            this.onCreateLi(node, jQuery(li), isSelected);\n        }\n\n        return li;\n    }\n\n    private createNodeLi(\n        node: Node,\n        level: number,\n        isSelected: boolean,\n    ): HTMLLIElement {\n        const liClasses = [\"jqtree_common\"];\n\n        if (isSelected) {\n            liClasses.push(\"jqtree-selected\");\n        }\n\n        const classString = liClasses.join(\" \");\n\n        // li\n        const li = document.createElement(\"li\");\n        li.className = classString;\n        li.setAttribute(\"role\", \"none\");\n\n        // div\n        const div = document.createElement(\"div\");\n        div.className = \"jqtree-element jqtree_common\";\n        div.setAttribute(\"role\", \"none\");\n\n        li.appendChild(div);\n\n        // title span\n        const titleSpan = this.createTitleSpan(\n            node.name,\n            isSelected,\n            false,\n            level,\n        );\n        div.appendChild(titleSpan);\n\n        return li;\n    }\n\n    private createTitleSpan(\n        nodeName: string,\n        isSelected: boolean,\n        isFolder: boolean,\n        level: number,\n    ): HTMLSpanElement {\n        const titleSpan = document.createElement(\"span\");\n\n        let classes = \"jqtree-title jqtree_common\";\n\n        if (isFolder) {\n            classes += \" jqtree-title-folder\";\n        }\n\n        classes += ` jqtree-title-button-${this.buttonLeft ? \"left\" : \"right\"}`;\n\n        titleSpan.className = classes;\n\n        if (isSelected) {\n            const tabIndex = this.tabIndex;\n\n            if (tabIndex !== undefined) {\n                titleSpan.setAttribute(\"tabindex\", `${tabIndex}`);\n            }\n        }\n\n        this.setTreeItemAriaAttributes(titleSpan, nodeName, level, isSelected);\n\n        if (this.autoEscape) {\n            titleSpan.textContent = nodeName;\n        } else {\n            titleSpan.innerHTML = nodeName;\n        }\n\n        return titleSpan;\n    }\n\n    private createUl(isRootNode: boolean): HTMLUListElement {\n        let classString;\n        let role;\n\n        if (!isRootNode) {\n            classString = \"\";\n            role = \"group\";\n        } else {\n            classString = \"jqtree-tree\";\n            role = \"tree\";\n\n            if (this.rtl) {\n                classString += \" jqtree-rtl\";\n            }\n        }\n\n        if (this.dragAndDrop) {\n            classString += \" jqtree-dnd\";\n        }\n\n        const ul = document.createElement(\"ul\");\n        ul.className = `jqtree_common ${classString}`;\n\n        ul.setAttribute(\"role\", role);\n\n        return ul;\n    }\n\n    private getButtonClasses(node: Node): string {\n        const classes = [\"jqtree-toggler\", \"jqtree_common\"];\n\n        if (!node.is_open) {\n            classes.push(\"jqtree-closed\");\n        }\n\n        if (this.buttonLeft) {\n            classes.push(\"jqtree-toggler-left\");\n        } else {\n            classes.push(\"jqtree-toggler-right\");\n        }\n\n        return classes.join(\" \");\n    }\n\n    private getFolderClasses(node: Node, isSelected: boolean): string {\n        const classes = [\"jqtree-folder\"];\n\n        if (!node.is_open) {\n            classes.push(\"jqtree-closed\");\n        }\n\n        if (isSelected) {\n            classes.push(\"jqtree-selected\");\n        }\n\n        if (node.is_loading) {\n            classes.push(\"jqtree-loading\");\n        }\n\n        return classes.join(\" \");\n    }\n\n    private setTreeItemAriaAttributes(\n        element: HTMLElement,\n        name: string,\n        level: number,\n        isSelected: boolean,\n    ) {\n        element.setAttribute(\"aria-label\", name);\n        element.setAttribute(\"aria-level\", `${level}`);\n        element.setAttribute(\"aria-selected\", getBoolString(isSelected));\n        element.setAttribute(\"role\", \"treeitem\");\n    }\n\n    public render(fromNode: Node | null): void {\n        if (fromNode?.parent) {\n            this.renderFromNode(fromNode);\n        } else {\n            this.renderFromRoot();\n        }\n    }\n\n    public renderFromNode(node: Node): void {\n        if (!node.element) {\n            return;\n        }\n\n        // remember current li\n        const $previousLi = jQuery(node.element);\n\n        // create element\n        const li = this.createLi(node, node.getLevel());\n\n        // add element to dom\n        $previousLi.after(li);\n\n        // remove previous li\n        $previousLi.remove();\n\n        // create children\n        this.createDomElements(li, node.children, false, node.getLevel() + 1);\n    }\n\n    public renderFromRoot(): void {\n        this.$element.empty();\n\n        const tree = this.getTree();\n\n        if (this.$element[0] && tree) {\n            this.createDomElements(this.$element[0], tree.children, true, 1);\n        }\n    }\n}\n","import {\n    CloseNode,\n    GetSelectedNode,\n    IsFocusOnTree,\n    OpenNode,\n    SelectNode,\n} from \"./jqtreeMethodTypes\";\nimport { Node } from \"./node\";\n\ntype KeyboardEventHandler = (event: KeyboardEvent) => boolean;\n\ninterface KeyHandlerParams {\n    closeNode: CloseNode;\n    getSelectedNode: GetSelectedNode;\n    isFocusOnTree: IsFocusOnTree;\n    keyboardSupport: boolean;\n    openNode: OpenNode;\n    selectNode: SelectNode;\n}\n\nexport default class KeyHandler {\n    private closeNode: CloseNode;\n    private getSelectedNode: GetSelectedNode;\n\n    private handleKeyDown = (e: KeyboardEvent): void => {\n        if (!this.canHandleKeyboard()) {\n            return;\n        }\n\n        let isKeyHandled = false;\n\n        const selectedNode = this.getSelectedNode();\n        if (selectedNode) {\n            switch (e.key) {\n                case \"ArrowDown\":\n                    isKeyHandled = this.moveDown(selectedNode);\n                    break;\n\n                case \"ArrowUp\":\n                    isKeyHandled = this.moveUp(selectedNode);\n                    break;\n\n                case \"ArrowRight\":\n                    isKeyHandled = this.moveRight(selectedNode);\n                    break;\n\n                case \"ArrowLeft\":\n                    isKeyHandled = this.moveLeft(selectedNode);\n                    break;\n            }\n        }\n\n        if (isKeyHandled) {\n            e.preventDefault();\n        }\n    };\n\n    private handleKeyDownHandler?: KeyboardEventHandler;\n    private isFocusOnTree: IsFocusOnTree;\n    private keyboardSupport: boolean;\n    private openNode: OpenNode;\n    private originalSelectNode: SelectNode;\n\n    constructor({\n        closeNode,\n        getSelectedNode,\n        isFocusOnTree,\n        keyboardSupport,\n        openNode,\n        selectNode,\n    }: KeyHandlerParams) {\n        this.closeNode = closeNode;\n        this.getSelectedNode = getSelectedNode;\n        this.isFocusOnTree = isFocusOnTree;\n        this.keyboardSupport = keyboardSupport;\n        this.openNode = openNode;\n        this.originalSelectNode = selectNode;\n\n        if (keyboardSupport) {\n            document.addEventListener(\"keydown\", this.handleKeyDown);\n        }\n    }\n\n    private canHandleKeyboard(): boolean {\n        return this.keyboardSupport && this.isFocusOnTree();\n    }\n\n    private moveLeft(selectedNode: Node): boolean {\n        if (selectedNode.isFolder() && selectedNode.is_open) {\n            // Left on an open node closes the node\n            this.closeNode(selectedNode);\n            return true;\n        } else {\n            // Left on a closed or end node moves focus to the node's parent\n            return this.selectNode(selectedNode.getParent());\n        }\n    }\n\n    private moveRight(selectedNode: Node): boolean {\n        if (!selectedNode.isFolder()) {\n            return false;\n        } else {\n            // folder node\n            if (selectedNode.is_open) {\n                // Right moves to the first child of an open node\n                return this.selectNode(selectedNode.getNextVisibleNode());\n            } else {\n                // Right expands a closed node\n                this.openNode(selectedNode);\n                return true;\n            }\n        }\n    }\n\n    /* Select the node.\n     * Don't do anything if the node is null.\n     * Result: a different node was selected.\n     */\n    private selectNode(node: Node | null): boolean {\n        if (!node) {\n            return false;\n        } else {\n            this.originalSelectNode(node);\n\n            return true;\n        }\n    }\n\n    public deinit(): void {\n        if (this.handleKeyDownHandler) {\n            document.removeEventListener(\"keydown\", this.handleKeyDownHandler);\n        }\n    }\n\n    public moveDown(selectedNode: Node): boolean {\n        return this.selectNode(selectedNode.getNextVisibleNode());\n    }\n\n    public moveUp(selectedNode: Node): boolean {\n        return this.selectNode(selectedNode.getPreviousVisibleNode());\n    }\n}\n","export interface PositionInfo {\n    originalEvent: Event;\n    pageX: number;\n    pageY: number;\n    target: HTMLElement;\n}\n\nexport const getPositionInfoFromMouseEvent = (e: MouseEvent): PositionInfo => ({\n    originalEvent: e,\n    pageX: e.pageX,\n    pageY: e.pageY,\n    target: e.target as HTMLElement,\n});\n\nexport const getPositionInfoFromTouch = (\n    touch: Touch,\n    e: TouchEvent,\n): PositionInfo => ({\n    originalEvent: e,\n    pageX: touch.pageX,\n    pageY: touch.pageY,\n    target: touch.target as HTMLElement,\n});\n","import { TriggerEvent } from \"./jqtreeMethodTypes\";\nimport {\n    getPositionInfoFromMouseEvent,\n    getPositionInfoFromTouch,\n    PositionInfo,\n} from \"./mouseUtils\";\nimport { Node } from \"./node\";\n\ninterface ClickTarget {\n    node: Node;\n    type: \"button\" | \"label\";\n}\n\ntype GetNode = (element: HTMLElement) => Node | null;\n\ninterface MouseHandlerParams {\n    element: HTMLElement;\n    getMouseDelay: () => number;\n    getNode: GetNode;\n    onClickButton: (node: Node) => void;\n    onClickTitle: (node: Node) => void;\n    onMouseCapture: (positionInfo: PositionInfo) => boolean | null;\n    onMouseDrag: (positionInfo: PositionInfo) => void;\n    onMouseStart: (positionInfo: PositionInfo) => boolean;\n    onMouseStop: (positionInfo: PositionInfo) => void;\n    triggerEvent: TriggerEvent;\n    useContextMenu: boolean;\n}\n\nclass MouseHandler {\n    private element: HTMLElement;\n    private getMouseDelay: () => number;\n    private getNode: GetNode;\n\n    private handleClick = (e: MouseEvent): void => {\n        if (!e.target) {\n            return;\n        }\n\n        const clickTarget = this.getClickTarget(e.target as HTMLElement);\n\n        if (!clickTarget) {\n            return;\n        }\n\n        switch (clickTarget.type) {\n            case \"button\":\n                this.onClickButton(clickTarget.node);\n\n                e.preventDefault();\n                e.stopPropagation();\n                break;\n\n            case \"label\": {\n                const event = this.triggerEvent(\"tree.click\", {\n                    click_event: e,\n                    node: clickTarget.node,\n                });\n\n                if (!event.isDefaultPrevented()) {\n                    this.onClickTitle(clickTarget.node);\n                }\n                break;\n            }\n        }\n    };\n\n    private handleContextmenu = (e: MouseEvent) => {\n        if (!e.target) {\n            return;\n        }\n\n        const div = (e.target as HTMLElement).closest<HTMLElement>(\n            \"ul.jqtree-tree .jqtree-element\",\n        );\n\n        if (div) {\n            const node = this.getNode(div);\n            if (node) {\n                e.preventDefault();\n                e.stopPropagation();\n\n                this.triggerEvent(\"tree.contextmenu\", {\n                    click_event: e,\n                    node,\n                });\n                return false;\n            }\n        }\n\n        return null;\n    };\n\n    private handleDblclick = (e: MouseEvent): void => {\n        if (!e.target) {\n            return;\n        }\n\n        const clickTarget = this.getClickTarget(e.target as HTMLElement);\n\n        if (clickTarget?.type === \"label\") {\n            this.triggerEvent(\"tree.dblclick\", {\n                click_event: e,\n                node: clickTarget.node,\n            });\n        }\n    };\n\n    private isMouseDelayMet: boolean;\n    private isMouseStarted: boolean;\n    private mouseDelayTimer: null | number;\n\n    private mouseDown = (e: MouseEvent): void => {\n        // Left mouse button?\n        if (e.button !== 0) {\n            return;\n        }\n\n        const result = this.handleMouseDown(getPositionInfoFromMouseEvent(e));\n\n        if (result && e.cancelable) {\n            e.preventDefault();\n        }\n    };\n\n    private mouseDownInfo: null | PositionInfo;\n\n    private mouseMove = (e: MouseEvent): void => {\n        this.handleMouseMove(e, getPositionInfoFromMouseEvent(e));\n    };\n\n    private mouseUp = (e: MouseEvent): void => {\n        this.handleMouseUp(getPositionInfoFromMouseEvent(e));\n    };\n\n    private onClickButton: (node: Node) => void;\n    private onClickTitle: (node: Node) => void;\n    private onMouseCapture: (positionInfo: PositionInfo) => boolean | null;\n    private onMouseDrag: (positionInfo: PositionInfo) => void;\n    private onMouseStart: (positionInfo: PositionInfo) => boolean;\n    private onMouseStop: (positionInfo: PositionInfo) => void;\n\n    private touchEnd = (e: TouchEvent): void => {\n        if (e.touches.length > 1) {\n            return;\n        }\n\n        const touch = e.touches[0];\n\n        if (!touch) {\n            return;\n        }\n\n        this.handleMouseUp(getPositionInfoFromTouch(touch, e));\n    };\n\n    private touchMove = (e: TouchEvent): void => {\n        if (e.touches.length > 1) {\n            return;\n        }\n\n        const touch = e.touches[0];\n\n        if (!touch) {\n            return;\n        }\n\n        this.handleMouseMove(e, getPositionInfoFromTouch(touch, e));\n    };\n\n    private touchStart = (e: TouchEvent): void => {\n        if (e.touches.length > 1) {\n            return;\n        }\n\n        const touch = e.touches[0];\n\n        if (!touch) {\n            return;\n        }\n\n        this.handleMouseDown(getPositionInfoFromTouch(touch, e));\n    };\n\n    private triggerEvent: TriggerEvent;\n    private useContextMenu: boolean;\n\n    constructor({\n        element,\n        getMouseDelay,\n        getNode,\n        onClickButton,\n        onClickTitle,\n        onMouseCapture,\n        onMouseDrag,\n        onMouseStart,\n        onMouseStop,\n        triggerEvent,\n        useContextMenu,\n    }: MouseHandlerParams) {\n        this.element = element;\n        this.getMouseDelay = getMouseDelay;\n        this.getNode = getNode;\n        this.onClickButton = onClickButton;\n        this.onClickTitle = onClickTitle;\n        this.onMouseCapture = onMouseCapture;\n        this.onMouseDrag = onMouseDrag;\n        this.onMouseStart = onMouseStart;\n        this.onMouseStop = onMouseStop;\n        this.triggerEvent = triggerEvent;\n        this.useContextMenu = useContextMenu;\n\n        element.addEventListener(\"click\", this.handleClick);\n        element.addEventListener(\"dblclick\", this.handleDblclick);\n        element.addEventListener(\"mousedown\", this.mouseDown, {\n            passive: false,\n        });\n        element.addEventListener(\"touchstart\", this.touchStart, {\n            passive: false,\n        });\n\n        if (useContextMenu) {\n            element.addEventListener(\"contextmenu\", this.handleContextmenu);\n        }\n\n        this.isMouseStarted = false;\n        this.mouseDelayTimer = null;\n        this.isMouseDelayMet = false;\n        this.mouseDownInfo = null;\n    }\n\n    private getClickTarget(element: HTMLElement): ClickTarget | null {\n        const button = element.closest<HTMLElement>(\".jqtree-toggler\");\n\n        if (button) {\n            const node = this.getNode(button);\n\n            if (node) {\n                return {\n                    node,\n                    type: \"button\",\n                };\n            }\n        } else {\n            const jqTreeElement =\n                element.closest<HTMLElement>(\".jqtree-element\");\n\n            if (jqTreeElement) {\n                const node = this.getNode(jqTreeElement);\n                if (node) {\n                    return {\n                        node,\n                        type: \"label\",\n                    };\n                }\n            }\n        }\n\n        return null;\n    }\n\n    private handleMouseDown(positionInfo: PositionInfo): boolean {\n        // We may have missed mouseup (out of window)\n        if (this.isMouseStarted) {\n            this.handleMouseUp(positionInfo);\n        }\n\n        this.mouseDownInfo = positionInfo;\n\n        if (!this.onMouseCapture(positionInfo)) {\n            return false;\n        }\n\n        this.handleStartMouse();\n\n        return true;\n    }\n\n    private handleMouseMove(\n        e: MouseEvent | TouchEvent,\n        positionInfo: PositionInfo,\n    ): void {\n        if (this.isMouseStarted) {\n            this.onMouseDrag(positionInfo);\n\n            if (e.cancelable) {\n                e.preventDefault();\n            }\n            return;\n        }\n\n        if (!this.isMouseDelayMet) {\n            return;\n        }\n\n        if (this.mouseDownInfo) {\n            this.isMouseStarted = this.onMouseStart(this.mouseDownInfo);\n        }\n\n        if (this.isMouseStarted) {\n            this.onMouseDrag(positionInfo);\n\n            if (e.cancelable) {\n                e.preventDefault();\n            }\n        } else {\n            this.handleMouseUp(positionInfo);\n        }\n    }\n\n    private handleMouseUp(positionInfo: PositionInfo): void {\n        this.removeMouseMoveEventListeners();\n        this.isMouseDelayMet = false;\n        this.mouseDownInfo = null;\n\n        if (this.isMouseStarted) {\n            this.isMouseStarted = false;\n            this.onMouseStop(positionInfo);\n        }\n    }\n\n    private handleStartMouse(): void {\n        document.addEventListener(\"mousemove\", this.mouseMove, {\n            passive: false,\n        });\n        document.addEventListener(\"touchmove\", this.touchMove, {\n            passive: false,\n        });\n        document.addEventListener(\"mouseup\", this.mouseUp, { passive: false });\n        document.addEventListener(\"touchend\", this.touchEnd, {\n            passive: false,\n        });\n\n        const mouseDelay = this.getMouseDelay();\n\n        if (mouseDelay) {\n            this.startMouseDelayTimer(mouseDelay);\n        } else {\n            this.isMouseDelayMet = true;\n        }\n    }\n\n    private removeMouseMoveEventListeners() {\n        document.removeEventListener(\"mousemove\", this.mouseMove);\n        document.removeEventListener(\"touchmove\", this.touchMove);\n        document.removeEventListener(\"mouseup\", this.mouseUp);\n        document.removeEventListener(\"touchend\", this.touchEnd);\n    }\n\n    private startMouseDelayTimer(mouseDelay: number): void {\n        if (this.mouseDelayTimer) {\n            clearTimeout(this.mouseDelayTimer);\n        }\n\n        this.mouseDelayTimer = window.setTimeout(() => {\n            if (this.mouseDownInfo) {\n                this.isMouseDelayMet = true;\n            }\n        }, mouseDelay);\n\n        this.isMouseDelayMet = false;\n    }\n\n    public deinit(): void {\n        this.element.removeEventListener(\"click\", this.handleClick);\n        this.element.removeEventListener(\"dblclick\", this.handleDblclick);\n\n        if (this.useContextMenu) {\n            this.element.removeEventListener(\n                \"contextmenu\",\n                this.handleContextmenu,\n            );\n        }\n\n        this.element.removeEventListener(\"mousedown\", this.mouseDown);\n        this.element.removeEventListener(\"touchstart\", this.touchStart);\n        this.removeMouseMoveEventListeners();\n    }\n}\n\nexport default MouseHandler;\n","interface NodeRecordWithChildren extends NodeRecord {\n    children: NodeData[];\n}\n\nexport const isNodeRecordWithChildren = (\n    data: NodeData,\n): data is NodeRecordWithChildren =>\n    typeof data === \"object\" &&\n    \"children\" in data &&\n    data.children instanceof Array;\n","import { isNodeRecordWithChildren } from \"./nodeUtils\";\nimport { Position } from \"./position\";\n\ntype IterateCallback = (node: Node, level: number) => boolean;\n\nexport class Node implements INode {\n    [key: string]: unknown;\n\n    public children: Node[];\n    public element?: HTMLElement;\n    public id?: NodeId;\n    public idMapping: Map<NodeId, Node>;\n    public is_loading: boolean;\n    public is_open: boolean;\n    public isEmptyFolder: boolean;\n    public load_on_demand: boolean;\n    public name: string;\n    public nodeClass?: typeof Node;\n    public parent: Node | null;\n    public tree?: Node;\n\n    constructor(\n        nodeData: NodeData | null = null,\n        isRoot = false,\n        nodeClass = Node,\n    ) {\n        this.name = \"\";\n        this.load_on_demand = false;\n\n        this.isEmptyFolder =\n            nodeData != null &&\n            isNodeRecordWithChildren(nodeData) &&\n            nodeData.children.length === 0;\n\n        this.setData(nodeData);\n\n        this.children = [];\n        this.parent = null;\n\n        if (isRoot) {\n            this.idMapping = new Map<NodeId, Node>();\n            this.tree = this;\n            this.nodeClass = nodeClass;\n        }\n    }\n\n    private createNode(nodeData?: NodeData): Node {\n        const nodeClass = this.getNodeClass();\n        return new nodeClass(nodeData);\n    }\n\n    private doRemoveChild(node: Node): void {\n        this.children.splice(this.getChildIndex(node), 1);\n        this.tree?.removeNodeFromIndex(node);\n    }\n\n    private getNodeClass(): typeof Node {\n        return this.nodeClass ?? this.tree?.nodeClass ?? Node;\n    }\n\n    // Load children data from nodeInfo if it has children\n    private loadChildrenFromData(nodeInfo: NodeData) {\n        if (isNodeRecordWithChildren(nodeInfo) && nodeInfo.children.length) {\n            this.loadFromData(nodeInfo.children);\n        }\n    }\n\n    private setParent(parent: Node): void {\n        this.parent = parent;\n        this.tree = parent.tree;\n        this.tree?.addNodeToIndex(this);\n    }\n\n    public addAfter(nodeInfo: NodeData): Node | null {\n        if (!this.parent) {\n            return null;\n        } else {\n            const node = this.createNode(nodeInfo);\n\n            const childIndex = this.parent.getChildIndex(this);\n            this.parent.addChildAtPosition(node, childIndex + 1);\n\n            node.loadChildrenFromData(nodeInfo);\n            return node;\n        }\n    }\n\n    public addBefore(nodeInfo: NodeData): Node | null {\n        if (!this.parent) {\n            return null;\n        } else {\n            const node = this.createNode(nodeInfo);\n\n            const childIndex = this.parent.getChildIndex(this);\n            this.parent.addChildAtPosition(node, childIndex);\n\n            node.loadChildrenFromData(nodeInfo);\n            return node;\n        }\n    }\n\n    /*\n    Add child.\n\n    tree.addChild(\n        new Node('child1')\n    );\n    */\n    public addChild(node: Node): void {\n        this.children.push(node);\n        node.setParent(this);\n    }\n\n    /*\n    Add child at position. Index starts at 0.\n\n    tree.addChildAtPosition(\n        new Node('abc'),\n        1\n    );\n    */\n    public addChildAtPosition(node: Node, index: number): void {\n        this.children.splice(index, 0, node);\n        node.setParent(this);\n    }\n\n    public addNodeToIndex(node: Node): void {\n        if (node.id != null) {\n            this.idMapping.set(node.id, node);\n        }\n    }\n\n    public addParent(nodeInfo: NodeData): Node | null {\n        if (!this.parent) {\n            return null;\n        } else {\n            const newParent = this.createNode(nodeInfo);\n\n            if (this.tree) {\n                newParent.setParent(this.tree);\n            }\n            const originalParent = this.parent;\n\n            for (const child of originalParent.children) {\n                newParent.addChild(child);\n            }\n\n            originalParent.children = [];\n            originalParent.addChild(newParent);\n            return newParent;\n        }\n    }\n\n    public append(nodeInfo: NodeData): Node {\n        const node = this.createNode(nodeInfo);\n        this.addChild(node);\n\n        node.loadChildrenFromData(nodeInfo);\n        return node;\n    }\n\n    public filter(f: (node: Node) => boolean): Node[] {\n        const result: Node[] = [];\n\n        this.iterate((node: Node) => {\n            if (f(node)) {\n                result.push(node);\n            }\n\n            return true;\n        });\n\n        return result;\n    }\n\n    /*\n    Get child index.\n\n    var index = getChildIndex(node);\n    */\n    public getChildIndex(node: Node): number {\n        return this.children.indexOf(node);\n    }\n\n    /*\n    Get the tree as data.\n    */\n    public getData(includeParent = false): NodeRecord[] {\n        const getDataFromNodes = (nodes: Node[]): Record<string, unknown>[] => {\n            return nodes.map((node) => {\n                const tmpNode: Record<string, unknown> = {};\n\n                for (const k in node) {\n                    if (\n                        [\n                            \"parent\",\n                            \"children\",\n                            \"element\",\n                            \"idMapping\",\n                            \"load_on_demand\",\n                            \"nodeClass\",\n                            \"tree\",\n                            \"isEmptyFolder\",\n                        ].indexOf(k) === -1 &&\n                        Object.prototype.hasOwnProperty.call(node, k)\n                    ) {\n                        const v = node[k];\n                        tmpNode[k] = v;\n                    }\n                }\n\n                if (node.hasChildren()) {\n                    tmpNode.children = getDataFromNodes(node.children);\n                }\n\n                return tmpNode;\n            });\n        };\n\n        if (includeParent) {\n            return getDataFromNodes([this]);\n        } else {\n            return getDataFromNodes(this.children);\n        }\n    }\n\n    public getLastChild(): Node | null {\n        if (!this.hasChildren()) {\n            return null;\n        } else {\n            const lastChild = this.children[this.children.length - 1];\n\n            if (!lastChild) {\n                return null;\n            }\n\n            if (!(lastChild.hasChildren() && lastChild.is_open)) {\n                return lastChild;\n            } else {\n                return lastChild.getLastChild();\n            }\n        }\n    }\n\n    public getLevel(): number {\n        let level = 0;\n        let node: Node = this; // eslint-disable-line @typescript-eslint/no-this-alias\n\n        while (node.parent) {\n            level += 1;\n            node = node.parent;\n        }\n\n        return level;\n    }\n\n    public getNextNode(includeChildren = true): Node | null {\n        if (includeChildren && this.hasChildren()) {\n            return this.children[0] ?? null;\n        } else if (!this.parent) {\n            return null;\n        } else {\n            const nextSibling = this.getNextSibling();\n\n            if (nextSibling) {\n                return nextSibling;\n            } else {\n                return this.parent.getNextNode(false);\n            }\n        }\n    }\n\n    public getNextSibling(): Node | null {\n        if (!this.parent) {\n            return null;\n        } else {\n            const nextIndex = this.parent.getChildIndex(this) + 1;\n            if (nextIndex < this.parent.children.length) {\n                return this.parent.children[nextIndex] ?? null;\n            } else {\n                return null;\n            }\n        }\n    }\n\n    public getNextVisibleNode(): Node | null {\n        if (this.hasChildren() && this.is_open) {\n            // First child\n            return this.children[0] ?? null;\n        } else {\n            if (!this.parent) {\n                return null;\n            } else {\n                const nextSibling = this.getNextSibling();\n                if (nextSibling) {\n                    // Next sibling\n                    return nextSibling;\n                } else {\n                    // Next node of parent\n                    return this.parent.getNextNode(false);\n                }\n            }\n        }\n    }\n\n    public getNodeByCallback(callback: (node: Node) => boolean): Node | null {\n        let result: Node | null = null;\n\n        this.iterate((node: Node) => {\n            if (result) {\n                return false;\n            } else if (callback(node)) {\n                result = node;\n                return false;\n            } else {\n                return true;\n            }\n        });\n\n        return result;\n    }\n\n    public getNodeById(nodeId: NodeId): Node | null {\n        return this.idMapping.get(nodeId) ?? null;\n    }\n\n    public getNodeByName(name: string): Node | null {\n        return this.getNodeByCallback((node: Node) => node.name === name);\n    }\n\n    public getNodeByNameMustExist(name: string): Node {\n        const node = this.getNodeByCallback((n: Node) => n.name === name);\n\n        if (!node) {\n            throw new Error(`Node with name ${name} not found`);\n        }\n\n        return node;\n    }\n\n    public getNodesByProperty(key: string, value: unknown): Node[] {\n        return this.filter((node: Node) => node[key] === value);\n    }\n\n    public getParent(): Node | null {\n        // Return parent except if it is the root node\n        if (!this.parent) {\n            return null;\n        } else if (!this.parent.parent) {\n            // Root node -> null\n            return null;\n        } else {\n            return this.parent;\n        }\n    }\n\n    public getPreviousNode(): Node | null {\n        if (!this.parent) {\n            return null;\n        } else {\n            const previousSibling = this.getPreviousSibling();\n\n            if (!previousSibling) {\n                return this.getParent();\n            } else if (previousSibling.hasChildren()) {\n                return previousSibling.getLastChild();\n            } else {\n                return previousSibling;\n            }\n        }\n    }\n\n    public getPreviousSibling(): Node | null {\n        if (!this.parent) {\n            return null;\n        } else {\n            const previousIndex = this.parent.getChildIndex(this) - 1;\n            if (previousIndex >= 0) {\n                return this.parent.children[previousIndex] ?? null;\n            } else {\n                return null;\n            }\n        }\n    }\n\n    public getPreviousVisibleNode(): Node | null {\n        if (!this.parent) {\n            return null;\n        } else {\n            const previousSibling = this.getPreviousSibling();\n\n            if (!previousSibling) {\n                return this.getParent();\n            } else if (\n                !previousSibling.hasChildren() ||\n                !previousSibling.is_open\n            ) {\n                // Previous sibling\n                return previousSibling;\n            } else {\n                // Last child of previous sibling\n                return previousSibling.getLastChild();\n            }\n        }\n    }\n\n    /*\n    Does the tree have children?\n\n    if (tree.hasChildren()) {\n        //\n    }\n    */\n    public hasChildren(): boolean {\n        return this.children.length !== 0;\n    }\n\n    // Init Node from data without making it the root of the tree\n    public initFromData(data: NodeData): void {\n        const addNode = (nodeData: NodeData): void => {\n            this.setData(nodeData);\n\n            if (\n                isNodeRecordWithChildren(nodeData) &&\n                nodeData.children.length\n            ) {\n                addChildren(nodeData.children);\n            }\n        };\n\n        const addChildren = (childrenData: NodeData[]): void => {\n            for (const child of childrenData) {\n                const node = this.createNode();\n                node.initFromData(child);\n                this.addChild(node);\n            }\n        };\n\n        addNode(data);\n    }\n\n    public isFolder(): boolean {\n        return this.hasChildren() || this.load_on_demand;\n    }\n\n    public isParentOf(node: Node): boolean {\n        let parent = node.parent;\n\n        while (parent) {\n            if (parent === this) {\n                return true;\n            }\n\n            parent = parent.parent;\n        }\n\n        return false;\n    }\n\n    /*\n    Iterate over all the nodes in the tree.\n\n    Calls callback with (node, level).\n\n    The callback must return true to continue the iteration on current node.\n\n    tree.iterate(\n        function(node, level) {\n           console.log(node.name);\n\n           // stop iteration after level 2\n           return (level <= 2);\n        }\n    );\n\n    */\n    public iterate(callback: IterateCallback): void {\n        const _iterate = (node: Node, level: number): void => {\n            for (const child of node.children) {\n                const result = callback(child, level);\n\n                if (result && child.hasChildren()) {\n                    _iterate(child, level + 1);\n                }\n            }\n        };\n\n        _iterate(this, 0);\n    }\n\n    /*\n    Create tree from data.\n\n    Structure of data is:\n    [\n        {\n            name: 'node1',\n            children: [\n                { name: 'child1' },\n                { name: 'child2' }\n            ]\n        },\n        {\n            name: 'node2'\n        }\n    ]\n    */\n    public loadFromData(data: NodeData[]): this {\n        this.removeChildren();\n\n        for (const childData of data) {\n            const node = this.createNode(childData);\n            this.addChild(node);\n\n            if (isNodeRecordWithChildren(childData)) {\n                node.loadFromData(childData.children);\n            }\n        }\n\n        return this;\n    }\n\n    /*\n    Move node relative to another node.\n\n    Argument position: Position.BEFORE, Position.AFTER or Position.Inside\n\n    // move node1 after node2\n    tree.moveNode(node1, node2, Position.AFTER);\n    */\n    public moveNode(\n        movedNode: Node,\n        targetNode: Node,\n        position: Position,\n    ): boolean {\n        if (!movedNode.parent || movedNode.isParentOf(targetNode)) {\n            // - Node is parent of target node\n            // - Or, parent is empty\n            return false;\n        } else {\n            movedNode.parent.doRemoveChild(movedNode);\n\n            switch (position) {\n                case Position.After: {\n                    if (targetNode.parent) {\n                        targetNode.parent.addChildAtPosition(\n                            movedNode,\n                            targetNode.parent.getChildIndex(targetNode) + 1,\n                        );\n                        return true;\n                    }\n                    return false;\n                }\n\n                case Position.Before: {\n                    if (targetNode.parent) {\n                        targetNode.parent.addChildAtPosition(\n                            movedNode,\n                            targetNode.parent.getChildIndex(targetNode),\n                        );\n                        return true;\n                    }\n                    return false;\n                }\n\n                case Position.Inside: {\n                    // move inside as first child\n                    targetNode.addChildAtPosition(movedNode, 0);\n                    return true;\n                }\n\n                default:\n                    return false;\n            }\n        }\n    }\n\n    public prepend(nodeInfo: NodeData): Node {\n        const node = this.createNode(nodeInfo);\n        this.addChildAtPosition(node, 0);\n\n        node.loadChildrenFromData(nodeInfo);\n        return node;\n    }\n\n    public remove(): void {\n        if (this.parent) {\n            this.parent.removeChild(this);\n            this.parent = null;\n        }\n    }\n\n    /*\n    Remove child. This also removes the children of the node.\n\n    tree.removeChild(tree.children[0]);\n    */\n    public removeChild(node: Node): void {\n        // remove children from the index\n        node.removeChildren();\n\n        this.doRemoveChild(node);\n    }\n\n    public removeChildren(): void {\n        this.iterate((child: Node) => {\n            this.tree?.removeNodeFromIndex(child);\n            return true;\n        });\n\n        this.children = [];\n    }\n\n    public removeNodeFromIndex(node: Node): void {\n        if (node.id != null) {\n            this.idMapping.delete(node.id);\n        }\n    }\n\n    /*\n    Set the data of this node.\n\n    setData(string): set the name of the node\n    setData(object): set attributes of the node\n\n    Examples:\n        setData('node1')\n\n        setData({ name: 'node1', id: 1});\n\n        setData({ name: 'node2', id: 2, color: 'green'});\n\n    * This is an internal function; it is not in the docs\n    * Does not remove existing node values\n    */\n    public setData(o: NodeData | null): void {\n        if (!o) {\n            return;\n        } else if (typeof o === \"string\") {\n            this.name = o;\n        } else if (typeof o === \"object\") {\n            for (const key in o) {\n                if (Object.prototype.hasOwnProperty.call(o, key)) {\n                    const value = o[key];\n\n                    if (key === \"label\" || key === \"name\") {\n                        // You can use the 'label' key instead of 'name'; this is a legacy feature\n                        if (typeof value === \"string\") {\n                            this.name = value;\n                        }\n                    } else if (key !== \"children\" && key !== \"parent\") {\n                        // You can't update the children or the parent using this function\n                        this[key] = value;\n                    }\n                }\n            }\n        }\n    }\n}\n","import { DropHint } from \"../dragAndDropHandler/types\";\n\nclass BorderDropHint implements DropHint {\n    private hint?: HTMLElement;\n\n    constructor(element: HTMLElement, scrollLeft: number) {\n        const div = element.querySelector(\":scope > .jqtree-element\");\n\n        if (!div) {\n            this.hint = undefined;\n            return;\n        }\n\n        const width = Math.max(element.offsetWidth + scrollLeft - 4, 0);\n        const height = Math.max(element.clientHeight - 4, 0);\n\n        const hint = document.createElement(\"span\");\n        hint.className = \"jqtree-border\";\n        hint.style.width = `${width}px`;\n        hint.style.height = `${height}px`;\n\n        this.hint = hint;\n\n        div.append(this.hint);\n    }\n\n    public remove(): void {\n        this.hint?.remove();\n    }\n}\n\nexport default BorderDropHint;\n","import { DropHint } from \"../dragAndDropHandler/types\";\n\nclass GhostDropHint implements DropHint {\n    private element: HTMLElement;\n    private ghost: HTMLElement;\n\n    constructor(element: HTMLElement) {\n        this.element = element;\n        this.ghost = this.createGhostElement();\n\n        this.element.after(this.ghost);\n        this.ghost.classList.add(\"jqtree-inside\");\n    }\n\n    private createGhostElement() {\n        const ghost = document.createElement(\"li\");\n        ghost.className = \"jqtree_common jqtree-ghost\";\n\n        const circleSpan = document.createElement(\"span\");\n        circleSpan.className = \"jqtree_common jqtree-circle\";\n        ghost.append(circleSpan);\n\n        const lineSpan = document.createElement(\"span\");\n        lineSpan.className = \"jqtree_common jqtree-line\";\n        ghost.append(lineSpan);\n\n        return ghost;\n    }\n\n    public remove(): void {\n        this.ghost.remove();\n    }\n}\n\nexport default GhostDropHint;\n","import { DropHint } from \"../dragAndDropHandler/types\";\nimport { GetScrollLeft } from \"../jqtreeMethodTypes\";\nimport { Node } from \"../node\";\nimport { Position } from \"../position\";\nimport BorderDropHint from \"./borderDropHint\";\nimport GhostDropHint from \"./ghostDropHint\";\n\nexport interface NodeElementParams {\n    $treeElement: JQuery;\n    getScrollLeft: GetScrollLeft;\n    node: Node;\n    tabIndex?: number;\n}\n\nclass NodeElement {\n    private $treeElement: JQuery;\n    private getScrollLeft: GetScrollLeft;\n    private tabIndex?: number;\n    public element: HTMLElement;\n    public node: Node;\n\n    constructor({\n        $treeElement,\n        getScrollLeft,\n        node,\n        tabIndex,\n    }: NodeElementParams) {\n        this.getScrollLeft = getScrollLeft;\n        this.tabIndex = tabIndex;\n        this.$treeElement = $treeElement;\n\n        this.init(node);\n    }\n\n    protected getTitleSpan(): HTMLSpanElement {\n        return this.element.querySelector(\n            \":scope > .jqtree-element > span.jqtree-title\",\n        ) as HTMLSpanElement;\n    }\n\n    protected getUl(): HTMLUListElement {\n        return this.element.querySelector(\":scope > ul\") as HTMLUListElement;\n    }\n\n    protected mustShowBorderDropHint(position: Position): boolean {\n        return position === Position.Inside;\n    }\n\n    public addDropHint(position: number): DropHint {\n        if (this.mustShowBorderDropHint(position)) {\n            return new BorderDropHint(this.element, this.getScrollLeft());\n        } else {\n            return new GhostDropHint(this.element);\n        }\n    }\n\n    public deselect(): void {\n        this.element.classList.remove(\"jqtree-selected\");\n\n        const titleSpan = this.getTitleSpan();\n        titleSpan.removeAttribute(\"tabindex\");\n        titleSpan.setAttribute(\"aria-selected\", \"false\");\n\n        titleSpan.blur();\n    }\n\n    public init(node: Node): void {\n        this.node = node;\n\n        if (!node.element) {\n            const element = this.$treeElement.get(0);\n\n            if (element) {\n                node.element = element;\n            }\n        }\n\n        if (node.element) {\n            this.element = node.element;\n        }\n    }\n\n    public select(mustSetFocus: boolean): void {\n        this.element.classList.add(\"jqtree-selected\");\n\n        const titleSpan = this.getTitleSpan();\n        const tabIndex = this.tabIndex;\n\n        // Check for null or undefined\n        if (tabIndex != null) {\n            titleSpan.setAttribute(\"tabindex\", tabIndex.toString());\n        }\n\n        titleSpan.setAttribute(\"aria-selected\", \"true\");\n\n        if (mustSetFocus) {\n            titleSpan.focus();\n        }\n    }\n}\n\nexport default NodeElement;\n","import { OnFinishOpenNode, TriggerEvent } from \"../jqtreeMethodTypes\";\nimport { Position } from \"../position\";\nimport NodeElement, { NodeElementParams } from \"./index\";\n\ninterface FolderElementParams extends NodeElementParams {\n    closedIconElement?: HTMLElement | Text;\n    openedIconElement?: HTMLElement | Text;\n    triggerEvent: TriggerEvent;\n}\n\nclass FolderElement extends NodeElement {\n    private closedIconElement?: HTMLElement | Text;\n    private openedIconElement?: HTMLElement | Text;\n    private triggerEvent: TriggerEvent;\n\n    constructor({\n        $treeElement,\n        closedIconElement,\n        getScrollLeft,\n        node,\n        openedIconElement,\n        tabIndex,\n        triggerEvent,\n    }: FolderElementParams) {\n        super({\n            $treeElement,\n            getScrollLeft,\n            node,\n            tabIndex,\n        });\n\n        this.closedIconElement = closedIconElement;\n        this.openedIconElement = openedIconElement;\n        this.triggerEvent = triggerEvent;\n    }\n\n    protected mustShowBorderDropHint(position: Position): boolean {\n        return !this.node.is_open && position === Position.Inside;\n    }\n\n    private getButton(): HTMLLinkElement {\n        return this.element.querySelector(\n            \":scope > .jqtree-element > a.jqtree-toggler\",\n        ) as HTMLLinkElement;\n    }\n\n    public close(\n        slide = true,\n        animationSpeed: JQuery.Duration | undefined = \"fast\",\n    ): void {\n        if (!this.node.is_open) {\n            return;\n        }\n\n        this.node.is_open = false;\n\n        const button = this.getButton();\n        button.classList.add(\"jqtree-closed\");\n        button.innerHTML = \"\";\n\n        const closedIconElement = this.closedIconElement;\n\n        if (closedIconElement) {\n            const icon = closedIconElement.cloneNode(true);\n            button.appendChild(icon);\n        }\n\n        const doClose = (): void => {\n            this.element.classList.add(\"jqtree-closed\");\n\n            const titleSpan = this.getTitleSpan();\n            titleSpan.setAttribute(\"aria-expanded\", \"false\");\n\n            this.triggerEvent(\"tree.close\", {\n                node: this.node,\n            });\n        };\n\n        if (slide) {\n            jQuery(this.getUl()).slideUp(animationSpeed, doClose);\n        } else {\n            jQuery(this.getUl()).hide();\n            doClose();\n        }\n    }\n\n    public open(\n        onFinished: OnFinishOpenNode | undefined,\n        slide = true,\n        animationSpeed: JQuery.Duration = \"fast\",\n    ): void {\n        if (this.node.is_open) {\n            return;\n        }\n\n        this.node.is_open = true;\n\n        const button = this.getButton();\n        button.classList.remove(\"jqtree-closed\");\n        button.innerHTML = \"\";\n\n        const openedIconElement = this.openedIconElement;\n\n        if (openedIconElement) {\n            const icon = openedIconElement.cloneNode(true);\n            button.appendChild(icon);\n        }\n\n        const doOpen = (): void => {\n            this.element.classList.remove(\"jqtree-closed\");\n\n            const titleSpan = this.getTitleSpan();\n            titleSpan.setAttribute(\"aria-expanded\", \"true\");\n\n            if (onFinished) {\n                onFinished(this.node);\n            }\n\n            this.triggerEvent(\"tree.open\", {\n                node: this.node,\n            });\n        };\n\n        if (slide) {\n            jQuery(this.getUl()).slideDown(animationSpeed, doOpen);\n        } else {\n            jQuery(this.getUl()).show();\n            doOpen();\n        }\n    }\n}\n\nexport default FolderElement;\n","import {\n    AddToSelection,\n    GetNodeById,\n    GetSelectedNodes,\n    GetTree,\n    OpenNode,\n    RefreshElements,\n    RemoveFromSelection,\n} from \"./jqtreeMethodTypes\";\nimport { OnGetStateFromStorage, OnSetStateFromStorage } from \"./jqtreeOptions\";\nimport { Node } from \"./node\";\nimport { isInt } from \"./util\";\n\nexport interface SavedState {\n    open_nodes?: NodeId[];\n    selected_node?: NodeId[];\n}\n\ninterface SaveStateHandlerParams {\n    addToSelection: AddToSelection;\n    getNodeById: GetNodeById;\n    getSelectedNodes: GetSelectedNodes;\n    getTree: GetTree;\n    onGetStateFromStorage?: OnGetStateFromStorage;\n    onSetStateFromStorage?: OnSetStateFromStorage;\n    openNode: OpenNode;\n    refreshElements: RefreshElements;\n    removeFromSelection: RemoveFromSelection;\n    saveState: boolean | string;\n}\n\nexport default class SaveStateHandler {\n    private _supportsLocalStorage: boolean | null;\n    private addToSelection: AddToSelection;\n    private getNodeById: GetNodeById;\n    private getSelectedNodes: GetSelectedNodes;\n    private getTree: GetTree;\n    private onGetStateFromStorage?: OnGetStateFromStorage;\n    private onSetStateFromStorage?: OnSetStateFromStorage;\n    private openNode: OpenNode;\n    private refreshElements: RefreshElements;\n    private removeFromSelection: RemoveFromSelection;\n    private saveStateOption: boolean | string;\n\n    constructor({\n        addToSelection,\n        getNodeById,\n        getSelectedNodes,\n        getTree,\n        onGetStateFromStorage,\n        onSetStateFromStorage,\n        openNode,\n        refreshElements,\n        removeFromSelection,\n        saveState,\n    }: SaveStateHandlerParams) {\n        this.addToSelection = addToSelection;\n        this.getNodeById = getNodeById;\n        this.getSelectedNodes = getSelectedNodes;\n        this.getTree = getTree;\n        this.onGetStateFromStorage = onGetStateFromStorage;\n        this.onSetStateFromStorage = onSetStateFromStorage;\n        this.openNode = openNode;\n        this.refreshElements = refreshElements;\n        this.removeFromSelection = removeFromSelection;\n        this.saveStateOption = saveState;\n    }\n\n    private getKeyName(): string {\n        if (typeof this.saveStateOption === \"string\") {\n            return this.saveStateOption;\n        } else {\n            return \"tree\";\n        }\n    }\n\n    private loadFromStorage(): null | string {\n        if (this.onGetStateFromStorage) {\n            return this.onGetStateFromStorage();\n        } else if (this.supportsLocalStorage()) {\n            return localStorage.getItem(this.getKeyName());\n        } else {\n            return null;\n        }\n    }\n\n    private openInitialNodes(nodeIds: NodeId[]): boolean {\n        let mustLoadOnDemand = false;\n\n        for (const nodeId of nodeIds) {\n            const node = this.getNodeById(nodeId);\n\n            if (node) {\n                if (!node.load_on_demand) {\n                    node.is_open = true;\n                } else {\n                    mustLoadOnDemand = true;\n                }\n            }\n        }\n\n        return mustLoadOnDemand;\n    }\n\n    private parseState(jsonData: string): SavedState {\n        const state = JSON.parse(jsonData) as Record<string, unknown>;\n\n        // Check if selected_node is an int (instead of an array)\n        if (state.selected_node && isInt(state.selected_node)) {\n            // Convert to array\n            state.selected_node = [state.selected_node];\n        }\n\n        return state as unknown as SavedState;\n    }\n\n    private resetSelection(): void {\n        const selectedNodes = this.getSelectedNodes();\n\n        selectedNodes.forEach((node) => {\n            this.removeFromSelection(node);\n        });\n    }\n\n    private selectInitialNodes(nodeIds: NodeId[]): boolean {\n        let selectCount = 0;\n\n        for (const nodeId of nodeIds) {\n            const node = this.getNodeById(nodeId);\n\n            if (node) {\n                selectCount += 1;\n\n                this.addToSelection(node);\n            }\n        }\n\n        return selectCount !== 0;\n    }\n\n    private supportsLocalStorage(): boolean {\n        const testSupport = (): boolean => {\n            // Check if it's possible to store an item. Safari does not allow this in private browsing mode.\n            try {\n                const key = \"_storage_test\";\n                sessionStorage.setItem(key, \"value\");\n                sessionStorage.removeItem(key);\n            } catch {\n                return false;\n            }\n\n            return true;\n        };\n\n        if (this._supportsLocalStorage == null) {\n            this._supportsLocalStorage = testSupport();\n        }\n\n        return this._supportsLocalStorage;\n    }\n\n    public getNodeIdToBeSelected(): NodeId | null {\n        const state = this.getStateFromStorage();\n\n        if (state?.selected_node) {\n            return state.selected_node[0] ?? null;\n        } else {\n            return null;\n        }\n    }\n\n    public getState(): SavedState {\n        const getOpenNodeIds = (): NodeId[] => {\n            const openNodes: NodeId[] = [];\n\n            this.getTree()?.iterate((node: Node) => {\n                if (node.is_open && node.id && node.hasChildren()) {\n                    openNodes.push(node.id);\n                }\n                return true;\n            });\n\n            return openNodes;\n        };\n\n        const getSelectedNodeIds = (): NodeId[] => {\n            const selectedNodeIds: NodeId[] = [];\n\n            this.getSelectedNodes().forEach((node) => {\n                if (node.id != null) {\n                    selectedNodeIds.push(node.id);\n                }\n            });\n\n            return selectedNodeIds;\n        };\n\n        return {\n            open_nodes: getOpenNodeIds(),\n            selected_node: getSelectedNodeIds(),\n        };\n    }\n\n    public getStateFromStorage(): null | SavedState {\n        const jsonData = this.loadFromStorage();\n\n        if (jsonData) {\n            return this.parseState(jsonData) as unknown as SavedState;\n        } else {\n            return null;\n        }\n    }\n\n    public saveState(): void {\n        const state = JSON.stringify(this.getState());\n\n        if (this.onSetStateFromStorage) {\n            this.onSetStateFromStorage(state);\n        } else if (this.supportsLocalStorage()) {\n            localStorage.setItem(this.getKeyName(), state);\n        }\n    }\n\n    /*\n    Set initial state\n    Don't handle nodes that are loaded on demand\n\n    result: must load on demand\n    */\n    public setInitialState(state: SavedState): boolean {\n        let mustLoadOnDemand = false;\n\n        if (state.open_nodes) {\n            mustLoadOnDemand = this.openInitialNodes(state.open_nodes);\n        }\n\n        this.resetSelection();\n\n        if (state.selected_node) {\n            this.selectInitialNodes(state.selected_node);\n        }\n\n        return mustLoadOnDemand;\n    }\n\n    public setInitialStateOnDemand(\n        state: SavedState,\n        cbFinished: () => void,\n    ): void {\n        let loadingCount = 0;\n        let nodeIds = state.open_nodes;\n\n        const openNodes = (): void => {\n            if (!nodeIds) {\n                return;\n            }\n\n            const newNodesIds = [];\n\n            for (const nodeId of nodeIds) {\n                const node = this.getNodeById(nodeId);\n\n                if (!node) {\n                    newNodesIds.push(nodeId);\n                } else {\n                    if (!node.is_loading) {\n                        if (node.load_on_demand) {\n                            loadAndOpenNode(node);\n                        } else {\n                            this.openNode(node, false);\n                        }\n                    }\n                }\n            }\n\n            nodeIds = newNodesIds;\n\n            if (state.selected_node) {\n                if (this.selectInitialNodes(state.selected_node)) {\n                    this.refreshElements(null);\n                }\n            }\n\n            if (loadingCount === 0) {\n                cbFinished();\n            }\n        };\n\n        const loadAndOpenNode = (node: Node): void => {\n            loadingCount += 1;\n            this.openNode(node, false, () => {\n                loadingCount -= 1;\n                openNodes();\n            });\n        };\n\n        openNodes();\n    }\n}\n","import type { ScrollParent } from \"./types\";\n\nimport { getElementPosition, getOffsetTop } from '../util'\n\ntype HorizontalScrollDirection = \"left\" | \"right\";\ntype VerticalScrollDirection = \"bottom\" | \"top\";\n\ninterface Params {\n    container: HTMLElement;\n    refreshHitAreas: () => void;\n}\n\nexport default class ContainerScrollParent implements ScrollParent {\n    private container: HTMLElement;\n    private horizontalScrollDirection?: HorizontalScrollDirection;\n    private horizontalScrollTimeout?: number;\n    private refreshHitAreas: () => void;\n    private scrollParentBottom?: number;\n    private scrollParentTop?: number;\n    private verticalScrollDirection?: VerticalScrollDirection;\n    private verticalScrollTimeout?: number;\n\n    constructor({ container, refreshHitAreas }: Params) {\n        this.container = container;\n        this.refreshHitAreas = refreshHitAreas;\n    }\n\n    private getNewHorizontalScrollDirection(\n        pageX: number,\n    ): HorizontalScrollDirection | undefined {\n        const scrollParentOffset = getElementPosition(this.container);\n\n        const rightEdge = scrollParentOffset.left + this.container.clientWidth;\n        const leftEdge = scrollParentOffset.left;\n        const isNearRightEdge = pageX > rightEdge - 20;\n        const isNearLeftEdge = pageX < leftEdge + 20;\n\n        if (isNearRightEdge) {\n            return \"right\";\n        } else if (isNearLeftEdge) {\n            return \"left\";\n        }\n\n        return undefined;\n    }\n\n    private getNewVerticalScrollDirection(\n        pageY: number,\n    ): undefined | VerticalScrollDirection {\n        if (pageY < this.getScrollParentTop()) {\n            return \"top\";\n        }\n\n        if (pageY > this.getScrollParentBottom()) {\n            return \"bottom\";\n        }\n\n        return undefined;\n    }\n\n    private getScrollParentBottom() {\n        if (this.scrollParentBottom == null) {\n            this.scrollParentBottom = this.getScrollParentTop() + this.container.clientHeight;\n        }\n\n        return this.scrollParentBottom;\n    }\n\n    private getScrollParentTop() {\n        if (this.scrollParentTop == null) {\n            this.scrollParentTop = getOffsetTop(this.container)\n        }\n\n        return this.scrollParentTop;\n    }\n\n    private scrollHorizontally() {\n        if (!this.horizontalScrollDirection) {\n            return;\n        }\n\n        const distance = this.horizontalScrollDirection === \"left\" ? -20 : 20;\n\n        this.container.scrollBy({\n            behavior: \"instant\",\n            left: distance,\n            top: 0,\n        });\n\n        this.refreshHitAreas();\n\n        setTimeout(this.scrollHorizontally.bind(this), 40);\n    }\n\n    private scrollVertically() {\n        if (!this.verticalScrollDirection) {\n            return;\n        }\n\n        const distance = this.verticalScrollDirection === \"top\" ? -20 : 20;\n\n        this.container.scrollBy({\n            behavior: \"instant\",\n            left: 0,\n            top: distance,\n        });\n\n        this.refreshHitAreas();\n\n        setTimeout(this.scrollVertically.bind(this), 40);\n    }\n\n    public checkHorizontalScrolling(pageX: number): void {\n        const newHorizontalScrollDirection =\n            this.getNewHorizontalScrollDirection(pageX);\n\n        if (this.horizontalScrollDirection !== newHorizontalScrollDirection) {\n            this.horizontalScrollDirection = newHorizontalScrollDirection;\n\n            if (this.horizontalScrollTimeout != null) {\n                window.clearTimeout(this.verticalScrollTimeout);\n            }\n\n            if (newHorizontalScrollDirection) {\n                this.horizontalScrollTimeout = window.setTimeout(\n                    this.scrollHorizontally.bind(this),\n                    40,\n                );\n            }\n        }\n    }\n\n    public checkVerticalScrolling(pageY: number) {\n        const newVerticalScrollDirection =\n            this.getNewVerticalScrollDirection(pageY);\n\n        if (this.verticalScrollDirection !== newVerticalScrollDirection) {\n            this.verticalScrollDirection = newVerticalScrollDirection;\n\n            if (this.verticalScrollTimeout != null) {\n                window.clearTimeout(this.verticalScrollTimeout);\n                this.verticalScrollTimeout = undefined;\n            }\n\n            if (newVerticalScrollDirection) {\n                this.verticalScrollTimeout = window.setTimeout(\n                    this.scrollVertically.bind(this),\n                    40,\n                );\n            }\n        }\n    }\n\n    public getScrollLeft(): number {\n        return this.container.scrollLeft;\n    }\n\n    public scrollToY(top: number): void {\n        this.container.scrollTop = top;\n    }\n\n    public stopScrolling() {\n        this.horizontalScrollDirection = undefined;\n        this.verticalScrollDirection = undefined;\n        this.scrollParentTop = undefined;\n        this.scrollParentBottom = undefined;\n    }\n}\n","import type { ScrollParent } from \"./types\";\n\nimport { getOffsetTop } from \"../util\";\n\ntype HorizontalScrollDirection = \"left\" | \"right\";\ntype VerticalScrollDirection = \"bottom\" | \"top\";\n\ninterface Params {\n    refreshHitAreas: () => void;\n    treeElement: HTMLElement;\n}\n\nexport default class DocumentScrollParent implements ScrollParent {\n    private documentScrollHeight?: number;\n    private documentScrollWidth?: number;\n    private horizontalScrollDirection?: HorizontalScrollDirection;\n    private horizontalScrollTimeout?: number;\n    private refreshHitAreas: () => void;\n    private treeElement: HTMLElement;\n    private verticalScrollDirection?: VerticalScrollDirection;\n    private verticalScrollTimeout?: number;\n\n    constructor({ refreshHitAreas, treeElement }: Params) {\n        this.refreshHitAreas = refreshHitAreas;\n        this.treeElement = treeElement;\n    }\n\n    private canScrollDown() {\n        const documentElement = document.documentElement;\n\n        return (\n            documentElement.scrollTop + documentElement.clientHeight <\n            this.getDocumentScrollHeight()\n        );\n    }\n\n    private canScrollRight() {\n        const documentElement = document.documentElement;\n\n        return (\n            documentElement.scrollLeft + documentElement.clientWidth <\n            this.getDocumentScrollWidth()\n        );\n    }\n\n    private getDocumentScrollHeight() {\n        // Store the original scroll height because the scroll height can increase when the drag element is moved beyond the scroll height.\n        if (this.documentScrollHeight == null) {\n            this.documentScrollHeight = document.documentElement.scrollHeight;\n        }\n\n        return this.documentScrollHeight;\n    }\n\n    private getDocumentScrollWidth() {\n        // Store the original scroll width because the scroll width can increase when the drag element is moved beyond the scroll width.\n        if (this.documentScrollWidth == null) {\n            this.documentScrollWidth = document.documentElement.scrollWidth;\n        }\n\n        return this.documentScrollWidth;\n    }\n\n    private getNewHorizontalScrollDirection(\n        pageX: number,\n    ): HorizontalScrollDirection | undefined {\n        const scrollLeft = document.documentElement.scrollLeft;\n        const windowWidth = window.innerWidth;\n\n        const isNearRightEdge = pageX > windowWidth - 20;\n        const isNearLeftEdge = pageX - scrollLeft < 20;\n\n        if (isNearRightEdge && this.canScrollRight()) {\n            return \"right\";\n        }\n\n        if (isNearLeftEdge) {\n            return \"left\";\n        }\n\n        return undefined;\n    }\n\n    private getNewVerticalScrollDirection(\n        pageY: number,\n    ): undefined | VerticalScrollDirection {\n        const scrollTop = jQuery(document).scrollTop() ?? 0;\n        const distanceTop = pageY - scrollTop;\n\n        if (distanceTop < 20) {\n            return \"top\";\n        }\n\n        const windowHeight = window.innerHeight;\n\n        if (windowHeight - (pageY - scrollTop) < 20 && this.canScrollDown()) {\n            return \"bottom\";\n        }\n\n        return undefined;\n    }\n\n    private scrollHorizontally() {\n        if (!this.horizontalScrollDirection) {\n            return;\n        }\n\n        const distance = this.horizontalScrollDirection === \"left\" ? -20 : 20;\n        window.scrollBy({ behavior: \"instant\", left: distance, top: 0 });\n\n        this.refreshHitAreas();\n\n        setTimeout(this.scrollHorizontally.bind(this), 40);\n    }\n\n    private scrollVertically() {\n        if (!this.verticalScrollDirection) {\n            return;\n        }\n\n        const distance = this.verticalScrollDirection === \"top\" ? -20 : 20;\n        window.scrollBy({ behavior: \"instant\", left: 0, top: distance });\n\n        this.refreshHitAreas();\n\n        setTimeout(this.scrollVertically.bind(this), 40);\n    }\n\n    public checkHorizontalScrolling(pageX: number): void {\n        const newHorizontalScrollDirection =\n            this.getNewHorizontalScrollDirection(pageX);\n\n        if (this.horizontalScrollDirection !== newHorizontalScrollDirection) {\n            this.horizontalScrollDirection = newHorizontalScrollDirection;\n\n            if (this.horizontalScrollTimeout != null) {\n                window.clearTimeout(this.horizontalScrollTimeout);\n            }\n\n            if (newHorizontalScrollDirection) {\n                this.horizontalScrollTimeout = window.setTimeout(\n                    this.scrollHorizontally.bind(this),\n                    40,\n                );\n            }\n        }\n    }\n\n    public checkVerticalScrolling(pageY: number) {\n        const newVerticalScrollDirection =\n            this.getNewVerticalScrollDirection(pageY);\n\n        if (this.verticalScrollDirection !== newVerticalScrollDirection) {\n            this.verticalScrollDirection = newVerticalScrollDirection;\n\n            if (this.verticalScrollTimeout != null) {\n                window.clearTimeout(this.verticalScrollTimeout);\n                this.verticalScrollTimeout = undefined;\n            }\n\n            if (newVerticalScrollDirection) {\n                this.verticalScrollTimeout = window.setTimeout(\n                    this.scrollVertically.bind(this),\n                    40,\n                );\n            }\n        }\n    }\n\n    public getScrollLeft(): number {\n        return document.documentElement.scrollLeft;\n    }\n\n    public scrollToY(top: number): void {\n        const treeTop = getOffsetTop(this.treeElement);\n\n        document.documentElement.scrollTop = top + treeTop;\n    }\n\n    public stopScrolling() {\n        this.horizontalScrollDirection = undefined;\n        this.verticalScrollDirection = undefined;\n        this.documentScrollHeight = undefined;\n        this.documentScrollWidth = undefined;\n    }\n}\n","import type { ScrollParent } from \"./types\";\n\nimport ContainerScrollParent from \"./containerScrollParent\";\nimport DocumentScrollParent from \"./documentScrollParent\";\n\nconst isOverflow = (overflowValue: string) =>\n    overflowValue === \"auto\" || overflowValue === \"scroll\";\n\nconst hasOverFlow = (element: HTMLElement): boolean => {\n    const style = getComputedStyle(element);\n\n    return isOverflow(style.overflowX) || isOverflow(style.overflowY);\n};\n\nconst getParentWithOverflow = (\n    treeElement: HTMLElement,\n): HTMLElement | null => {\n    if (hasOverFlow(treeElement)) {\n        return treeElement;\n    }\n\n    let parent = treeElement.parentElement;\n\n    while (parent) {\n        if (hasOverFlow(parent)) {\n            return parent;\n        }\n\n        parent = parent.parentElement;\n    }\n\n    return null;\n};\n\nconst createScrollParent = (\n    treeElement: HTMLElement,\n    refreshHitAreas: () => void,\n): ScrollParent => {\n    const container = getParentWithOverflow(treeElement);\n\n    if (container && container.tagName !== \"HTML\") {\n        return new ContainerScrollParent({\n            container,\n            refreshHitAreas,\n        });\n    } else {\n        return new DocumentScrollParent({ refreshHitAreas, treeElement });\n    }\n};\n\nexport default createScrollParent;\n","import { PositionInfo } from \"./mouseUtils\";\nimport createScrollParent from \"./scrollHandler/createScrollParent\";\nimport { ScrollParent } from \"./scrollHandler/types\";\n\ninterface ScrollHandlerParams {\n    refreshHitAreas: () => void;\n    treeElement: HTMLElement;\n}\n\nexport default class ScrollHandler {\n    private refreshHitAreas: () => void;\n    private scrollParent?: ScrollParent;\n    private treeElement: HTMLElement;\n\n    constructor({ refreshHitAreas, treeElement }: ScrollHandlerParams) {\n        this.refreshHitAreas = refreshHitAreas;\n        this.scrollParent = undefined;\n        this.treeElement = treeElement;\n    }\n\n    private checkHorizontalScrolling(positionInfo: PositionInfo): void {\n        this.getScrollParent().checkHorizontalScrolling(positionInfo.pageX);\n    }\n\n    private checkVerticalScrolling(positionInfo: PositionInfo): void {\n        this.getScrollParent().checkVerticalScrolling(positionInfo.pageY);\n    }\n\n    private getScrollParent(): ScrollParent {\n        if (!this.scrollParent) {\n            this.scrollParent = createScrollParent(\n                this.treeElement,\n                this.refreshHitAreas,\n            );\n        }\n\n        return this.scrollParent;\n    }\n\n    public checkScrolling(positionInfo: PositionInfo): void {\n        this.checkVerticalScrolling(positionInfo);\n        this.checkHorizontalScrolling(positionInfo);\n    }\n\n    public getScrollLeft(): number {\n        return this.getScrollParent().getScrollLeft();\n    }\n\n    public scrollToY(top: number): void {\n        this.getScrollParent().scrollToY(top);\n    }\n\n    public stopScrolling() {\n        this.getScrollParent().stopScrolling();\n    }\n}\n","import { GetNodeById } from \"./jqtreeMethodTypes\";\nimport { Node } from \"./node\";\n\ninterface SelectNodeHandlerParameters {\n    getNodeById: GetNodeById;\n}\n\nexport default class SelectNodeHandler {\n    private getNodeById: GetNodeById;\n    private selectedNodes: Set<NodeId>;\n    private selectedSingleNode: Node | null;\n\n    constructor({ getNodeById }: SelectNodeHandlerParameters) {\n        this.getNodeById = getNodeById;\n        this.selectedNodes = new Set<NodeId>();\n        this.clear();\n    }\n\n    public addToSelection(node: Node): void {\n        if (node.id != null) {\n            this.selectedNodes.add(node.id);\n        } else {\n            this.selectedSingleNode = node;\n        }\n    }\n\n    public clear(): void {\n        this.selectedNodes.clear();\n        this.selectedSingleNode = null;\n    }\n\n    public getSelectedNode(): false | Node {\n        const selectedNodes = this.getSelectedNodes();\n\n        if (selectedNodes.length) {\n            return selectedNodes[0] ?? false;\n        } else {\n            return false;\n        }\n    }\n\n    public getSelectedNodes(): Node[] {\n        if (this.selectedSingleNode) {\n            return [this.selectedSingleNode];\n        } else {\n            const selectedNodes: Node[] = [];\n\n            this.selectedNodes.forEach((id) => {\n                const node = this.getNodeById(id);\n                if (node) {\n                    selectedNodes.push(node);\n                }\n            });\n\n            return selectedNodes;\n        }\n    }\n\n    public getSelectedNodesUnder(parent: Node): Node[] {\n        if (this.selectedSingleNode) {\n            if (parent.isParentOf(this.selectedSingleNode)) {\n                return [this.selectedSingleNode];\n            } else {\n                return [];\n            }\n        } else {\n            const selectedNodes = [];\n\n            for (const id in this.selectedNodes) {\n                if (\n                    Object.prototype.hasOwnProperty.call(this.selectedNodes, id)\n                ) {\n                    const node = this.getNodeById(id);\n                    if (node && parent.isParentOf(node)) {\n                        selectedNodes.push(node);\n                    }\n                }\n            }\n\n            return selectedNodes;\n        }\n    }\n\n    public isNodeSelected(node: Node): boolean {\n        if (node.id != null) {\n            return this.selectedNodes.has(node.id);\n        } else if (this.selectedSingleNode) {\n            return this.selectedSingleNode.element === node.element;\n        } else {\n            return false;\n        }\n    }\n\n    public removeFromSelection(node: Node, includeChildren = false): void {\n        if (node.id == null) {\n            if (\n                this.selectedSingleNode &&\n                node.element === this.selectedSingleNode.element\n            ) {\n                this.selectedSingleNode = null;\n            }\n        } else {\n            this.selectedNodes.delete(node.id);\n\n            if (includeChildren) {\n                node.iterate(() => {\n                    if (node.id != null) {\n                        this.selectedNodes.delete(node.id);\n                    }\n                    return true;\n                });\n            }\n        }\n    }\n}\n","const register = (widgetClass: unknown, widgetName: string): void => {\n    const getDataKey = (): string => `simple_widget_${widgetName}`;\n\n    const getWidgetData = (\n        el: HTMLElement,\n        dataKey: string,\n    ): null | SimpleWidget<unknown> => {\n        const widget = jQuery.data(el, dataKey) as unknown;\n\n        if (widget && widget instanceof SimpleWidget) {\n            return widget;\n        } else {\n            return null;\n        }\n    };\n\n    const createWidget = ($el: JQuery, options: unknown): JQuery => {\n        const dataKey = getDataKey();\n\n        for (const el of $el.get()) {\n            const existingWidget = getWidgetData(el, dataKey);\n\n            if (!existingWidget) {\n                const simpleWidgetClass = widgetClass as typeof SimpleWidget;\n                const widget = new simpleWidgetClass(el, options);\n\n                if (!jQuery.data(el, dataKey)) {\n                    jQuery.data(el, dataKey, widget);\n                }\n\n                // Call init after setting data, so we can call methods\n                widget.init();\n            }\n        }\n\n        return $el;\n    };\n\n    const destroyWidget = ($el: JQuery): void => {\n        const dataKey = getDataKey();\n\n        for (const el of $el.get()) {\n            const widget = getWidgetData(el, dataKey);\n\n            if (widget) {\n                widget.destroy();\n            }\n\n            jQuery.removeData(el, dataKey);\n        }\n    };\n\n    const callFunction = (\n        $el: JQuery,\n        functionName: string,\n        args: unknown[],\n    ): unknown => {\n        let result = null;\n\n        for (const el of $el.get()) {\n            const widget = jQuery.data(el, getDataKey()) as unknown;\n\n            if (widget && widget instanceof SimpleWidget) {\n                const simpleWidget = widget as SimpleWidget<unknown>;\n                const widgetFunction = simpleWidget[functionName];\n\n                if (widgetFunction && typeof widgetFunction === \"function\") {\n                    result = widgetFunction.apply(widget, args) as unknown;\n                }\n            }\n        }\n\n        return result;\n    };\n\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    (jQuery.fn as any)[widgetName] = function (\n        this: JQuery,\n        argument1: unknown,\n        ...args: unknown[]\n    ) {\n        if (!argument1) {\n            return createWidget(this, null);\n        } else if (typeof argument1 === \"object\") {\n            const options = argument1 as unknown;\n            return createWidget(this, options);\n        } else if (typeof argument1 === \"string\" && argument1[0] !== \"_\") {\n            const functionName = argument1;\n\n            if (functionName === \"destroy\") {\n                destroyWidget(this);\n                return undefined;\n            } else if (functionName === \"get_widget_class\") {\n                return widgetClass;\n            } else {\n                return callFunction(this, functionName, args);\n            }\n        } else {\n            return undefined;\n        }\n    };\n};\n\nexport default class SimpleWidget<WidgetOptions> {\n    [key: string]: unknown;\n\n    protected static defaults: unknown = {};\n\n    public $el: JQuery;\n\n    public options: WidgetOptions;\n\n    constructor(el: HTMLElement, options: WidgetOptions) {\n        this.$el = jQuery(el);\n\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        const defaults = (this.constructor as any).defaults as WidgetOptions;\n        this.options = { ...defaults, ...options };\n    }\n\n    public static register(widgetClass: unknown, widgetName: string): void {\n        register(widgetClass, widgetName);\n    }\n\n    public deinit(): void {\n        //\n    }\n\n    public destroy(): void {\n        this.deinit();\n    }\n\n    public init(): void {\n        //\n    }\n}\n","const version = \"1.8.5\";\n\nexport default version;\n","import DataLoader, { HandleFinishedLoading } from \"./dataLoader\";\nimport { DragAndDropHandler } from \"./dragAndDropHandler\";\nimport ElementsRenderer from \"./elementsRenderer\";\nimport { OnFinishOpenNode } from \"./jqtreeMethodTypes\";\nimport { JQTreeOptions } from \"./jqtreeOptions\";\nimport KeyHandler from \"./keyHandler\";\nimport MouseHandler from \"./mouseHandler\";\nimport { PositionInfo } from \"./mouseUtils\";\nimport { Node } from \"./node\";\nimport NodeElement from \"./nodeElement\";\nimport FolderElement from \"./nodeElement/folderElement\";\nimport { getPosition } from \"./position\";\nimport SaveStateHandler, { SavedState } from \"./saveStateHandler\";\nimport ScrollHandler from \"./scrollHandler\";\nimport SelectNodeHandler from \"./selectNodeHandler\";\nimport SimpleWidget from \"./simple.widget\";\nimport { getOffsetTop, isFunction } from \"./util\";\nimport __version__ from \"./version\";\n\ninterface SelectNodeOptions {\n    mustSetFocus?: boolean;\n    mustToggle?: boolean;\n}\n\nconst NODE_PARAM_IS_EMPTY = \"Node parameter is empty\";\nconst PARAM_IS_EMPTY = \"Parameter is empty: \";\n\nexport class JqTreeWidget extends SimpleWidget<JQTreeOptions> {\n    protected static defaults: JQTreeOptions = {\n        animationSpeed: \"fast\",\n        autoEscape: true,\n        autoOpen: false, // true / false / int (open n levels starting at 0)\n        buttonLeft: true,\n        // The symbol to use for a closed node - ► BLACK RIGHT-POINTING POINTER\n        // http://www.fileformat.info/info/unicode/char/25ba/index.htm\n        closedIcon: undefined,\n        data: undefined,\n        dataFilter: undefined,\n        dataUrl: undefined,\n        dragAndDrop: false,\n        keyboardSupport: true,\n        nodeClass: Node,\n        onCanMove: undefined, // Can this node be moved?\n        onCanMoveTo: undefined, // Can this node be moved to this position? function(moved_node, target_node, position)\n        onCanSelectNode: undefined,\n        onCreateLi: undefined,\n        onDragMove: undefined,\n        onDragStop: undefined,\n        onGetStateFromStorage: undefined,\n        onIsMoveHandle: undefined,\n        onLoadFailed: undefined,\n        onLoading: undefined,\n        onSetStateFromStorage: undefined,\n        openedIcon: \"&#x25bc;\",\n        openFolderDelay: 500, // The delay for opening a folder during drag and drop; the value is in milliseconds\n        // The symbol to use for an open node - ▼ BLACK DOWN-POINTING TRIANGLE\n        // http://www.fileformat.info/info/unicode/char/25bc/index.htm\n        rtl: undefined, // right-to-left support; true / false (default)\n        saveState: false, // true / false / string (cookie name)\n        selectable: true,\n        showEmptyFolder: false,\n        slide: true, // must display slide animation?\n        startDndDelay: 300, // The delay for starting dnd (in milliseconds)\n        tabIndex: 0,\n        useContextMenu: true,\n    };\n\n    private dataLoader: DataLoader;\n    private dndHandler: DragAndDropHandler;\n    private element: JQuery;\n\n    private isInitialized: boolean;\n    private keyHandler: KeyHandler;\n    private mouseHandler: MouseHandler;\n    private renderer: ElementsRenderer;\n    private saveStateHandler: SaveStateHandler;\n    private scrollHandler: ScrollHandler;\n    private selectNodeHandler: SelectNodeHandler;\n    private tree: Node;\n\n    private connectHandlers() {\n        const {\n            autoEscape,\n            buttonLeft,\n            closedIcon,\n            dataFilter,\n            dragAndDrop,\n            keyboardSupport,\n            onCanMove,\n            onCanMoveTo,\n            onCreateLi,\n            onDragMove,\n            onDragStop,\n            onGetStateFromStorage,\n            onIsMoveHandle,\n            onLoadFailed,\n            onLoading,\n            onSetStateFromStorage,\n            openedIcon,\n            openFolderDelay,\n            rtl,\n            saveState,\n            showEmptyFolder,\n            slide,\n            tabIndex,\n        } = this.options;\n\n        const closeNode = this.closeNode.bind(this);\n        const getNodeElement = this.getNodeElement.bind(this);\n        const getNodeElementForNode = this.getNodeElementForNode.bind(this);\n        const getNodeById = this.getNodeById.bind(this);\n        const getSelectedNode = this.getSelectedNode.bind(this);\n        const getTree = this.getTree.bind(this);\n        const isFocusOnTree = this.isFocusOnTree.bind(this);\n        const loadData = this.loadData.bind(this);\n        const openNode = this.openNodeInternal.bind(this);\n        const refreshElements = this.refreshElements.bind(this);\n        const refreshHitAreas = this.refreshHitAreas.bind(this);\n        const selectNode = this.selectNode.bind(this);\n        const $treeElement = this.element;\n        const treeElement = this.element.get(0) as HTMLElement;\n        const triggerEvent = this.triggerEvent.bind(this);\n\n        const selectNodeHandler = new SelectNodeHandler({\n            getNodeById,\n        });\n\n        const addToSelection =\n            selectNodeHandler.addToSelection.bind(selectNodeHandler);\n        const getSelectedNodes =\n            selectNodeHandler.getSelectedNodes.bind(selectNodeHandler);\n        const isNodeSelected =\n            selectNodeHandler.isNodeSelected.bind(selectNodeHandler);\n        const removeFromSelection =\n            selectNodeHandler.removeFromSelection.bind(selectNodeHandler);\n        const getMouseDelay = () => this.options.startDndDelay ?? 0;\n\n        const dataLoader = new DataLoader({\n            dataFilter,\n            loadData,\n            onLoadFailed,\n            onLoading,\n            treeElement,\n            triggerEvent,\n        });\n\n        const saveStateHandler = new SaveStateHandler({\n            addToSelection,\n            getNodeById,\n            getSelectedNodes,\n            getTree,\n            onGetStateFromStorage,\n            onSetStateFromStorage,\n            openNode,\n            refreshElements,\n            removeFromSelection,\n            saveState,\n        });\n\n        const scrollHandler = new ScrollHandler({\n            refreshHitAreas,\n            treeElement,\n        });\n\n        const getScrollLeft = scrollHandler.getScrollLeft.bind(scrollHandler);\n\n        const dndHandler = new DragAndDropHandler({\n            autoEscape,\n            getNodeElement,\n            getNodeElementForNode,\n            getScrollLeft,\n            getTree,\n            onCanMove,\n            onCanMoveTo,\n            onDragMove,\n            onDragStop,\n            onIsMoveHandle,\n            openFolderDelay,\n            openNode,\n            refreshElements,\n            slide,\n            treeElement,\n            triggerEvent,\n        });\n\n        const keyHandler = new KeyHandler({\n            closeNode,\n            getSelectedNode,\n            isFocusOnTree,\n            keyboardSupport,\n            openNode,\n            selectNode,\n        });\n\n        const renderer = new ElementsRenderer({\n            $element: $treeElement,\n            autoEscape,\n            buttonLeft,\n            closedIcon,\n            dragAndDrop,\n            getTree,\n            isNodeSelected,\n            onCreateLi,\n            openedIcon,\n            rtl,\n            showEmptyFolder,\n            tabIndex,\n        });\n\n        const getNode = this.getNode.bind(this);\n        const onMouseCapture = this.mouseCapture.bind(this);\n        const onMouseDrag = this.mouseDrag.bind(this);\n        const onMouseStart = this.mouseStart.bind(this);\n        const onMouseStop = this.mouseStop.bind(this);\n\n        const mouseHandler = new MouseHandler({\n            element: treeElement,\n            getMouseDelay,\n            getNode,\n            onClickButton: this.toggle.bind(this),\n            onClickTitle: this.doSelectNode.bind(this),\n            onMouseCapture,\n            onMouseDrag,\n            onMouseStart,\n            onMouseStop,\n            triggerEvent,\n            useContextMenu: this.options.useContextMenu,\n        });\n\n        this.dataLoader = dataLoader;\n        this.dndHandler = dndHandler;\n        this.keyHandler = keyHandler;\n        this.mouseHandler = mouseHandler;\n        this.renderer = renderer;\n        this.saveStateHandler = saveStateHandler;\n        this.scrollHandler = scrollHandler;\n        this.selectNodeHandler = selectNodeHandler;\n    }\n\n    private containsElement(element: HTMLElement): boolean {\n        const node = this.getNode(element);\n\n        return node != null && node.tree === this.tree;\n    }\n\n    private createFolderElement(node: Node) {\n        const closedIconElement = this.renderer.closedIconElement;\n        const getScrollLeft = this.scrollHandler.getScrollLeft.bind(\n            this.scrollHandler,\n        );\n        const openedIconElement = this.renderer.openedIconElement;\n        const tabIndex = this.options.tabIndex;\n        const $treeElement = this.element;\n        const triggerEvent = this.triggerEvent.bind(this);\n\n        return new FolderElement({\n            $treeElement,\n            closedIconElement,\n            getScrollLeft,\n            node,\n            openedIconElement,\n            tabIndex,\n            triggerEvent,\n        });\n    }\n\n    private createNodeElement(node: Node) {\n        const getScrollLeft = this.scrollHandler.getScrollLeft.bind(\n            this.scrollHandler,\n        );\n        const tabIndex = this.options.tabIndex;\n        const $treeElement = this.element;\n\n        return new NodeElement({\n            $treeElement,\n            getScrollLeft,\n            node,\n            tabIndex,\n        });\n    }\n\n    private deselectCurrentNode(): void {\n        const node = this.getSelectedNode();\n        if (node) {\n            this.removeFromSelection(node);\n        }\n    }\n\n    private deselectNodes(parentNode: Node): void {\n        const selectedNodesUnderParent =\n            this.selectNodeHandler.getSelectedNodesUnder(parentNode);\n        for (const n of selectedNodesUnderParent) {\n            this.selectNodeHandler.removeFromSelection(n);\n        }\n    }\n\n    private doLoadData(data: NodeData[] | null, parentNode: Node | null): void {\n        if (data) {\n            if (parentNode) {\n                this.deselectNodes(parentNode);\n                this.loadSubtree(data, parentNode);\n            } else {\n                this.initTree(data);\n            }\n\n            if (this.isDragging()) {\n                this.dndHandler.refresh();\n            }\n        }\n\n        this.triggerEvent(\"tree.load_data\", {\n            parent_node: parentNode,\n            tree_data: data,\n        });\n    }\n\n    private doLoadDataFromUrl(\n        urlInfoParam: JQuery.AjaxSettings | null | string,\n        parentNode: Node | null,\n        onFinished: HandleFinishedLoading | null,\n    ): void {\n        const urlInfo = urlInfoParam ?? this.getDataUrlInfo(parentNode);\n\n        this.dataLoader.loadFromUrl(urlInfo, parentNode, onFinished);\n    }\n\n    private doSelectNode(\n        node: Node | null,\n        optionsParam?: SelectNodeOptions,\n    ): void {\n        const saveState = (): void => {\n            if (this.options.saveState) {\n                this.saveStateHandler.saveState();\n            }\n        };\n\n        if (!node) {\n            // Called with empty node -> deselect current node\n            this.deselectCurrentNode();\n            saveState();\n            return;\n        }\n        const defaultOptions = { mustSetFocus: true, mustToggle: true };\n        const selectOptions = { ...defaultOptions, ...(optionsParam ?? {}) };\n\n        const canSelect = (): boolean => {\n            if (this.options.onCanSelectNode) {\n                return (\n                    this.options.selectable &&\n                    this.options.onCanSelectNode(node)\n                );\n            } else {\n                return this.options.selectable;\n            }\n        };\n\n        if (!canSelect()) {\n            return;\n        }\n\n        if (this.selectNodeHandler.isNodeSelected(node)) {\n            if (selectOptions.mustToggle) {\n                this.deselectCurrentNode();\n                this.triggerEvent(\"tree.select\", {\n                    node: null,\n                    previous_node: node,\n                });\n            }\n        } else {\n            const deselectedNode = this.getSelectedNode() || null;\n            this.deselectCurrentNode();\n            this.addToSelection(node, selectOptions.mustSetFocus);\n\n            this.triggerEvent(\"tree.select\", {\n                deselected_node: deselectedNode,\n                node,\n            });\n            this.openParents(node);\n        }\n\n        saveState();\n    }\n\n    private getAutoOpenMaxLevel(): number {\n        if (this.options.autoOpen === true) {\n            return -1;\n        } else if (typeof this.options.autoOpen === \"number\") {\n            return this.options.autoOpen;\n        } else if (typeof this.options.autoOpen === \"string\") {\n            return parseInt(this.options.autoOpen, 10);\n        } else {\n            return 0;\n        }\n    }\n\n    private getDataUrlInfo(node: Node | null): JQuery.AjaxSettings | null {\n        const dataUrl =\n            this.options.dataUrl ?? (this.element.data(\"url\") as null | string);\n\n        const getUrlFromString = (url: string): JQuery.AjaxSettings => {\n            const urlInfo: JQuery.AjaxSettings = { url };\n\n            setUrlInfoData(urlInfo);\n\n            return urlInfo;\n        };\n\n        const setUrlInfoData = (urlInfo: JQuery.AjaxSettings): void => {\n            if (node?.id) {\n                // Load on demand of a subtree; add node parameter\n                const data = { node: node.id };\n                urlInfo.data = data;\n            } else {\n                // Add selected_node parameter\n                const selectedNodeId = this.getNodeIdToBeSelected();\n                if (selectedNodeId) {\n                    const data = { selected_node: selectedNodeId };\n                    urlInfo.data = data;\n                }\n            }\n        };\n\n        if (typeof dataUrl === \"function\") {\n            return dataUrl(node);\n        } else if (typeof dataUrl === \"string\") {\n            return getUrlFromString(dataUrl);\n        } else if (dataUrl && typeof dataUrl === \"object\") {\n            setUrlInfoData(dataUrl);\n            return dataUrl;\n        } else {\n            return null;\n        }\n    }\n\n    private getDefaultClosedIcon(): string {\n        if (this.options.rtl) {\n            // triangle to the left\n            return \"&#x25c0;\";\n        } else {\n            // triangle to the right\n            return \"&#x25ba;\";\n        }\n    }\n\n    private getNode(element: HTMLElement): Node | null {\n        const liElement = element.closest(\"li.jqtree_common\");\n\n        if (liElement) {\n            return jQuery(liElement).data(\"node\") as Node;\n        } else {\n            return null;\n        }\n    }\n\n    private getNodeElement(element: HTMLElement): NodeElement | null {\n        const node = this.getNode(element);\n        if (node) {\n            return this.getNodeElementForNode(node);\n        } else {\n            return null;\n        }\n    }\n\n    private getNodeElementForNode(node: Node): NodeElement {\n        if (node.isFolder()) {\n            return this.createFolderElement(node);\n        } else {\n            return this.createNodeElement(node);\n        }\n    }\n\n    private getNodeIdToBeSelected(): NodeId | null {\n        if (this.options.saveState) {\n            return this.saveStateHandler.getNodeIdToBeSelected();\n        } else {\n            return null;\n        }\n    }\n\n    private getRtlOption(): boolean {\n        if (this.options.rtl != null) {\n            return this.options.rtl;\n        } else {\n            const dataRtl = this.element.data(\"rtl\") as unknown;\n\n            if (\n                dataRtl !== null &&\n                dataRtl !== false &&\n                dataRtl !== undefined\n            ) {\n                return true;\n            } else {\n                return false;\n            }\n        }\n    }\n\n    private initData(): void {\n        if (this.options.data) {\n            this.doLoadData(this.options.data, null);\n        } else {\n            const dataUrl = this.getDataUrlInfo(null);\n\n            if (dataUrl) {\n                this.doLoadDataFromUrl(null, null, null);\n            } else {\n                this.doLoadData([], null);\n            }\n        }\n    }\n\n    private initTree(data: NodeData[]): void {\n        const doInit = (): void => {\n            if (!this.isInitialized) {\n                this.isInitialized = true;\n                this.triggerEvent(\"tree.init\");\n            }\n        };\n\n        this.tree = new this.options.nodeClass(\n            null,\n            true,\n            this.options.nodeClass,\n        );\n\n        this.selectNodeHandler.clear();\n\n        this.tree.loadFromData(data);\n\n        const mustLoadOnDemand = this.setInitialState();\n\n        this.refreshElements(null);\n\n        if (!mustLoadOnDemand) {\n            doInit();\n        } else {\n            // Load data on demand and then init the tree\n            this.setInitialStateOnDemand(doInit);\n        }\n    }\n\n    private isFocusOnTree(): boolean {\n        const activeElement = document.activeElement;\n\n        return Boolean(\n            activeElement &&\n                activeElement.tagName === \"SPAN\" &&\n                this.containsElement(activeElement as HTMLElement),\n        );\n    }\n\n    private isSelectedNodeInSubtree(subtree: Node): boolean {\n        const selectedNode = this.getSelectedNode();\n\n        if (!selectedNode) {\n            return false;\n        } else {\n            return subtree === selectedNode || subtree.isParentOf(selectedNode);\n        }\n    }\n\n    private loadFolderOnDemand(\n        node: Node,\n        slide = true,\n        onFinished?: OnFinishOpenNode,\n    ): void {\n        node.is_loading = true;\n\n        this.doLoadDataFromUrl(null, node, () => {\n            this.openNodeInternal(node, slide, onFinished);\n        });\n    }\n\n    private loadSubtree(data: NodeData[], parentNode: Node): void {\n        parentNode.loadFromData(data);\n\n        parentNode.load_on_demand = false;\n        parentNode.is_loading = false;\n\n        this.refreshElements(parentNode);\n    }\n\n    private mouseCapture(positionInfo: PositionInfo): boolean | null {\n        if (this.options.dragAndDrop) {\n            return this.dndHandler.mouseCapture(positionInfo);\n        } else {\n            return false;\n        }\n    }\n\n    private mouseDrag(positionInfo: PositionInfo): boolean {\n        if (this.options.dragAndDrop) {\n            const result = this.dndHandler.mouseDrag(positionInfo);\n\n            this.scrollHandler.checkScrolling(positionInfo);\n            return result;\n        } else {\n            return false;\n        }\n    }\n\n    private mouseStart(positionInfo: PositionInfo): boolean {\n        if (this.options.dragAndDrop) {\n            return this.dndHandler.mouseStart(positionInfo);\n        } else {\n            return false;\n        }\n    }\n\n    private mouseStop(positionInfo: PositionInfo): boolean {\n        if (this.options.dragAndDrop) {\n            this.scrollHandler.stopScrolling();\n            return this.dndHandler.mouseStop(positionInfo);\n        } else {\n            return false;\n        }\n    }\n\n    private openNodeInternal(\n        node: Node,\n        slide = true,\n        onFinished?: OnFinishOpenNode,\n    ): void {\n        const doOpenNode = (\n            _node: Node,\n            _slide: boolean,\n            _onFinished?: OnFinishOpenNode,\n        ): void => {\n            const folderElement = this.createFolderElement(_node);\n            folderElement.open(\n                _onFinished,\n                _slide,\n                this.options.animationSpeed,\n            );\n        };\n\n        if (node.isFolder() || node.isEmptyFolder) {\n            if (node.load_on_demand) {\n                this.loadFolderOnDemand(node, slide, onFinished);\n            } else {\n                let parent = node.parent;\n\n                while (parent) {\n                    // nb: do not open root element\n                    if (parent.parent) {\n                        doOpenNode(parent, false);\n                    }\n                    parent = parent.parent;\n                }\n\n                doOpenNode(node, slide, onFinished);\n                this.saveState();\n            }\n        }\n    }\n\n    private openParents(node: Node) {\n        const parent = node.parent;\n\n        if (parent?.parent && !parent.is_open) {\n            this.openNode(parent, false);\n        }\n    }\n\n    /*\n    Redraw the tree or part of the tree.\n     from_node: redraw this subtree\n    */\n    private refreshElements(fromNode: Node | null): void {\n        const mustSetFocus = this.isFocusOnTree();\n        const mustSelect = fromNode\n            ? this.isSelectedNodeInSubtree(fromNode)\n            : false;\n\n        this.renderer.render(fromNode);\n\n        if (mustSelect) {\n            this.selectCurrentNode(mustSetFocus);\n        }\n\n        this.triggerEvent(\"tree.refresh\");\n    }\n\n    private saveState(): void {\n        if (this.options.saveState) {\n            this.saveStateHandler.saveState();\n        }\n    }\n\n    private selectCurrentNode(mustSetFocus: boolean): void {\n        const node = this.getSelectedNode();\n        if (node) {\n            const nodeElement = this.getNodeElementForNode(node);\n            nodeElement.select(mustSetFocus);\n        }\n    }\n\n    // Set initial state, either by restoring the state or auto-opening nodes\n    // result: must load nodes on demand?\n    private setInitialState(): boolean {\n        const restoreState = (): [boolean, boolean] => {\n            // result: is state restored, must load on demand?\n            if (!this.options.saveState) {\n                return [false, false];\n            } else {\n                const state = this.saveStateHandler.getStateFromStorage();\n\n                if (!state) {\n                    return [false, false];\n                } else {\n                    const mustLoadOnDemand =\n                        this.saveStateHandler.setInitialState(state);\n\n                    // return true: the state is restored\n                    return [true, mustLoadOnDemand];\n                }\n            }\n        };\n\n        const autoOpenNodes = (): boolean => {\n            // result: must load on demand?\n            if (this.options.autoOpen === false) {\n                return false;\n            }\n\n            const maxLevel = this.getAutoOpenMaxLevel();\n            let mustLoadOnDemand = false;\n\n            this.tree.iterate((node: Node, level: number) => {\n                if (node.load_on_demand) {\n                    mustLoadOnDemand = true;\n                    return false;\n                } else if (!node.hasChildren()) {\n                    return false;\n                } else {\n                    node.is_open = true;\n                    return level !== maxLevel;\n                }\n            });\n\n            return mustLoadOnDemand;\n        };\n\n        let [isRestored, mustLoadOnDemand] = restoreState(); // eslint-disable-line prefer-const\n\n        if (!isRestored) {\n            mustLoadOnDemand = autoOpenNodes();\n        }\n\n        return mustLoadOnDemand;\n    }\n\n    // Set the initial state for nodes that are loaded on demand\n    // Call cb_finished when done\n    private setInitialStateOnDemand(cbFinished: () => void): void {\n        const restoreState = (): boolean => {\n            if (!this.options.saveState) {\n                return false;\n            } else {\n                const state = this.saveStateHandler.getStateFromStorage();\n\n                if (!state) {\n                    return false;\n                } else {\n                    this.saveStateHandler.setInitialStateOnDemand(\n                        state,\n                        cbFinished,\n                    );\n\n                    return true;\n                }\n            }\n        };\n\n        const autoOpenNodes = (): void => {\n            const maxLevel = this.getAutoOpenMaxLevel();\n            let loadingCount = 0;\n\n            const loadAndOpenNode = (node: Node): void => {\n                loadingCount += 1;\n                this.openNodeInternal(node, false, () => {\n                    loadingCount -= 1;\n                    openNodes();\n                });\n            };\n\n            const openNodes = (): void => {\n                this.tree.iterate((node: Node, level: number) => {\n                    if (node.load_on_demand) {\n                        if (!node.is_loading) {\n                            loadAndOpenNode(node);\n                        }\n\n                        return false;\n                    } else {\n                        this.openNodeInternal(node, false);\n\n                        return level !== maxLevel;\n                    }\n                });\n\n                if (loadingCount === 0) {\n                    cbFinished();\n                }\n            };\n\n            openNodes();\n        };\n\n        if (!restoreState()) {\n            autoOpenNodes();\n        }\n    }\n\n    private triggerEvent(\n        eventName: string,\n        values?: Record<string, unknown>,\n    ): JQuery.Event {\n        const event = jQuery.Event(eventName, values);\n        this.element.trigger(event);\n        return event;\n    }\n\n    public addNodeAfter(\n        newNodeInfo: NodeData,\n        existingNode: Node,\n    ): Node | null {\n        const newNode = existingNode.addAfter(newNodeInfo);\n\n        if (newNode) {\n            this.refreshElements(existingNode.parent);\n        }\n\n        return newNode;\n    }\n\n    public addNodeBefore(\n        newNodeInfo: NodeData,\n        existingNode?: Node,\n    ): Node | null {\n        if (!existingNode) {\n            throw Error(PARAM_IS_EMPTY + \"existingNode\");\n        }\n\n        const newNode = existingNode.addBefore(newNodeInfo);\n\n        if (newNode) {\n            this.refreshElements(existingNode.parent);\n        }\n\n        return newNode;\n    }\n\n    public addParentNode(\n        newNodeInfo: NodeData,\n        existingNode?: Node,\n    ): Node | null {\n        if (!existingNode) {\n            throw Error(PARAM_IS_EMPTY + \"existingNode\");\n        }\n\n        const newNode = existingNode.addParent(newNodeInfo);\n\n        if (newNode) {\n            this.refreshElements(newNode.parent);\n        }\n\n        return newNode;\n    }\n\n    public addToSelection(node?: Node, mustSetFocus?: boolean): JQuery {\n        if (!node) {\n            throw Error(NODE_PARAM_IS_EMPTY);\n        }\n\n        this.selectNodeHandler.addToSelection(node);\n        this.openParents(node);\n\n        this.getNodeElementForNode(node).select(mustSetFocus ?? true);\n\n        this.saveState();\n\n        return this.element;\n    }\n\n    public appendNode(newNodeInfo: NodeData, parentNodeParam?: Node): Node {\n        const parentNode = parentNodeParam ?? this.tree;\n\n        const node = parentNode.append(newNodeInfo);\n\n        this.refreshElements(parentNode);\n\n        return node;\n    }\n\n    public closeNode(node?: Node, slideParam?: boolean | null): JQuery {\n        if (!node) {\n            throw Error(NODE_PARAM_IS_EMPTY);\n        }\n\n        const slide = slideParam ?? this.options.slide;\n\n        if (node.isFolder() || node.isEmptyFolder) {\n            this.createFolderElement(node).close(\n                slide,\n                this.options.animationSpeed,\n            );\n\n            this.saveState();\n        }\n\n        return this.element;\n    }\n\n    public deinit(): void {\n        this.element.empty();\n        this.element.off();\n\n        this.keyHandler.deinit();\n        this.mouseHandler.deinit();\n\n        this.tree = new Node({}, true);\n\n        super.deinit();\n    }\n\n    public getNodeByCallback(callback: (node: Node) => boolean): Node | null {\n        return this.tree.getNodeByCallback(callback);\n    }\n\n    public getNodeByHtmlElement(\n        inputElement: HTMLElement | JQuery,\n    ): Node | null {\n        const element =\n            inputElement instanceof HTMLElement\n                ? inputElement\n                : inputElement[0];\n\n        if (!element) {\n            return null;\n        }\n\n        return this.getNode(element);\n    }\n\n    public getNodeById(nodeId: NodeId): Node | null {\n        return this.tree.getNodeById(nodeId);\n    }\n\n    public getNodeByName(name: string): Node | null {\n        return this.tree.getNodeByName(name);\n    }\n\n    public getNodeByNameMustExist(name: string): Node {\n        return this.tree.getNodeByNameMustExist(name);\n    }\n\n    public getNodesByProperty(key: string, value: unknown): Node[] {\n        return this.tree.getNodesByProperty(key, value);\n    }\n\n    public getSelectedNode(): false | Node {\n        return this.selectNodeHandler.getSelectedNode();\n    }\n\n    public getSelectedNodes(): Node[] {\n        return this.selectNodeHandler.getSelectedNodes();\n    }\n\n    public getState(): null | SavedState {\n        return this.saveStateHandler.getState();\n    }\n\n    public getStateFromStorage(): null | SavedState {\n        return this.saveStateHandler.getStateFromStorage();\n    }\n\n    public getTree(): Node {\n        return this.tree;\n    }\n\n    public getVersion(): string {\n        return __version__;\n    }\n\n    public init(): void {\n        super.init();\n\n        this.element = this.$el;\n        this.isInitialized = false;\n\n        this.options.rtl = this.getRtlOption();\n\n        if (this.options.closedIcon == null) {\n            this.options.closedIcon = this.getDefaultClosedIcon();\n        }\n\n        this.connectHandlers();\n\n        this.initData();\n    }\n\n    public isDragging(): boolean {\n        return this.dndHandler.isDragging;\n    }\n\n    public isNodeSelected(node?: Node): boolean {\n        if (!node) {\n            throw Error(NODE_PARAM_IS_EMPTY);\n        }\n\n        return this.selectNodeHandler.isNodeSelected(node);\n    }\n\n    public loadData(data: NodeData[], parentNode: Node | null): JQuery {\n        this.doLoadData(data, parentNode);\n        return this.element;\n    }\n\n    /*\n    signatures:\n    - loadDataFromUrl(url, parent_node=null, on_finished=null)\n        loadDataFromUrl('/my_data');\n        loadDataFromUrl('/my_data', node1);\n        loadDataFromUrl('/my_data', node1, function() { console.log('finished'); });\n        loadDataFromUrl('/my_data', null, function() { console.log('finished'); });\n\n    - loadDataFromUrl(parent_node=null, on_finished=null)\n        loadDataFromUrl();\n        loadDataFromUrl(node1);\n        loadDataFromUrl(null, function() { console.log('finished'); });\n        loadDataFromUrl(node1, function() { console.log('finished'); });\n    */\n    public loadDataFromUrl(\n        param1: Node | null | string,\n        param2?: HandleFinishedLoading | Node | null,\n        param3?: HandleFinishedLoading,\n    ): JQuery {\n        if (typeof param1 === \"string\") {\n            // first parameter is url\n            this.doLoadDataFromUrl(\n                param1,\n                param2 as Node | null,\n                param3 ?? null,\n            );\n        } else {\n            // first parameter is not url\n            this.doLoadDataFromUrl(\n                null,\n                param1,\n                param2 as HandleFinishedLoading | null,\n            );\n        }\n\n        return this.element;\n    }\n\n    public moveDown(): JQuery {\n        const selectedNode = this.getSelectedNode();\n        if (selectedNode) {\n            this.keyHandler.moveDown(selectedNode);\n        }\n\n        return this.element;\n    }\n\n    public moveNode(node?: Node, targetNode?: Node, position?: string): JQuery {\n        if (!node) {\n            throw Error(NODE_PARAM_IS_EMPTY);\n        }\n\n        if (!targetNode) {\n            throw Error(PARAM_IS_EMPTY + \"targetNode\");\n        }\n\n        if (!position) {\n            throw Error(PARAM_IS_EMPTY + \"position\");\n        }\n\n        const positionIndex = getPosition(position);\n\n        if (positionIndex !== undefined) {\n            this.tree.moveNode(node, targetNode, positionIndex);\n            this.refreshElements(null);\n        }\n\n        return this.element;\n    }\n\n    public moveUp(): JQuery {\n        const selectedNode = this.getSelectedNode();\n        if (selectedNode) {\n            this.keyHandler.moveUp(selectedNode);\n        }\n\n        return this.element;\n    }\n\n    public openNode(\n        node?: Node,\n        param1?: boolean | OnFinishOpenNode,\n        param2?: OnFinishOpenNode,\n    ): JQuery {\n        if (!node) {\n            throw Error(NODE_PARAM_IS_EMPTY);\n        }\n\n        const parseParams = (): [boolean, OnFinishOpenNode | undefined] => {\n            let onFinished: null | OnFinishOpenNode;\n            let slide: boolean | null;\n\n            if (isFunction(param1)) {\n                onFinished = param1 as OnFinishOpenNode;\n                slide = null;\n            } else {\n                slide = param1 as boolean;\n                onFinished = param2 as OnFinishOpenNode;\n            }\n\n            if (slide == null) {\n                slide = this.options.slide;\n            }\n\n            return [slide, onFinished];\n        };\n\n        const [slide, onFinished] = parseParams();\n\n        this.openNodeInternal(node, slide, onFinished);\n        return this.element;\n    }\n\n    public prependNode(newNodeInfo: NodeData, parentNodeParam?: Node): Node {\n        const parentNode = parentNodeParam ?? this.tree;\n\n        const node = parentNode.prepend(newNodeInfo);\n\n        this.refreshElements(parentNode);\n\n        return node;\n    }\n\n    public refresh(): JQuery {\n        this.refreshElements(null);\n        return this.element;\n    }\n\n    public refreshHitAreas(): JQuery {\n        this.dndHandler.refresh();\n        return this.element;\n    }\n\n    public reload(onFinished: HandleFinishedLoading | null): JQuery {\n        this.doLoadDataFromUrl(null, null, onFinished);\n        return this.element;\n    }\n\n    public removeFromSelection(node?: Node): JQuery {\n        if (!node) {\n            throw Error(NODE_PARAM_IS_EMPTY);\n        }\n\n        this.selectNodeHandler.removeFromSelection(node);\n\n        this.getNodeElementForNode(node).deselect();\n        this.saveState();\n\n        return this.element;\n    }\n\n    public removeNode(node?: Node): JQuery {\n        if (!node) {\n            throw Error(NODE_PARAM_IS_EMPTY);\n        }\n\n        if (!node.parent) {\n            throw Error(\"Node has no parent\");\n        }\n\n        this.selectNodeHandler.removeFromSelection(node, true); // including children\n\n        const parent = node.parent;\n        node.remove();\n        this.refreshElements(parent);\n\n        return this.element;\n    }\n\n    public scrollToNode(node?: Node): JQuery {\n        if (!node) {\n            throw Error(NODE_PARAM_IS_EMPTY);\n        }\n\n        if (!node.element) {\n            return this.element;\n        }\n\n        const top =\n            getOffsetTop(node.element) -\n            getOffsetTop(this.$el.get(0) as HTMLElement);\n\n        this.scrollHandler.scrollToY(top);\n\n        return this.element;\n    }\n\n    public selectNode(\n        node: Node | null,\n        optionsParam?: SelectNodeOptions,\n    ): JQuery {\n        this.doSelectNode(node, optionsParam);\n        return this.element;\n    }\n\n    public setOption(option: string, value: unknown): JQuery {\n        (this.options as unknown as Record<string, unknown>)[option] = value;\n        return this.element;\n    }\n\n    public setState(state?: SavedState): JQuery {\n        if (state) {\n            this.saveStateHandler.setInitialState(state);\n            this.refreshElements(null);\n        }\n\n        return this.element;\n    }\n\n    public toggle(node?: Node, slideParam: boolean | null = null): JQuery {\n        if (!node) {\n            throw Error(NODE_PARAM_IS_EMPTY);\n        }\n\n        const slide = slideParam ?? this.options.slide;\n\n        if (node.is_open) {\n            this.closeNode(node, slide);\n        } else {\n            this.openNode(node, slide);\n        }\n\n        return this.element;\n    }\n\n    public toJson(): string {\n        return JSON.stringify(this.tree.getData());\n    }\n\n    public updateNode(node?: Node, data?: NodeData): JQuery {\n        if (!node) {\n            throw Error(NODE_PARAM_IS_EMPTY);\n        }\n\n        if (!data) {\n            return this.element;\n        }\n\n        const idIsChanged =\n            typeof data === \"object\" && data.id && data.id !== node.id;\n\n        if (idIsChanged) {\n            this.tree.removeNodeFromIndex(node);\n        }\n\n        node.setData(data);\n\n        if (idIsChanged) {\n            this.tree.addNodeToIndex(node);\n        }\n\n        if (\n            typeof data === \"object\" &&\n            data.children &&\n            data.children instanceof Array\n        ) {\n            node.removeChildren();\n\n            if (data.children.length) {\n                node.loadFromData(data.children as Node[]);\n            }\n        }\n\n        this.refreshElements(node);\n\n        return this.element;\n    }\n}\n\nSimpleWidget.register(JqTreeWidget, \"tree\");\n"],"names":["DataLoader","constructor","_ref","dataFilter","loadData","onLoadFailed","onLoading","treeElement","triggerEvent","addLoadingClass","element","classList","add","getDomElement","parentNode","notifyLoading","isLoading","node","$el","jQuery","parseData","data","getParsedData","JSON","parse","parsedData","removeLoadingClass","remove","submitRequest","urlInfoInput","handleSuccess","handleError","urlInfo","url","ajaxSettings","cache","dataType","error","method","success","toUpperCase","ajax","loadFromUrl","onFinished","stopLoading","jqXHR","Position","positionNames","after","After","before","Before","inside","Inside","none","None","getPositionName","position","name","Object","prototype","hasOwnProperty","call","getPosition","isInt","n","isFunction","v","getBoolString","value","getOffsetTop","getElementPosition","top","rect","getBoundingClientRect","left","x","window","scrollX","y","scrollY","DragElement","autoEscape","nodeName","offsetX","offsetY","createElement","appendChild","document","textContent","innerHTML","style","move","pageX","pageY","iterateVisibleNodes","tree","handleAfterOpenFolder","handleClosedFolder","handleFirstNode","handleNode","handleOpenFolder","isFirstNode","iterate","nextNode","mustIterateInside","is_open","hasChildren","offsetParent","childrenLength","children","length","forEach","_","i","child","nextChild","generateHitPositions","currentNode","hitPositions","lastTop","addHitPosition","push","height","clientHeight","generateHitAreasForGroup","hitAreas","positionsInGroup","bottom","positionCount","Math","min","areaHeight","round","areaTop","generateHitAreasFromPositions","treeBottom","previousTop","group","generateHitAreas","DragAndDropHandler","getNodeElement","getNodeElementForNode","getScrollLeft","getTree","onCanMove","onCanMoveTo","onDragMove","onDragStop","onIsMoveHandle","openNode","refreshElements","slide","hoveredArea","isDragging","currentItem","canMoveToArea","area","positionName","clear","dragElement","findHoveredArea","dimensions","getTreeDimensions","right","low","high","mid","treePosition","clientWidth","moveItem","positionInfo","movedNode","targetNode","previousParent","parent","doMove","moveNode","event","move_info","do_move","moved_node","original_event","originalEvent","previous_parent","target_node","isDefaultPrevented","mustCaptureElement","mustOpenFolderTimer","isFolder","removeDropHint","previousGhost","removeHitAreas","removeHover","startOpenFolderTimer","folder","openFolder","refresh","updateDropHint","stopOpenFolderTimer","openFolderDelay","openFolderTimer","setTimeout","clearTimeout","nodeElement","addDropHint","mouseCapture","target","mouseDrag","mouseStart","mouseStop","ElementsRenderer","$element","buttonLeft","closedIcon","dragAndDrop","isNodeSelected","onCreateLi","openedIcon","rtl","showEmptyFolder","tabIndex","openedIconElement","createButtonElement","closedIconElement","attachNodeData","li","div","createTextNode","nodeType","createDomElements","isRootNode","level","ul","createUl","createLi","createFolderLi","isSelected","buttonClasses","getButtonClasses","folderClasses","getFolderClasses","iconElement","className","setAttribute","buttonLink","cloneNode","titleSpan","createTitleSpan","Boolean","mustShowFolder","isEmptyFolder","createNodeLi","liClasses","classString","join","classes","undefined","setTreeItemAriaAttributes","role","is_loading","render","fromNode","renderFromNode","renderFromRoot","$previousLi","getLevel","empty","KeyHandler","handleKeyDown","e","canHandleKeyboard","isKeyHandled","selectedNode","getSelectedNode","key","moveDown","moveUp","moveRight","moveLeft","preventDefault","closeNode","isFocusOnTree","keyboardSupport","selectNode","originalSelectNode","addEventListener","getParent","getNextVisibleNode","deinit","handleKeyDownHandler","removeEventListener","getPreviousVisibleNode","getPositionInfoFromMouseEvent","getPositionInfoFromTouch","touch","MouseHandler","handleClick","clickTarget","getClickTarget","type","onClickButton","stopPropagation","click_event","onClickTitle","handleContextmenu","closest","getNode","handleDblclick","mouseDown","button","result","handleMouseDown","cancelable","mouseMove","handleMouseMove","mouseUp","handleMouseUp","touchEnd","touches","touchMove","touchStart","getMouseDelay","onMouseCapture","onMouseDrag","onMouseStart","onMouseStop","useContextMenu","passive","isMouseStarted","mouseDelayTimer","isMouseDelayMet","mouseDownInfo","jqTreeElement","handleStartMouse","removeMouseMoveEventListeners","mouseDelay","startMouseDelayTimer","isNodeRecordWithChildren","Array","Node","nodeData","arguments","isRoot","nodeClass","load_on_demand","setData","idMapping","Map","createNode","getNodeClass","doRemoveChild","splice","getChildIndex","removeNodeFromIndex","loadChildrenFromData","nodeInfo","loadFromData","setParent","addNodeToIndex","addAfter","childIndex","addChildAtPosition","addBefore","addChild","index","id","set","addParent","newParent","originalParent","append","filter","f","indexOf","getData","includeParent","getDataFromNodes","nodes","map","tmpNode","k","getLastChild","lastChild","getNextNode","includeChildren","nextSibling","getNextSibling","nextIndex","getNodeByCallback","callback","getNodeById","nodeId","get","getNodeByName","getNodeByNameMustExist","Error","getNodesByProperty","getPreviousNode","previousSibling","getPreviousSibling","previousIndex","initFromData","addNode","addChildren","childrenData","isParentOf","_iterate","removeChildren","childData","prepend","removeChild","delete","o","BorderDropHint","scrollLeft","querySelector","hint","width","max","offsetWidth","GhostDropHint","ghost","createGhostElement","circleSpan","lineSpan","NodeElement","$treeElement","init","getTitleSpan","getUl","mustShowBorderDropHint","deselect","removeAttribute","blur","select","mustSetFocus","toString","focus","FolderElement","getButton","close","animationSpeed","icon","doClose","slideUp","hide","open","doOpen","slideDown","show","SaveStateHandler","addToSelection","getSelectedNodes","onGetStateFromStorage","onSetStateFromStorage","removeFromSelection","saveState","saveStateOption","getKeyName","loadFromStorage","supportsLocalStorage","localStorage","getItem","openInitialNodes","nodeIds","mustLoadOnDemand","parseState","jsonData","state","selected_node","resetSelection","selectedNodes","selectInitialNodes","selectCount","testSupport","sessionStorage","setItem","removeItem","_supportsLocalStorage","getNodeIdToBeSelected","getStateFromStorage","getState","getOpenNodeIds","openNodes","getSelectedNodeIds","selectedNodeIds","open_nodes","stringify","setInitialState","setInitialStateOnDemand","cbFinished","loadingCount","newNodesIds","loadAndOpenNode","ContainerScrollParent","container","refreshHitAreas","getNewHorizontalScrollDirection","scrollParentOffset","rightEdge","leftEdge","isNearRightEdge","isNearLeftEdge","getNewVerticalScrollDirection","getScrollParentTop","getScrollParentBottom","scrollParentBottom","scrollParentTop","scrollHorizontally","horizontalScrollDirection","distance","scrollBy","behavior","bind","scrollVertically","verticalScrollDirection","checkHorizontalScrolling","newHorizontalScrollDirection","horizontalScrollTimeout","verticalScrollTimeout","checkVerticalScrolling","newVerticalScrollDirection","scrollToY","scrollTop","stopScrolling","DocumentScrollParent","canScrollDown","documentElement","getDocumentScrollHeight","canScrollRight","getDocumentScrollWidth","documentScrollHeight","scrollHeight","documentScrollWidth","scrollWidth","windowWidth","innerWidth","distanceTop","windowHeight","innerHeight","treeTop","isOverflow","overflowValue","hasOverFlow","getComputedStyle","overflowX","overflowY","getParentWithOverflow","parentElement","createScrollParent","tagName","ScrollHandler","scrollParent","getScrollParent","checkScrolling","SelectNodeHandler","Set","selectedSingleNode","getSelectedNodesUnder","has","register","widgetClass","widgetName","getDataKey","getWidgetData","el","dataKey","widget","SimpleWidget","createWidget","options","existingWidget","simpleWidgetClass","destroyWidget","destroy","removeData","callFunction","functionName","args","simpleWidget","widgetFunction","apply","fn","argument1","_len","_key","defaults","version","NODE_PARAM_IS_EMPTY","PARAM_IS_EMPTY","JqTreeWidget","autoOpen","dataUrl","onCanSelectNode","selectable","startDndDelay","connectHandlers","openNodeInternal","selectNodeHandler","dataLoader","saveStateHandler","scrollHandler","dndHandler","keyHandler","renderer","mouseHandler","toggle","doSelectNode","containsElement","createFolderElement","createNodeElement","deselectCurrentNode","deselectNodes","selectedNodesUnderParent","doLoadData","loadSubtree","initTree","parent_node","tree_data","doLoadDataFromUrl","urlInfoParam","getDataUrlInfo","optionsParam","defaultOptions","mustToggle","selectOptions","canSelect","previous_node","deselectedNode","deselected_node","openParents","getAutoOpenMaxLevel","parseInt","getUrlFromString","setUrlInfoData","selectedNodeId","getDefaultClosedIcon","liElement","getRtlOption","dataRtl","initData","doInit","isInitialized","activeElement","isSelectedNodeInSubtree","subtree","loadFolderOnDemand","doOpenNode","_node","_slide","_onFinished","folderElement","mustSelect","selectCurrentNode","restoreState","autoOpenNodes","maxLevel","isRestored","eventName","values","Event","trigger","addNodeAfter","newNodeInfo","existingNode","newNode","addNodeBefore","addParentNode","appendNode","parentNodeParam","slideParam","off","getNodeByHtmlElement","inputElement","HTMLElement","getVersion","__version__","loadDataFromUrl","param1","param2","param3","positionIndex","parseParams","prependNode","reload","removeNode","scrollToNode","setOption","option","setState","toJson","updateNode","idIsChanged"],"mappings":"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"}