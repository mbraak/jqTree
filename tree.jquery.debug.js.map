{"version":3,"file":"tree.jquery.debug.js","sources":["node_modules/tslib/tslib.es6.js","src/version.ts","src/node.ts","src/dragAndDropHandler.ts","src/util.ts","src/elementsRenderer.ts","src/dataLoader.ts","src/keyHandler.ts","src/simple.widget.ts","src/mouse.widget.ts","src/saveStateHandler.ts","src/scrollHandler.ts","src/selectNodeHandler.ts","src/nodeElement.ts","src/tree.jquery.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","const version = \"1.5.2\";\n\nexport default version;\n","export type NodeId = number | string;\n\nexport type DefaultRecord = Record<string, unknown>;\nexport type NodeData = string | DefaultRecord;\n\nexport enum Position {\n    Before = 1,\n    After,\n    Inside,\n    None,\n}\n\nconst positionNames: Record<string, Position> = {\n    before: Position.Before,\n    after: Position.After,\n    inside: Position.Inside,\n    none: Position.None,\n};\n\ntype IterateCallback = (node: Node, level: number) => boolean;\n\nexport const getPositionName = (position: Position): string => {\n    for (const name in positionNames) {\n        if (Object.prototype.hasOwnProperty.call(positionNames, name)) {\n            if (positionNames[name] === position) {\n                return name;\n            }\n        }\n    }\n\n    return \"\";\n};\n\nexport const getPosition = (name: string): Position | undefined =>\n    positionNames[name];\n\nexport class Node implements INode {\n    public id?: NodeId;\n    public name: string;\n    public children: Node[];\n    public parent: Node | null;\n    public idMapping: Record<NodeId, Node>;\n    public tree?: Node;\n    public nodeClass?: typeof Node;\n    public load_on_demand: boolean;\n    public is_open: boolean;\n    public element: HTMLElement;\n    public is_loading: boolean;\n    public isEmptyFolder: boolean;\n\n    [key: string]: unknown;\n\n    constructor(o: NodeData | null = null, isRoot = false, nodeClass = Node) {\n        this.name = \"\";\n        this.isEmptyFolder = false;\n        this.load_on_demand = false;\n\n        this.setData(o);\n\n        this.children = [];\n        this.parent = null;\n\n        if (isRoot) {\n            this.idMapping = {};\n            this.tree = this;\n            this.nodeClass = nodeClass;\n        }\n    }\n\n    /*\n    Set the data of this node.\n\n    setData(string): set the name of the node\n    setdata(object): set attributes of the node\n\n    Examples:\n        setdata('node1')\n\n        setData({ name: 'node1', id: 1});\n\n        setData({ name: 'node2', id: 2, color: 'green'});\n\n    * This is an internal function; it is not in the docs\n    * Does not remove existing node values\n    */\n    public setData(o: NodeData | null): void {\n        if (!o) {\n            return;\n        } else if (typeof o === \"string\") {\n            this.name = o;\n        } else if (typeof o === \"object\") {\n            for (const key in o) {\n                if (Object.prototype.hasOwnProperty.call(o, key)) {\n                    const value = o[key];\n\n                    if (key === \"label\" || key === \"name\") {\n                        // You can use the 'label' key instead of 'name'; this is a legacy feature\n                        if (typeof value === \"string\") {\n                            this.name = value;\n                        }\n                    } else if (key !== \"children\" && key !== \"parent\") {\n                        // You can't update the children or the parent using this function\n                        this[key] = value;\n                    }\n                }\n            }\n        }\n    }\n\n    /*\n    Create tree from data.\n\n    Structure of data is:\n    [\n        {\n            name: 'node1',\n            children: [\n                { name: 'child1' },\n                { name: 'child2' }\n            ]\n        },\n        {\n            name: 'node2'\n        }\n    ]\n    */\n    public loadFromData(data: NodeData[]): Node {\n        this.removeChildren();\n\n        for (const o of data) {\n            const node = this.createNode(o);\n            this.addChild(node);\n\n            if (\n                typeof o === \"object\" &&\n                o[\"children\"] &&\n                o[\"children\"] instanceof Array\n            ) {\n                if (o[\"children\"].length === 0) {\n                    node.isEmptyFolder = true;\n                } else {\n                    node.loadFromData(o[\"children\"]);\n                }\n            }\n        }\n\n        return this;\n    }\n\n    /*\n    Add child.\n\n    tree.addChild(\n        new Node('child1')\n    );\n    */\n    public addChild(node: Node): void {\n        this.children.push(node);\n        node.setParent(this);\n    }\n\n    /*\n    Add child at position. Index starts at 0.\n\n    tree.addChildAtPosition(\n        new Node('abc'),\n        1\n    );\n    */\n    public addChildAtPosition(node: Node, index: number): void {\n        this.children.splice(index, 0, node);\n        node.setParent(this);\n    }\n\n    /*\n    Remove child. This also removes the children of the node.\n\n    tree.removeChild(tree.children[0]);\n    */\n    public removeChild(node: Node): void {\n        // remove children from the index\n        node.removeChildren();\n\n        this.doRemoveChild(node);\n    }\n\n    /*\n    Get child index.\n\n    var index = getChildIndex(node);\n    */\n    public getChildIndex(node: Node): number {\n        return this.children.indexOf(node);\n    }\n\n    /*\n    Does the tree have children?\n\n    if (tree.hasChildren()) {\n        //\n    }\n    */\n    public hasChildren(): boolean {\n        return this.children.length !== 0;\n    }\n\n    public isFolder(): boolean {\n        return this.hasChildren() || this.load_on_demand;\n    }\n\n    /*\n    Iterate over all the nodes in the tree.\n\n    Calls callback with (node, level).\n\n    The callback must return true to continue the iteration on current node.\n\n    tree.iterate(\n        function(node, level) {\n           console.log(node.name);\n\n           // stop iteration after level 2\n           return (level <= 2);\n        }\n    );\n\n    */\n    public iterate(callback: IterateCallback): void {\n        const _iterate = (node: Node, level: number): void => {\n            if (node.children) {\n                for (const child of node.children) {\n                    const result = callback(child, level);\n\n                    if (result && child.hasChildren()) {\n                        _iterate(child, level + 1);\n                    }\n                }\n            }\n        };\n\n        _iterate(this, 0);\n    }\n\n    /*\n    Move node relative to another node.\n\n    Argument position: Position.BEFORE, Position.AFTER or Position.Inside\n\n    // move node1 after node2\n    tree.moveNode(node1, node2, Position.AFTER);\n    */\n    public moveNode(\n        movedNode: Node,\n        targetNode: Node,\n        position: Position\n    ): boolean {\n        if (!movedNode.parent || movedNode.isParentOf(targetNode)) {\n            // - Node is parent of target node\n            // - Or, parent is empty\n            return false;\n        } else {\n            movedNode.parent.doRemoveChild(movedNode);\n\n            switch (position) {\n                case Position.After: {\n                    if (targetNode.parent) {\n                        targetNode.parent.addChildAtPosition(\n                            movedNode,\n                            targetNode.parent.getChildIndex(targetNode) + 1\n                        );\n                        return true;\n                    }\n                    return false;\n                }\n\n                case Position.Before: {\n                    if (targetNode.parent) {\n                        targetNode.parent.addChildAtPosition(\n                            movedNode,\n                            targetNode.parent.getChildIndex(targetNode)\n                        );\n                        return true;\n                    }\n                    return false;\n                }\n\n                case Position.Inside: {\n                    // move inside as first child\n                    targetNode.addChildAtPosition(movedNode, 0);\n                    return true;\n                }\n\n                default:\n                    return false;\n            }\n        }\n    }\n\n    /*\n    Get the tree as data.\n    */\n    public getData(includeParent = false): DefaultRecord[] {\n        const getDataFromNodes = (nodes: Node[]): Record<string, unknown>[] => {\n            return nodes.map((node) => {\n                const tmpNode: Record<string, unknown> = {};\n\n                for (const k in node) {\n                    if (\n                        [\n                            \"parent\",\n                            \"children\",\n                            \"element\",\n                            \"idMapping\",\n                            \"load_on_demand\",\n                            \"nodeClass\",\n                            \"tree\",\n                            \"isEmptyFolder\",\n                        ].indexOf(k) === -1 &&\n                        Object.prototype.hasOwnProperty.call(node, k)\n                    ) {\n                        const v = node[k];\n                        tmpNode[k] = v;\n                    }\n                }\n\n                if (node.hasChildren()) {\n                    tmpNode[\"children\"] = getDataFromNodes(node.children);\n                }\n\n                return tmpNode;\n            });\n        };\n\n        if (includeParent) {\n            return getDataFromNodes([this]);\n        } else {\n            return getDataFromNodes(this.children);\n        }\n    }\n\n    public getNodeByName(name: string): Node | null {\n        return this.getNodeByCallback((node: Node) => node.name === name);\n    }\n\n    public getNodeByNameMustExist(name: string): Node {\n        const node = this.getNodeByCallback((n: Node) => n.name === name);\n\n        if (!node) {\n            throw `Node with name ${name} not found`;\n        }\n\n        return node;\n    }\n\n    public getNodeByCallback(callback: (node: Node) => boolean): Node | null {\n        let result: Node | null = null;\n\n        this.iterate((node: Node) => {\n            if (result) {\n                return false;\n            } else if (callback(node)) {\n                result = node;\n                return false;\n            } else {\n                return true;\n            }\n        });\n\n        return result;\n    }\n\n    public addAfter(nodeInfo: NodeData): Node | null {\n        if (!this.parent) {\n            return null;\n        } else {\n            const node = this.createNode(nodeInfo);\n\n            const childIndex = this.parent.getChildIndex(this);\n            this.parent.addChildAtPosition(node, childIndex + 1);\n\n            if (\n                typeof nodeInfo === \"object\" &&\n                nodeInfo[\"children\"] &&\n                nodeInfo[\"children\"] instanceof Array &&\n                nodeInfo[\"children\"].length\n            ) {\n                node.loadFromData(nodeInfo[\"children\"]);\n            }\n\n            return node;\n        }\n    }\n\n    public addBefore(nodeInfo: NodeData): Node | null {\n        if (!this.parent) {\n            return null;\n        } else {\n            const node = this.createNode(nodeInfo);\n\n            const childIndex = this.parent.getChildIndex(this);\n            this.parent.addChildAtPosition(node, childIndex);\n\n            if (\n                typeof nodeInfo === \"object\" &&\n                nodeInfo[\"children\"] &&\n                nodeInfo[\"children\"] instanceof Array &&\n                nodeInfo[\"children\"].length\n            ) {\n                node.loadFromData(nodeInfo[\"children\"]);\n            }\n\n            return node;\n        }\n    }\n\n    public addParent(nodeInfo: NodeData): Node | null {\n        if (!this.parent) {\n            return null;\n        } else {\n            const newParent = this.createNode(nodeInfo);\n\n            if (this.tree) {\n                newParent.setParent(this.tree);\n            }\n            const originalParent = this.parent;\n\n            for (const child of originalParent.children) {\n                newParent.addChild(child);\n            }\n\n            originalParent.children = [];\n            originalParent.addChild(newParent);\n            return newParent;\n        }\n    }\n\n    public remove(): void {\n        if (this.parent) {\n            this.parent.removeChild(this);\n            this.parent = null;\n        }\n    }\n\n    public append(nodeInfo: NodeData): Node {\n        const node = this.createNode(nodeInfo);\n        this.addChild(node);\n\n        if (\n            typeof nodeInfo === \"object\" &&\n            nodeInfo[\"children\"] &&\n            nodeInfo[\"children\"] instanceof Array &&\n            nodeInfo[\"children\"].length\n        ) {\n            node.loadFromData(nodeInfo[\"children\"]);\n        }\n\n        return node;\n    }\n\n    public prepend(nodeInfo: NodeData): Node {\n        const node = this.createNode(nodeInfo);\n        this.addChildAtPosition(node, 0);\n\n        if (\n            typeof nodeInfo === \"object\" &&\n            nodeInfo[\"children\"] &&\n            nodeInfo[\"children\"] instanceof Array &&\n            nodeInfo[\"children\"].length\n        ) {\n            node.loadFromData(nodeInfo[\"children\"]);\n        }\n\n        return node;\n    }\n\n    public isParentOf(node: Node): boolean {\n        let parent = node.parent;\n\n        while (parent) {\n            if (parent === this) {\n                return true;\n            }\n\n            parent = parent.parent;\n        }\n\n        return false;\n    }\n\n    public getLevel(): number {\n        let level = 0;\n        let node: Node = this; // eslint-disable-line @typescript-eslint/no-this-alias\n\n        while (node.parent) {\n            level += 1;\n            node = node.parent;\n        }\n\n        return level;\n    }\n\n    public getNodeById(nodeId: NodeId): Node | null {\n        return this.idMapping[nodeId] || null;\n    }\n\n    public addNodeToIndex(node: Node): void {\n        if (node.id != null) {\n            this.idMapping[node.id] = node;\n        }\n    }\n\n    public removeNodeFromIndex(node: Node): void {\n        if (node.id != null) {\n            delete this.idMapping[node.id];\n        }\n    }\n\n    public removeChildren(): void {\n        this.iterate((child: Node) => {\n            this.tree?.removeNodeFromIndex(child);\n            return true;\n        });\n\n        this.children = [];\n    }\n\n    public getPreviousSibling(): Node | null {\n        if (!this.parent) {\n            return null;\n        } else {\n            const previousIndex = this.parent.getChildIndex(this) - 1;\n            if (previousIndex >= 0) {\n                return this.parent.children[previousIndex];\n            } else {\n                return null;\n            }\n        }\n    }\n\n    public getNextSibling(): Node | null {\n        if (!this.parent) {\n            return null;\n        } else {\n            const nextIndex = this.parent.getChildIndex(this) + 1;\n            if (nextIndex < this.parent.children.length) {\n                return this.parent.children[nextIndex];\n            } else {\n                return null;\n            }\n        }\n    }\n\n    public getNodesByProperty(key: string, value: unknown): Node[] {\n        return this.filter((node: Node) => node[key] === value);\n    }\n\n    public filter(f: (node: Node) => boolean): Node[] {\n        const result: Node[] = [];\n\n        this.iterate((node: Node) => {\n            if (f(node)) {\n                result.push(node);\n            }\n\n            return true;\n        });\n\n        return result;\n    }\n\n    public getNextNode(includeChildren = true): Node | null {\n        if (includeChildren && this.hasChildren() && this.is_open) {\n            // First child\n            return this.children[0];\n        } else {\n            if (!this.parent) {\n                return null;\n            } else {\n                const nextSibling = this.getNextSibling();\n                if (nextSibling) {\n                    // Next sibling\n                    return nextSibling;\n                } else {\n                    // Next node of parent\n                    return this.parent.getNextNode(false);\n                }\n            }\n        }\n    }\n\n    public getPreviousNode(): Node | null {\n        if (!this.parent) {\n            return null;\n        } else {\n            const previousSibling = this.getPreviousSibling();\n            if (previousSibling) {\n                if (\n                    !previousSibling.hasChildren() ||\n                    !previousSibling.is_open\n                ) {\n                    // Previous sibling\n                    return previousSibling;\n                } else {\n                    // Last child of previous sibling\n                    return previousSibling.getLastChild();\n                }\n            } else {\n                return this.getParent();\n            }\n        }\n    }\n\n    public getParent(): Node | null {\n        // Return parent except if it is the root node\n        if (!this.parent) {\n            return null;\n        } else if (!this.parent.parent) {\n            // Root node -> null\n            return null;\n        } else {\n            return this.parent;\n        }\n    }\n\n    public getLastChild(): Node | null {\n        if (!this.hasChildren()) {\n            return null;\n        } else {\n            const lastChild = this.children[this.children.length - 1];\n            if (!(lastChild.hasChildren() && lastChild.is_open)) {\n                return lastChild;\n            } else {\n                return lastChild.getLastChild();\n            }\n        }\n    }\n\n    // Init Node from data without making it the root of the tree\n    public initFromData(data: NodeData): void {\n        const addNode = (nodeData: NodeData): void => {\n            this.setData(nodeData);\n\n            if (\n                typeof nodeData === \"object\" &&\n                nodeData[\"children\"] &&\n                nodeData[\"children\"] instanceof Array &&\n                nodeData[\"children\"].length\n            ) {\n                addChildren(nodeData[\"children\"]);\n            }\n        };\n\n        const addChildren = (childrenData: NodeData[]): void => {\n            for (const child of childrenData) {\n                const node = this.createNode();\n                node.initFromData(child);\n                this.addChild(node);\n            }\n        };\n\n        addNode(data);\n    }\n\n    private setParent(parent: Node): void {\n        this.parent = parent;\n        this.tree = parent.tree;\n        this.tree?.addNodeToIndex(this);\n    }\n\n    private doRemoveChild(node: Node): void {\n        this.children.splice(this.getChildIndex(node), 1);\n        this.tree?.removeNodeFromIndex(node);\n    }\n\n    private getNodeClass(): typeof Node {\n        return this.nodeClass || this?.tree?.nodeClass || Node;\n    }\n\n    private createNode(nodeData?: NodeData): Node {\n        const nodeClass = this.getNodeClass();\n        return new nodeClass(nodeData);\n    }\n}\n","import * as jQueryProxy from \"jquery\";\nimport { getPositionName, Node, Position } from \"./node\";\nimport { DropHint, HitArea, PositionInfo } from \"./types\";\nimport { NodeElement } from \"./nodeElement\";\nimport { JqTreeWidget } from \"./tree.jquery\";\n\n// eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-unsafe-member-access\nconst jQuery: JQueryStatic = (<any>jQueryProxy).default || jQueryProxy;\n\ninterface Dimensions {\n    left: number;\n    top: number;\n    right: number;\n    bottom: number;\n}\n\nexport class DragAndDropHandler {\n    public hitAreas: HitArea[];\n    public isDragging: boolean;\n    public currentItem: NodeElement | null;\n    public hoveredArea: HitArea | null;\n    public positionInfo: PositionInfo | null;\n\n    private treeWidget: JqTreeWidget;\n    private dragElement: DragElement | null;\n    private previousGhost: DropHint | null;\n    private openFolderTimer: number | null;\n\n    constructor(treeWidget: JqTreeWidget) {\n        this.treeWidget = treeWidget;\n\n        this.hoveredArea = null;\n        this.hitAreas = [];\n        this.isDragging = false;\n        this.currentItem = null;\n        this.positionInfo = null;\n    }\n\n    public mouseCapture(positionInfo: PositionInfo): boolean | null {\n        const $element = jQuery(positionInfo.target);\n\n        if (!this.mustCaptureElement($element)) {\n            return null;\n        }\n\n        if (\n            this.treeWidget.options.onIsMoveHandle &&\n            !this.treeWidget.options.onIsMoveHandle($element)\n        ) {\n            return null;\n        }\n\n        let nodeElement = this.treeWidget._getNodeElement($element);\n\n        if (nodeElement && this.treeWidget.options.onCanMove) {\n            if (!this.treeWidget.options.onCanMove(nodeElement.node)) {\n                nodeElement = null;\n            }\n        }\n\n        this.currentItem = nodeElement;\n        return this.currentItem != null;\n    }\n\n    public mouseStart(positionInfo: PositionInfo): boolean {\n        if (\n            !this.currentItem ||\n            positionInfo.pageX === undefined ||\n            positionInfo.pageY === undefined\n        ) {\n            return false;\n        }\n\n        this.refresh();\n\n        const offset = jQuery(positionInfo.target).offset();\n        const left = offset ? offset.left : 0;\n        const top = offset ? offset.top : 0;\n\n        const node = this.currentItem.node;\n\n        this.dragElement = new DragElement(\n            node.name,\n            positionInfo.pageX - left,\n            positionInfo.pageY - top,\n            this.treeWidget.element,\n            this.treeWidget.options.autoEscape ?? true\n        );\n\n        this.isDragging = true;\n        this.positionInfo = positionInfo;\n        this.currentItem.$element.addClass(\"jqtree-moving\");\n        return true;\n    }\n\n    public mouseDrag(positionInfo: PositionInfo): boolean {\n        if (\n            !this.currentItem ||\n            !this.dragElement ||\n            positionInfo.pageX === undefined ||\n            positionInfo.pageY === undefined\n        ) {\n            return false;\n        }\n\n        this.dragElement.move(positionInfo.pageX, positionInfo.pageY);\n        this.positionInfo = positionInfo;\n\n        const area = this.findHoveredArea(\n            positionInfo.pageX,\n            positionInfo.pageY\n        );\n\n        if (area && this.canMoveToArea(area)) {\n            if (!area.node.isFolder()) {\n                this.stopOpenFolderTimer();\n            }\n\n            if (this.hoveredArea !== area) {\n                this.hoveredArea = area;\n\n                // If this is a closed folder, start timer to open it\n                if (this.mustOpenFolderTimer(area)) {\n                    this.startOpenFolderTimer(area.node);\n                } else {\n                    this.stopOpenFolderTimer();\n                }\n\n                this.updateDropHint();\n            }\n        } else {\n            this.removeDropHint();\n            this.stopOpenFolderTimer();\n            this.hoveredArea = area;\n        }\n\n        if (!area) {\n            if (this.treeWidget.options.onDragMove) {\n                this.treeWidget.options.onDragMove(\n                    this.currentItem.node,\n                    positionInfo.originalEvent\n                );\n            }\n        }\n\n        return true;\n    }\n\n    public mouseStop(positionInfo: PositionInfo): boolean {\n        this.moveItem(positionInfo);\n        this.clear();\n        this.removeHover();\n        this.removeDropHint();\n        this.removeHitAreas();\n\n        const currentItem = this.currentItem;\n\n        if (this.currentItem) {\n            this.currentItem.$element.removeClass(\"jqtree-moving\");\n            this.currentItem = null;\n        }\n\n        this.isDragging = false;\n        this.positionInfo = null;\n\n        if (!this.hoveredArea && currentItem) {\n            if (this.treeWidget.options.onDragStop) {\n                this.treeWidget.options.onDragStop(\n                    currentItem.node,\n                    positionInfo.originalEvent\n                );\n            }\n        }\n\n        return false;\n    }\n\n    public refresh(): void {\n        this.removeHitAreas();\n\n        if (this.currentItem) {\n            this.generateHitAreas();\n\n            this.currentItem = this.treeWidget._getNodeElementForNode(\n                this.currentItem.node\n            );\n\n            if (this.isDragging) {\n                this.currentItem.$element.addClass(\"jqtree-moving\");\n            }\n        }\n    }\n\n    private generateHitAreas(): void {\n        if (!this.currentItem) {\n            this.hitAreas = [];\n        } else {\n            const hitAreasGenerator = new HitAreasGenerator(\n                this.treeWidget.tree,\n                this.currentItem.node,\n                this.getTreeDimensions().bottom\n            );\n            this.hitAreas = hitAreasGenerator.generate();\n        }\n    }\n\n    private mustCaptureElement($element: JQuery<HTMLElement>): boolean {\n        return !$element.is(\"input,select,textarea\");\n    }\n\n    private canMoveToArea(area: HitArea): boolean {\n        if (!this.treeWidget.options.onCanMoveTo) {\n            return true;\n        }\n\n        if (!this.currentItem) {\n            return false;\n        }\n\n        const positionName = getPositionName(area.position);\n\n        return this.treeWidget.options.onCanMoveTo(\n            this.currentItem.node,\n            area.node,\n            positionName\n        );\n    }\n\n    private removeHitAreas(): void {\n        this.hitAreas = [];\n    }\n\n    private clear(): void {\n        if (this.dragElement) {\n            this.dragElement.remove();\n            this.dragElement = null;\n        }\n    }\n\n    private removeDropHint(): void {\n        if (this.previousGhost) {\n            this.previousGhost.remove();\n        }\n    }\n\n    private removeHover(): void {\n        this.hoveredArea = null;\n    }\n\n    private findHoveredArea(x: number, y: number): HitArea | null {\n        const dimensions = this.getTreeDimensions();\n\n        if (\n            x < dimensions.left ||\n            y < dimensions.top ||\n            x > dimensions.right ||\n            y > dimensions.bottom\n        ) {\n            return null;\n        }\n\n        let low = 0;\n        let high = this.hitAreas.length;\n        while (low < high) {\n            const mid = (low + high) >> 1;\n            const area = this.hitAreas[mid];\n\n            if (y < area.top) {\n                high = mid;\n            } else if (y > area.bottom) {\n                low = mid + 1;\n            } else {\n                return area;\n            }\n        }\n\n        return null;\n    }\n\n    private mustOpenFolderTimer(area: HitArea): boolean {\n        const node = area.node;\n\n        return (\n            node.isFolder() &&\n            !node.is_open &&\n            area.position === Position.Inside\n        );\n    }\n\n    private updateDropHint(): void {\n        if (!this.hoveredArea) {\n            return;\n        }\n\n        // remove previous drop hint\n        this.removeDropHint();\n\n        // add new drop hint\n        const nodeElement = this.treeWidget._getNodeElementForNode(\n            this.hoveredArea.node\n        );\n        this.previousGhost = nodeElement.addDropHint(this.hoveredArea.position);\n    }\n\n    private startOpenFolderTimer(folder: Node): void {\n        const openFolder = (): void => {\n            this.treeWidget._openNode(\n                folder,\n                this.treeWidget.options.slide,\n                () => {\n                    this.refresh();\n                    this.updateDropHint();\n                }\n            );\n        };\n\n        this.stopOpenFolderTimer();\n\n        this.openFolderTimer = window.setTimeout(\n            openFolder,\n            this.treeWidget.options.openFolderDelay\n        );\n    }\n\n    private stopOpenFolderTimer(): void {\n        if (this.openFolderTimer) {\n            clearTimeout(this.openFolderTimer);\n            this.openFolderTimer = null;\n        }\n    }\n\n    private moveItem(positionInfo: PositionInfo): void {\n        if (\n            this.currentItem &&\n            this.hoveredArea &&\n            this.hoveredArea.position !== Position.None &&\n            this.canMoveToArea(this.hoveredArea)\n        ) {\n            const movedNode = this.currentItem.node;\n            const targetNode = this.hoveredArea.node;\n            const position = this.hoveredArea.position;\n            const previousParent = movedNode.parent;\n\n            if (position === Position.Inside) {\n                this.hoveredArea.node.is_open = true;\n            }\n\n            const doMove = (): void => {\n                this.treeWidget.tree.moveNode(movedNode, targetNode, position);\n                this.treeWidget.element.empty();\n                this.treeWidget._refreshElements(null);\n            };\n\n            const event = this.treeWidget._triggerEvent(\"tree.move\", {\n                move_info: {\n                    moved_node: movedNode,\n                    target_node: targetNode,\n                    position: getPositionName(position),\n                    previous_parent: previousParent,\n                    do_move: doMove,\n                    original_event: positionInfo.originalEvent,\n                },\n            });\n\n            if (!event.isDefaultPrevented()) {\n                doMove();\n            }\n        }\n    }\n\n    private getTreeDimensions(): Dimensions {\n        // Return the dimensions of the tree. Add a margin to the bottom to allow\n        // to drag-and-drop after the last element.\n        const offset = this.treeWidget.element.offset();\n\n        if (!offset) {\n            return { left: 0, top: 0, right: 0, bottom: 0 };\n        } else {\n            const el = this.treeWidget.element;\n            const width = el.width() || 0;\n            const height = el.height() || 0;\n            const left = offset.left + this.treeWidget._getScrollLeft();\n\n            return {\n                left,\n                top: offset.top,\n                right: left + width,\n                bottom: offset.top + height + 16,\n            };\n        }\n    }\n}\n\nabstract class VisibleNodeIterator {\n    private tree: Node;\n\n    constructor(tree: Node) {\n        this.tree = tree;\n    }\n\n    protected iterate(): void {\n        let isFirstNode = true;\n\n        const _iterateNode = (node: Node, nextNode: Node | null): void => {\n            let mustIterateInside =\n                (node.is_open || !node.element) && node.hasChildren();\n\n            let $element: JQuery<HTMLElement> | null = null;\n\n            if (node.element) {\n                $element = jQuery(node.element);\n\n                if (!$element.is(\":visible\")) {\n                    return;\n                }\n\n                if (isFirstNode) {\n                    this.handleFirstNode(node);\n                    isFirstNode = false;\n                }\n\n                if (!node.hasChildren()) {\n                    this.handleNode(node, nextNode, $element);\n                } else if (node.is_open) {\n                    if (!this.handleOpenFolder(node, $element)) {\n                        mustIterateInside = false;\n                    }\n                } else {\n                    this.handleClosedFolder(node, nextNode, $element);\n                }\n            }\n\n            if (mustIterateInside) {\n                const childrenLength = node.children.length;\n                node.children.forEach((_, i) => {\n                    if (i === childrenLength - 1) {\n                        _iterateNode(node.children[i], null);\n                    } else {\n                        _iterateNode(node.children[i], node.children[i + 1]);\n                    }\n                });\n\n                if (node.is_open && $element) {\n                    this.handleAfterOpenFolder(node, nextNode);\n                }\n            }\n        };\n\n        _iterateNode(this.tree, null);\n    }\n\n    protected abstract handleNode(\n        node: Node,\n        nextNode: Node | null,\n        $element: JQuery\n    ): void;\n\n    /*\n    override\n    return\n        - true: continue iterating\n        - false: stop iterating\n    */\n    protected abstract handleOpenFolder(node: Node, $element: JQuery): boolean;\n\n    protected abstract handleClosedFolder(\n        node: Node,\n        nextNode: Node | null,\n        $element: JQuery\n    ): void;\n\n    protected abstract handleAfterOpenFolder(\n        node: Node,\n        nextNode: Node | null\n    ): void;\n\n    protected abstract handleFirstNode(node: Node): void;\n}\n\nexport class HitAreasGenerator extends VisibleNodeIterator {\n    private currentNode: Node;\n    private treeBottom: number;\n    private positions: HitArea[];\n    private lastTop: number;\n\n    constructor(tree: Node, currentNode: Node, treeBottom: number) {\n        super(tree);\n\n        this.currentNode = currentNode;\n        this.treeBottom = treeBottom;\n    }\n\n    public generate(): HitArea[] {\n        this.positions = [];\n        this.lastTop = 0;\n\n        this.iterate();\n\n        return this.generateHitAreas(this.positions);\n    }\n\n    protected generateHitAreas(positions: HitArea[]): HitArea[] {\n        let previousTop = -1;\n        let group = [];\n        const hitAreas: HitArea[] = [];\n\n        for (const position of positions) {\n            if (position.top !== previousTop && group.length) {\n                if (group.length) {\n                    this.generateHitAreasForGroup(\n                        hitAreas,\n                        group,\n                        previousTop,\n                        position.top\n                    );\n                }\n\n                previousTop = position.top;\n                group = [];\n            }\n\n            group.push(position);\n        }\n\n        this.generateHitAreasForGroup(\n            hitAreas,\n            group,\n            previousTop,\n            this.treeBottom\n        );\n\n        return hitAreas;\n    }\n\n    protected handleOpenFolder(node: Node, $element: JQuery): boolean {\n        if (node === this.currentNode) {\n            // Cannot move inside current item\n            // Stop iterating\n            return false;\n        }\n\n        // Cannot move before current item\n        if (node.children[0] !== this.currentNode) {\n            this.addPosition(node, Position.Inside, this.getTop($element));\n        }\n\n        // Continue iterating\n        return true;\n    }\n\n    protected handleClosedFolder(\n        node: Node,\n        nextNode: Node,\n        $element: JQuery\n    ): void {\n        const top = this.getTop($element);\n\n        if (node === this.currentNode) {\n            // Cannot move after current item\n            this.addPosition(node, Position.None, top);\n        } else {\n            this.addPosition(node, Position.Inside, top);\n\n            // Cannot move before current item\n            if (nextNode !== this.currentNode) {\n                this.addPosition(node, Position.After, top);\n            }\n        }\n    }\n\n    protected handleFirstNode(node: Node): void {\n        if (node !== this.currentNode) {\n            this.addPosition(\n                node,\n                Position.Before,\n                this.getTop(jQuery(node.element))\n            );\n        }\n    }\n\n    protected handleAfterOpenFolder(node: Node, nextNode: Node): void {\n        if (node === this.currentNode || nextNode === this.currentNode) {\n            // Cannot move before or after current item\n            this.addPosition(node, Position.None, this.lastTop);\n        } else {\n            this.addPosition(node, Position.After, this.lastTop);\n        }\n    }\n\n    protected handleNode(node: Node, nextNode: Node, $element: JQuery): void {\n        const top = this.getTop($element);\n\n        if (node === this.currentNode) {\n            // Cannot move inside current item\n            this.addPosition(node, Position.None, top);\n        } else {\n            this.addPosition(node, Position.Inside, top);\n        }\n\n        if (nextNode === this.currentNode || node === this.currentNode) {\n            // Cannot move before or after current item\n            this.addPosition(node, Position.None, top);\n        } else {\n            this.addPosition(node, Position.After, top);\n        }\n    }\n\n    private getTop($element: JQuery<HTMLElement>): number {\n        const offset = $element.offset();\n\n        return offset ? offset.top : 0;\n    }\n\n    private addPosition(node: Node, position: number, top: number): void {\n        const area = {\n            top,\n            bottom: 0,\n            node,\n            position,\n        };\n\n        this.positions.push(area);\n        this.lastTop = top;\n    }\n\n    private generateHitAreasForGroup(\n        hitAreas: HitArea[],\n        positionsInGroup: HitArea[],\n        top: number,\n        bottom: number\n    ): void {\n        // limit positions in group\n        const positionCount = Math.min(positionsInGroup.length, 4);\n\n        const areaHeight = Math.round((bottom - top) / positionCount);\n        let areaTop = top;\n\n        let i = 0;\n        while (i < positionCount) {\n            const position = positionsInGroup[i];\n\n            hitAreas.push({\n                top: areaTop,\n                bottom: areaTop + areaHeight,\n                node: position.node,\n                position: position.position,\n            });\n\n            areaTop += areaHeight;\n            i += 1;\n        }\n    }\n}\n\nclass DragElement {\n    private offsetX: number;\n    private offsetY: number;\n    private $element: JQuery;\n\n    constructor(\n        nodeName: string,\n        offsetX: number,\n        offsetY: number,\n        $tree: JQuery,\n        autoEscape: boolean\n    ) {\n        this.offsetX = offsetX;\n        this.offsetY = offsetY;\n\n        this.$element = jQuery(\"<span>\").addClass(\n            \"jqtree-title jqtree-dragging\"\n        );\n\n        if (autoEscape) {\n            this.$element.text(nodeName);\n        } else {\n            this.$element.html(nodeName);\n        }\n\n        this.$element.css(\"position\", \"absolute\");\n        $tree.append(this.$element);\n    }\n\n    public move(pageX: number, pageY: number): void {\n        this.$element.offset({\n            left: pageX - this.offsetX,\n            top: pageY - this.offsetY,\n        });\n    }\n\n    public remove(): void {\n        this.$element.remove();\n    }\n}\n","export const isInt = (n: unknown): boolean =>\n    typeof n === \"number\" && n % 1 === 0;\n\nexport const isFunction = (v: unknown): boolean => typeof v === \"function\";\n\nexport const getBoolString = (value: unknown): string =>\n    value ? \"true\" : \"false\";\n","import { getBoolString } from \"./util\";\nimport { Node } from \"./node\";\nimport { JqTreeWidget } from \"./tree.jquery\";\n\ntype IconElement = Text | Element;\n\nexport default class ElementsRenderer {\n    public openedIconElement: IconElement;\n    public closedIconElement: IconElement;\n    private treeWidget: JqTreeWidget;\n\n    constructor(treeWidget: JqTreeWidget) {\n        this.treeWidget = treeWidget;\n\n        this.openedIconElement = this.createButtonElement(\n            treeWidget.options.openedIcon || \"+\"\n        );\n        this.closedIconElement = this.createButtonElement(\n            treeWidget.options.closedIcon || \"-\"\n        );\n    }\n\n    public render(fromNode: Node | null): void {\n        if (fromNode && fromNode.parent) {\n            this.renderFromNode(fromNode);\n        } else {\n            this.renderFromRoot();\n        }\n    }\n\n    public renderFromRoot(): void {\n        const $element = this.treeWidget.element;\n        $element.empty();\n\n        this.createDomElements(\n            $element[0],\n            this.treeWidget.tree.children,\n            true,\n            1\n        );\n    }\n\n    public renderFromNode(node: Node): void {\n        // remember current li\n        const $previousLi = jQuery(node.element);\n\n        // create element\n        const li = this.createLi(node, node.getLevel());\n        this.attachNodeData(node, li);\n\n        // add element to dom\n        $previousLi.after(li);\n\n        // remove previous li\n        $previousLi.remove();\n\n        // create children\n        if (node.children) {\n            this.createDomElements(\n                li,\n                node.children,\n                false,\n                node.getLevel() + 1\n            );\n        }\n    }\n\n    private createDomElements(\n        element: Element,\n        children: Node[],\n        isRootNode: boolean,\n        level: number\n    ): void {\n        const ul = this.createUl(isRootNode);\n        element.appendChild(ul);\n\n        for (const child of children) {\n            const li = this.createLi(child, level);\n            ul.appendChild(li);\n\n            this.attachNodeData(child, li);\n\n            if (child.hasChildren()) {\n                this.createDomElements(li, child.children, false, level + 1);\n            }\n        }\n    }\n\n    private attachNodeData(node: Node, li: HTMLElement): void {\n        node.element = li;\n        jQuery(li).data(\"node\", node);\n    }\n\n    private createUl(isRootNode: boolean): HTMLUListElement {\n        let classString;\n        let role;\n\n        if (!isRootNode) {\n            classString = \"\";\n            role = \"group\";\n        } else {\n            classString = \"jqtree-tree\";\n            role = \"tree\";\n\n            if (this.treeWidget.options.rtl) {\n                classString += \" jqtree-rtl\";\n            }\n        }\n\n        if (this.treeWidget.options.dragAndDrop) {\n            classString += \" jqtree-dnd\";\n        }\n\n        const ul = document.createElement(\"ul\");\n        ul.className = `jqtree_common ${classString}`;\n\n        ul.setAttribute(\"role\", role);\n\n        return ul;\n    }\n\n    private createLi(node: Node, level: number): HTMLLIElement {\n        const isSelected = Boolean(\n            this.treeWidget.selectNodeHandler.isNodeSelected(node)\n        );\n\n        const mustShowFolder =\n            node.isFolder() ||\n            (node.isEmptyFolder && this.treeWidget.options.showEmptyFolder);\n\n        const li = mustShowFolder\n            ? this.createFolderLi(node, level, isSelected)\n            : this.createNodeLi(node, level, isSelected);\n\n        if (this.treeWidget.options.onCreateLi) {\n            this.treeWidget.options.onCreateLi(node, jQuery(li), isSelected);\n        }\n\n        return li;\n    }\n\n    private createFolderLi(\n        node: Node,\n        level: number,\n        isSelected: boolean\n    ): HTMLLIElement {\n        const buttonClasses = this.getButtonClasses(node);\n        const folderClasses = this.getFolderClasses(node, isSelected);\n\n        const iconElement = node.is_open\n            ? this.openedIconElement\n            : this.closedIconElement;\n\n        // li\n        const li = document.createElement(\"li\");\n        li.className = `jqtree_common ${folderClasses}`;\n        li.setAttribute(\"role\", \"presentation\");\n\n        // div\n        const div = document.createElement(\"div\");\n        div.className = \"jqtree-element jqtree_common\";\n        div.setAttribute(\"role\", \"presentation\");\n\n        li.appendChild(div);\n\n        // button link\n        const buttonLink = document.createElement(\"a\");\n        buttonLink.className = buttonClasses;\n\n        buttonLink.appendChild(iconElement.cloneNode(true));\n\n        buttonLink.setAttribute(\"role\", \"presentation\");\n        buttonLink.setAttribute(\"aria-hidden\", \"true\");\n\n        if (this.treeWidget.options.buttonLeft) {\n            div.appendChild(buttonLink);\n        }\n\n        // title span\n        div.appendChild(\n            this.createTitleSpan(\n                node.name,\n                level,\n                isSelected,\n                node.is_open,\n                true\n            )\n        );\n\n        if (!this.treeWidget.options.buttonLeft) {\n            div.appendChild(buttonLink);\n        }\n\n        return li;\n    }\n\n    private createNodeLi(\n        node: Node,\n        level: number,\n        isSelected: boolean\n    ): HTMLLIElement {\n        const liClasses = [\"jqtree_common\"];\n\n        if (isSelected) {\n            liClasses.push(\"jqtree-selected\");\n        }\n\n        const classString = liClasses.join(\" \");\n\n        // li\n        const li = document.createElement(\"li\");\n        li.className = classString;\n        li.setAttribute(\"role\", \"presentation\");\n\n        // div\n        const div = document.createElement(\"div\");\n        div.className = \"jqtree-element jqtree_common\";\n        div.setAttribute(\"role\", \"presentation\");\n\n        li.appendChild(div);\n\n        // title span\n        div.appendChild(\n            this.createTitleSpan(\n                node.name,\n                level,\n                isSelected,\n                node.is_open,\n                false\n            )\n        );\n\n        return li;\n    }\n\n    private createTitleSpan(\n        nodeName: string,\n        level: number,\n        isSelected: boolean,\n        isOpen: boolean,\n        isFolder: boolean\n    ): HTMLSpanElement {\n        const titleSpan = document.createElement(\"span\");\n\n        let classes = \"jqtree-title jqtree_common\";\n\n        if (isFolder) {\n            classes += \" jqtree-title-folder\";\n        }\n\n        titleSpan.className = classes;\n\n        titleSpan.setAttribute(\"role\", \"treeitem\");\n        titleSpan.setAttribute(\"aria-level\", `${level}`);\n\n        titleSpan.setAttribute(\"aria-selected\", getBoolString(isSelected));\n        titleSpan.setAttribute(\"aria-expanded\", getBoolString(isOpen));\n\n        if (isSelected) {\n            const tabIndex = this.treeWidget.options.tabIndex;\n\n            if (tabIndex !== undefined) {\n                titleSpan.setAttribute(\"tabindex\", `${tabIndex}`);\n            }\n        }\n\n        if (this.treeWidget.options.autoEscape) {\n            titleSpan.textContent = nodeName;\n        } else {\n            titleSpan.innerHTML = nodeName;\n        }\n\n        return titleSpan;\n    }\n\n    private getButtonClasses(node: Node): string {\n        const classes = [\"jqtree-toggler\", \"jqtree_common\"];\n\n        if (!node.is_open) {\n            classes.push(\"jqtree-closed\");\n        }\n\n        if (this.treeWidget.options.buttonLeft) {\n            classes.push(\"jqtree-toggler-left\");\n        } else {\n            classes.push(\"jqtree-toggler-right\");\n        }\n\n        return classes.join(\" \");\n    }\n\n    private getFolderClasses(node: Node, isSelected: boolean): string {\n        const classes = [\"jqtree-folder\"];\n\n        if (!node.is_open) {\n            classes.push(\"jqtree-closed\");\n        }\n\n        if (isSelected) {\n            classes.push(\"jqtree-selected\");\n        }\n\n        if (node.is_loading) {\n            classes.push(\"jqtree-loading\");\n        }\n\n        return classes.join(\" \");\n    }\n\n    private createButtonElement(value: string | Element): IconElement {\n        if (typeof value === \"string\") {\n            // convert value to html\n            const div = document.createElement(\"div\");\n            div.innerHTML = value;\n\n            return document.createTextNode(div.innerHTML);\n        } else {\n            return jQuery(value)[0];\n        }\n    }\n}\n","import { DefaultRecord, Node, NodeData } from \"./node\";\nimport { JqTreeWidget } from \"./tree.jquery\";\n\nexport type HandleFinishedLoading = () => void;\n\nexport default class DataLoader {\n    private treeWidget: JqTreeWidget;\n\n    constructor(treeWidget: JqTreeWidget) {\n        this.treeWidget = treeWidget;\n    }\n\n    public loadFromUrl(\n        urlInfo: string | JQuery.AjaxSettings | null,\n        parentNode: Node | null,\n        onFinished: HandleFinishedLoading | null\n    ): void {\n        if (!urlInfo) {\n            return;\n        }\n\n        const $el = this.getDomElement(parentNode);\n        this.addLoadingClass($el);\n        this.notifyLoading(true, parentNode, $el);\n\n        const stopLoading = (): void => {\n            this.removeLoadingClass($el);\n            this.notifyLoading(false, parentNode, $el);\n        };\n\n        const handleSuccess = (data: any): void => {\n            stopLoading();\n            this.treeWidget.loadData(this.parseData(data), parentNode);\n\n            if (onFinished && typeof onFinished === \"function\") {\n                onFinished();\n            }\n        };\n\n        const handleError = (jqXHR: JQuery.jqXHR): void => {\n            stopLoading();\n\n            if (this.treeWidget.options.onLoadFailed) {\n                this.treeWidget.options.onLoadFailed(jqXHR);\n            }\n        };\n\n        this.submitRequest(urlInfo, handleSuccess, handleError);\n    }\n\n    private addLoadingClass($el: JQuery<HTMLElement>): void {\n        if ($el) {\n            $el.addClass(\"jqtree-loading\");\n        }\n    }\n\n    private removeLoadingClass($el: JQuery<HTMLElement>): void {\n        if ($el) {\n            $el.removeClass(\"jqtree-loading\");\n        }\n    }\n\n    private getDomElement(parentNode: Node | null): JQuery<HTMLElement> {\n        if (parentNode) {\n            return jQuery(parentNode.element);\n        } else {\n            return this.treeWidget.element;\n        }\n    }\n\n    private notifyLoading(\n        isLoading: boolean,\n        node: Node | null,\n        $el: JQuery\n    ): void {\n        if (this.treeWidget.options.onLoading) {\n            this.treeWidget.options.onLoading(isLoading, node, $el);\n        }\n\n        this.treeWidget._triggerEvent(\"tree.loading_data\", {\n            isLoading,\n            node,\n            $el,\n        });\n    }\n\n    private submitRequest(\n        urlInfoInput: string | JQuery.AjaxSettings,\n        handleSuccess: JQuery.Ajax.SuccessCallback<any>,\n        handleError: JQuery.Ajax.ErrorCallback<any>\n    ): void {\n        const urlInfo =\n            typeof urlInfoInput === \"string\"\n                ? { url: urlInfoInput }\n                : urlInfoInput;\n\n        const ajaxSettings: JQuery.AjaxSettings = {\n            method: \"GET\",\n            cache: false,\n            dataType: \"json\",\n            success: handleSuccess,\n            error: handleError,\n            ...urlInfo,\n        };\n\n        ajaxSettings.method = ajaxSettings.method?.toUpperCase() || \"GET\";\n\n        void jQuery.ajax(ajaxSettings);\n    }\n\n    private parseData(data: NodeData): NodeData[] {\n        const { dataFilter } = this.treeWidget.options;\n\n        const getParsedData = (): unknown => {\n            if (typeof data === \"string\") {\n                return JSON.parse(data) as unknown;\n            } else {\n                return data;\n            }\n        };\n\n        const parsedData = getParsedData();\n\n        if (dataFilter) {\n            return dataFilter(parsedData);\n        } else {\n            return parsedData as DefaultRecord[];\n        }\n    }\n}\n","import { Node } from \"./node\";\nimport { JqTreeWidget } from \"./tree.jquery\";\n\nexport default class KeyHandler {\n    private static LEFT = 37;\n    private static UP = 38;\n    private static RIGHT = 39;\n    private static DOWN = 40;\n\n    private treeWidget: JqTreeWidget;\n\n    constructor(treeWidget: JqTreeWidget) {\n        this.treeWidget = treeWidget;\n\n        if (treeWidget.options.keyboardSupport) {\n            jQuery(document).on(\"keydown.jqtree\", this.handleKeyDown);\n        }\n    }\n\n    public deinit(): void {\n        jQuery(document).off(\"keydown.jqtree\");\n    }\n\n    public moveDown(selectedNode: Node): boolean {\n        return this.selectNode(selectedNode.getNextNode());\n    }\n\n    public moveUp(selectedNode: Node): boolean {\n        return this.selectNode(selectedNode.getPreviousNode());\n    }\n\n    public moveRight(selectedNode: Node): boolean {\n        if (!selectedNode.isFolder()) {\n            return true;\n        } else {\n            // folder node\n            if (selectedNode.is_open) {\n                // Right moves to the first child of an open node\n                return this.selectNode(selectedNode.getNextNode());\n            } else {\n                // Right expands a closed node\n                this.treeWidget.openNode(selectedNode);\n                return false;\n            }\n        }\n    }\n\n    public moveLeft(selectedNode: Node): boolean {\n        if (selectedNode.isFolder() && selectedNode.is_open) {\n            // Left on an open node closes the node\n            this.treeWidget.closeNode(selectedNode);\n            return false;\n        } else {\n            // Left on a closed or end node moves focus to the node's parent\n            return this.selectNode(selectedNode.getParent());\n        }\n    }\n\n    public selectNode(node: Node | null): boolean {\n        if (!node) {\n            return true;\n        } else {\n            this.treeWidget.selectNode(node);\n\n            if (\n                !this.treeWidget.scrollHandler.isScrolledIntoView(\n                    jQuery(node.element).find(\".jqtree-element\")\n                )\n            ) {\n                this.treeWidget.scrollToNode(node);\n            }\n\n            return false;\n        }\n    }\n\n    private handleKeyDown = (e: JQuery.Event): boolean => {\n        if (!this.canHandleKeyboard()) {\n            return true;\n        }\n\n        const selectedNode = this.treeWidget.getSelectedNode();\n        if (!selectedNode) {\n            return true;\n        }\n\n        const key = e.which;\n\n        switch (key) {\n            case KeyHandler.DOWN:\n                return this.moveDown(selectedNode);\n\n            case KeyHandler.UP:\n                return this.moveUp(selectedNode);\n\n            case KeyHandler.RIGHT:\n                return this.moveRight(selectedNode);\n\n            case KeyHandler.LEFT:\n                return this.moveLeft(selectedNode);\n\n            default:\n                return true;\n        }\n    };\n\n    private canHandleKeyboard(): boolean {\n        return (\n            (this.treeWidget.options.keyboardSupport || false) &&\n            this.treeWidget.selectNodeHandler.isFocusOnTree()\n        );\n    }\n}\n","const register = (widgetClass: unknown, widgetName: string): void => {\n    const getDataKey = (): string => `simple_widget_${widgetName}`;\n\n    const getWidgetData = (\n        el: HTMLElement,\n        dataKey: string\n    ): SimpleWidget<unknown> | null => {\n        const widget = jQuery.data(el, dataKey) as unknown;\n\n        if (widget && widget instanceof SimpleWidget) {\n            return widget;\n        } else {\n            return null;\n        }\n    };\n\n    const createWidget = ($el: JQuery, options: unknown): JQuery => {\n        const dataKey = getDataKey();\n\n        for (const el of $el.get()) {\n            const existingWidget = getWidgetData(el, dataKey);\n\n            if (!existingWidget) {\n                const simpleWidgetClass = widgetClass as typeof SimpleWidget;\n                const widget = new simpleWidgetClass(el, options);\n\n                if (!jQuery.data(el, dataKey)) {\n                    jQuery.data(el, dataKey, widget);\n                }\n\n                // Call init after setting data, so we can call methods\n                widget.init();\n            }\n        }\n\n        return $el;\n    };\n\n    const destroyWidget = ($el: JQuery): void => {\n        const dataKey = getDataKey();\n\n        for (const el of $el.get()) {\n            const widget = getWidgetData(el, dataKey);\n\n            if (widget) {\n                widget.destroy();\n            }\n\n            jQuery.removeData(el, dataKey);\n        }\n    };\n\n    const callFunction = (\n        $el: JQuery,\n        functionName: string,\n        args: unknown[]\n    ): unknown => {\n        let result = null;\n\n        for (const el of $el.get()) {\n            const widget = jQuery.data(el, getDataKey()) as unknown;\n\n            if (widget && widget instanceof SimpleWidget) {\n                const simpleWidget = widget as SimpleWidget<unknown>;\n                const widgetFunction = simpleWidget[functionName];\n\n                if (widgetFunction && typeof widgetFunction === \"function\") {\n                    result = widgetFunction.apply(widget, args) as unknown;\n                }\n            }\n        }\n\n        return result;\n    };\n\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    (jQuery.fn as any)[widgetName] = function (\n        this: JQuery,\n        argument1: unknown,\n        ...args: unknown[]\n    ) {\n        if (!argument1) {\n            return createWidget(this, null);\n        } else if (typeof argument1 === \"object\") {\n            const options = argument1 as unknown;\n            return createWidget(this, options);\n        } else if (typeof argument1 === \"string\" && argument1[0] !== \"_\") {\n            const functionName = argument1;\n\n            if (functionName === \"destroy\") {\n                return destroyWidget(this);\n            } else if (functionName === \"get_widget_class\") {\n                return widgetClass;\n            } else {\n                return callFunction(this, functionName, args);\n            }\n        }\n    };\n};\n\nexport default class SimpleWidget<WidgetOptions> {\n    public static register(widgetClass: unknown, widgetName: string): void {\n        register(widgetClass, widgetName);\n    }\n\n    [key: string]: unknown;\n\n    protected static defaults: unknown = {};\n\n    public options: WidgetOptions;\n\n    protected $el: JQuery<HTMLElement>;\n\n    constructor(el: HTMLElement, options: WidgetOptions) {\n        this.$el = jQuery(el);\n\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        const defaults = (this.constructor as any)[\"defaults\"] as WidgetOptions;\n        this.options = { ...defaults, ...options };\n    }\n\n    public destroy(): void {\n        this.deinit();\n    }\n\n    public init(): void {\n        //\n    }\n\n    public deinit(): void {\n        //\n    }\n}\n","/*\nThis widget does the same a the mouse widget in jqueryui.\n*/\nimport SimpleWidget from \"./simple.widget\";\nimport { PositionInfo } from \"./types\";\n\nconst getPositionInfoFromMouseEvent = (e: MouseEvent): PositionInfo => ({\n    pageX: e.pageX,\n    pageY: e.pageY,\n    target: e.target as HTMLElement,\n    originalEvent: e,\n});\n\nconst getPositionInfoFromTouch = (\n    touch: Touch,\n    e: TouchEvent\n): PositionInfo => ({\n    pageX: touch.pageX,\n    pageY: touch.pageY,\n    target: touch.target as HTMLElement,\n    originalEvent: e,\n});\n\nabstract class MouseWidget<WidgetOptions> extends SimpleWidget<WidgetOptions> {\n    public $el: JQuery<HTMLElement>;\n    protected isMouseStarted: boolean;\n    protected mouseDownInfo: PositionInfo | null;\n    private mouseDelayTimer: number | null;\n    private isMouseDelayMet: boolean;\n\n    public init(): void {\n        const element = this.$el.get(0);\n        element.addEventListener(\"mousedown\", this.mouseDown, {\n            passive: false,\n        });\n        element.addEventListener(\"touchstart\", this.touchStart, {\n            passive: false,\n        });\n\n        this.isMouseStarted = false;\n        this.mouseDelayTimer = null;\n        this.isMouseDelayMet = false;\n        this.mouseDownInfo = null;\n    }\n\n    public deinit(): void {\n        const el = this.$el.get(0);\n        el.removeEventListener(\"mousedown\", this.mouseDown);\n        el.removeEventListener(\"touchstart\", this.touchStart);\n\n        document.removeEventListener(\"mousemove\", this.mouseMove);\n        document.removeEventListener(\"touchmove\", this.touchMove);\n        document.removeEventListener(\"mouseup\", this.mouseUp);\n        document.removeEventListener(\"touchend\", this.touchEnd);\n    }\n\n    protected abstract mouseCapture(positionInfo: PositionInfo): boolean | null;\n\n    protected abstract mouseStart(positionInfo: PositionInfo): boolean;\n\n    protected abstract mouseDrag(positionInfo: PositionInfo): void;\n\n    protected abstract mouseStop(positionInfo: PositionInfo): void;\n\n    protected abstract getMouseDelay(): number;\n\n    private mouseDown = (e: MouseEvent): void => {\n        // Left mouse button?\n        if (e.button !== 0) {\n            return;\n        }\n\n        const result = this.handleMouseDown(getPositionInfoFromMouseEvent(e));\n\n        if (result && e.cancelable) {\n            e.preventDefault();\n        }\n    };\n\n    private handleMouseDown(positionInfo: PositionInfo): boolean {\n        // We may have missed mouseup (out of window)\n        if (this.isMouseStarted) {\n            this.handleMouseUp(positionInfo);\n        }\n\n        this.mouseDownInfo = positionInfo;\n\n        if (!this.mouseCapture(positionInfo)) {\n            return false;\n        }\n\n        this.handleStartMouse();\n\n        return true;\n    }\n\n    private handleStartMouse(): void {\n        document.addEventListener(\"mousemove\", this.mouseMove, {\n            passive: false,\n        });\n        document.addEventListener(\"touchmove\", this.touchMove, {\n            passive: false,\n        });\n        document.addEventListener(\"mouseup\", this.mouseUp, { passive: false });\n        document.addEventListener(\"touchend\", this.touchEnd, {\n            passive: false,\n        });\n\n        const mouseDelay = this.getMouseDelay();\n\n        if (mouseDelay) {\n            this.startMouseDelayTimer(mouseDelay);\n        } else {\n            this.isMouseDelayMet = true;\n        }\n    }\n\n    private startMouseDelayTimer(mouseDelay: number): void {\n        if (this.mouseDelayTimer) {\n            clearTimeout(this.mouseDelayTimer);\n        }\n\n        this.mouseDelayTimer = window.setTimeout(() => {\n            this.isMouseDelayMet = true;\n        }, mouseDelay);\n\n        this.isMouseDelayMet = false;\n    }\n\n    private mouseMove = (e: MouseEvent): void => {\n        this.handleMouseMove(e, getPositionInfoFromMouseEvent(e));\n    };\n\n    private handleMouseMove(\n        e: MouseEvent | TouchEvent,\n        positionInfo: PositionInfo\n    ): void {\n        if (this.isMouseStarted) {\n            this.mouseDrag(positionInfo);\n\n            if (e.cancelable) {\n                e.preventDefault();\n            }\n            return;\n        }\n\n        if (!this.isMouseDelayMet) {\n            return;\n        }\n\n        if (this.mouseDownInfo) {\n            this.isMouseStarted = this.mouseStart(this.mouseDownInfo) !== false;\n        }\n\n        if (this.isMouseStarted) {\n            this.mouseDrag(positionInfo);\n\n            if (e.cancelable) {\n                e.preventDefault();\n            }\n        } else {\n            this.handleMouseUp(positionInfo);\n        }\n    }\n\n    private mouseUp = (e: MouseEvent): void => {\n        this.handleMouseUp(getPositionInfoFromMouseEvent(e));\n    };\n\n    private handleMouseUp(positionInfo: PositionInfo): void {\n        document.removeEventListener(\"mousemove\", this.mouseMove);\n        document.removeEventListener(\"touchmove\", this.touchMove);\n        document.removeEventListener(\"mouseup\", this.mouseUp);\n        document.removeEventListener(\"touchend\", this.touchEnd);\n\n        if (this.isMouseStarted) {\n            this.isMouseStarted = false;\n            this.mouseStop(positionInfo);\n        }\n    }\n\n    private touchStart = (e: TouchEvent): void => {\n        if (!e) {\n            return;\n        }\n\n        if (e.touches.length > 1) {\n            return;\n        }\n\n        const touch = e.changedTouches[0];\n\n        this.handleMouseDown(getPositionInfoFromTouch(touch, e));\n    };\n\n    private touchMove = (e: TouchEvent): void => {\n        if (!e) {\n            return;\n        }\n\n        if (e.touches.length > 1) {\n            return;\n        }\n\n        const touch = e.changedTouches[0];\n\n        this.handleMouseMove(e, getPositionInfoFromTouch(touch, e));\n    };\n\n    private touchEnd = (e: TouchEvent): void => {\n        if (!e) {\n            return;\n        }\n\n        if (e.touches.length > 1) {\n            return;\n        }\n\n        const touch = e.changedTouches[0];\n\n        this.handleMouseUp(getPositionInfoFromTouch(touch, e));\n    };\n}\n\nexport default MouseWidget;\n","import { isInt } from \"./util\";\nimport { JqTreeWidget } from \"./tree.jquery\";\nimport { Node, NodeId } from \"./node\";\n\nexport default class SaveStateHandler {\n    private treeWidget: JqTreeWidget;\n    private _supportsLocalStorage: boolean | null;\n\n    constructor(treeWidget: JqTreeWidget) {\n        this.treeWidget = treeWidget;\n    }\n\n    public saveState(): void {\n        const state = JSON.stringify(this.getState());\n\n        if (this.treeWidget.options.onSetStateFromStorage) {\n            this.treeWidget.options.onSetStateFromStorage(state);\n        } else if (this.supportsLocalStorage()) {\n            localStorage.setItem(this.getKeyName(), state);\n        }\n    }\n\n    public getStateFromStorage(): SavedState | null {\n        const jsonData = this.loadFromStorage();\n\n        if (jsonData) {\n            return (this.parseState(jsonData) as unknown) as SavedState;\n        } else {\n            return null;\n        }\n    }\n\n    public getState(): SavedState {\n        const getOpenNodeIds = (): NodeId[] => {\n            const openNodes: NodeId[] = [];\n\n            this.treeWidget.tree.iterate((node: Node) => {\n                if (node.is_open && node.id && node.hasChildren()) {\n                    openNodes.push(node.id);\n                }\n                return true;\n            });\n\n            return openNodes;\n        };\n\n        const getSelectedNodeIds = (): NodeId[] => {\n            const selectedNodeIds: NodeId[] = [];\n\n            this.treeWidget.getSelectedNodes().forEach((node) => {\n                if (node.id != null) {\n                    selectedNodeIds.push(node.id);\n                }\n            });\n\n            return selectedNodeIds;\n        };\n\n        return {\n            open_nodes: getOpenNodeIds(),\n            selected_node: getSelectedNodeIds(),\n        };\n    }\n\n    /*\n    Set initial state\n    Don't handle nodes that are loaded on demand\n\n    result: must load on demand\n    */\n    public setInitialState(state: SavedState): boolean {\n        if (!state) {\n            return false;\n        } else {\n            let mustLoadOnDemand = false;\n\n            if (state.open_nodes) {\n                mustLoadOnDemand = this.openInitialNodes(state.open_nodes);\n            }\n\n            if (state.selected_node) {\n                this.resetSelection();\n                this.selectInitialNodes(state.selected_node);\n            }\n\n            return mustLoadOnDemand;\n        }\n    }\n\n    public setInitialStateOnDemand(\n        state: SavedState,\n        cbFinished: () => void\n    ): void {\n        if (state) {\n            this.doSetInitialStateOnDemand(\n                state.open_nodes,\n                state.selected_node,\n                cbFinished\n            );\n        } else {\n            cbFinished();\n        }\n    }\n\n    public getNodeIdToBeSelected(): NodeId | null {\n        const state = this.getStateFromStorage();\n\n        if (state && state.selected_node) {\n            return state.selected_node[0];\n        } else {\n            return null;\n        }\n    }\n\n    private parseState(jsonData: string): SavedState {\n        const state = JSON.parse(jsonData) as Record<string, unknown>;\n\n        // Check if selected_node is an int (instead of an array)\n        if (state && state.selected_node && isInt(state.selected_node)) {\n            // Convert to array\n            state.selected_node = [state.selected_node];\n        }\n\n        return (state as unknown) as SavedState;\n    }\n\n    private loadFromStorage(): string | null {\n        if (this.treeWidget.options.onGetStateFromStorage) {\n            return this.treeWidget.options.onGetStateFromStorage();\n        } else if (this.supportsLocalStorage()) {\n            return localStorage.getItem(this.getKeyName());\n        } else {\n            return null;\n        }\n    }\n\n    private openInitialNodes(nodeIds: any[]): boolean {\n        let mustLoadOnDemand = false;\n\n        for (const nodeDd of nodeIds) {\n            const node = this.treeWidget.getNodeById(nodeDd);\n\n            if (node) {\n                if (!node.load_on_demand) {\n                    node.is_open = true;\n                } else {\n                    mustLoadOnDemand = true;\n                }\n            }\n        }\n\n        return mustLoadOnDemand;\n    }\n\n    private selectInitialNodes(nodeIds: NodeId[]): boolean {\n        let selectCount = 0;\n\n        for (const nodeId of nodeIds) {\n            const node = this.treeWidget.getNodeById(nodeId);\n\n            if (node) {\n                selectCount += 1;\n\n                this.treeWidget.selectNodeHandler.addToSelection(node);\n            }\n        }\n\n        return selectCount !== 0;\n    }\n\n    private resetSelection(): void {\n        const selectNodeHandler = this.treeWidget.selectNodeHandler;\n\n        const selectedNodes = selectNodeHandler.getSelectedNodes();\n\n        selectedNodes.forEach((node) => {\n            selectNodeHandler.removeFromSelection(node);\n        });\n    }\n\n    private doSetInitialStateOnDemand(\n        nodeIdsParam: NodeId[],\n        selectedNodes: NodeId[],\n        cbFinished: () => void\n    ): void {\n        let loadingCount = 0;\n        let nodeIds = nodeIdsParam;\n\n        const openNodes = (): void => {\n            const newNodesIds = [];\n\n            for (const nodeId of nodeIds) {\n                const node = this.treeWidget.getNodeById(nodeId);\n\n                if (!node) {\n                    newNodesIds.push(nodeId);\n                } else {\n                    if (!node.is_loading) {\n                        if (node.load_on_demand) {\n                            loadAndOpenNode(node);\n                        } else {\n                            this.treeWidget._openNode(node, false, null);\n                        }\n                    }\n                }\n            }\n\n            nodeIds = newNodesIds;\n\n            if (this.selectInitialNodes(selectedNodes)) {\n                this.treeWidget._refreshElements(null);\n            }\n\n            if (loadingCount === 0) {\n                cbFinished();\n            }\n        };\n\n        const loadAndOpenNode = (node: Node): void => {\n            loadingCount += 1;\n            this.treeWidget._openNode(node, false, () => {\n                loadingCount -= 1;\n                openNodes();\n            });\n        };\n\n        openNodes();\n    }\n\n    private getKeyName(): string {\n        if (typeof this.treeWidget.options.saveState === \"string\") {\n            return this.treeWidget.options.saveState;\n        } else {\n            return \"tree\";\n        }\n    }\n\n    private supportsLocalStorage(): boolean {\n        const testSupport = (): boolean => {\n            // Is local storage supported?\n            if (localStorage == null) {\n                return false;\n            } else {\n                // Check if it's possible to store an item. Safari does not allow this in private browsing mode.\n                try {\n                    const key = \"_storage_test\";\n                    sessionStorage.setItem(key, \"value\");\n                    sessionStorage.removeItem(key);\n                } catch (error) {\n                    return false;\n                }\n\n                return true;\n            }\n        };\n\n        if (this._supportsLocalStorage == null) {\n            this._supportsLocalStorage = testSupport();\n        }\n\n        return this._supportsLocalStorage;\n    }\n}\n","import { JqTreeWidget } from \"./tree.jquery\";\nimport { HitArea, PositionInfo } from \"./types\";\n\nexport default class ScrollHandler {\n    private treeWidget: JqTreeWidget;\n    private previousTop: number;\n    private isInitialized: boolean;\n    private $scrollParent: JQuery | null;\n    private scrollParentTop: number;\n\n    constructor(treeWidget: JqTreeWidget) {\n        this.treeWidget = treeWidget;\n        this.previousTop = -1;\n        this.isInitialized = false;\n    }\n\n    public checkScrolling(): void {\n        this.ensureInit();\n        this.checkVerticalScrolling();\n        this.checkHorizontalScrolling();\n    }\n\n    public scrollToY(top: number): void {\n        this.ensureInit();\n\n        if (this.$scrollParent) {\n            this.$scrollParent[0].scrollTop = top;\n        } else {\n            const offset = this.treeWidget.$el.offset();\n            const treeTop = offset ? offset.top : 0;\n\n            jQuery(document).scrollTop(top + treeTop);\n        }\n    }\n\n    public isScrolledIntoView($element: JQuery): boolean {\n        this.ensureInit();\n\n        let elementBottom: number;\n        let viewBottom: number;\n        let elementTop: number;\n        let viewTop: number;\n\n        const elHeight = $element.height() || 0;\n\n        if (this.$scrollParent) {\n            viewTop = 0;\n            viewBottom = this.$scrollParent.height() || 0;\n\n            const offset = $element.offset();\n            const originalTop = offset ? offset.top : 0;\n\n            elementTop = originalTop - this.scrollParentTop;\n            elementBottom = elementTop + elHeight;\n        } else {\n            viewTop = jQuery(window).scrollTop() || 0;\n\n            const windowHeight = jQuery(window).height() || 0;\n            viewBottom = viewTop + windowHeight;\n\n            const offset = $element.offset();\n\n            elementTop = offset ? offset.top : 0;\n            elementBottom = elementTop + elHeight;\n        }\n\n        return elementBottom <= viewBottom && elementTop >= viewTop;\n    }\n\n    public getScrollLeft(): number {\n        if (!this.$scrollParent) {\n            return 0;\n        } else {\n            return this.$scrollParent.scrollLeft() || 0;\n        }\n    }\n\n    private initScrollParent(): void {\n        const getParentWithOverflow = (): JQuery | null => {\n            const cssAttributes = [\"overflow\", \"overflow-y\"];\n\n            const hasOverFlow = ($el: JQuery): boolean => {\n                for (const attr of cssAttributes) {\n                    const overflowValue = $el.css(attr);\n                    if (\n                        overflowValue === \"auto\" ||\n                        overflowValue === \"scroll\"\n                    ) {\n                        return true;\n                    }\n                }\n\n                return false;\n            };\n\n            if (hasOverFlow(this.treeWidget.$el)) {\n                return this.treeWidget.$el;\n            }\n\n            for (const el of this.treeWidget.$el.parents().get()) {\n                const $el = jQuery(el);\n                if (hasOverFlow($el)) {\n                    return $el;\n                }\n            }\n\n            return null;\n        };\n\n        const setDocumentAsScrollParent = (): void => {\n            this.scrollParentTop = 0;\n            this.$scrollParent = null;\n        };\n\n        if (this.treeWidget.$el.css(\"position\") === \"fixed\") {\n            setDocumentAsScrollParent();\n        }\n\n        const $scrollParent = getParentWithOverflow();\n\n        if (\n            $scrollParent &&\n            $scrollParent.length &&\n            $scrollParent[0].tagName !== \"HTML\"\n        ) {\n            this.$scrollParent = $scrollParent;\n\n            const offset = this.$scrollParent.offset();\n            this.scrollParentTop = offset ? offset.top : 0;\n        } else {\n            setDocumentAsScrollParent();\n        }\n\n        this.isInitialized = true;\n    }\n\n    private ensureInit(): void {\n        if (!this.isInitialized) {\n            this.initScrollParent();\n        }\n    }\n\n    private handleVerticalScrollingWithScrollParent(area: HitArea): void {\n        const scrollParent = this.$scrollParent && this.$scrollParent[0];\n\n        if (!scrollParent) {\n            return;\n        }\n\n        const distanceBottom =\n            this.scrollParentTop + scrollParent.offsetHeight - area.bottom;\n\n        if (distanceBottom < 20) {\n            scrollParent.scrollTop += 20;\n            this.treeWidget.refreshHitAreas();\n            this.previousTop = -1;\n        } else if (area.top - this.scrollParentTop < 20) {\n            scrollParent.scrollTop -= 20;\n            this.treeWidget.refreshHitAreas();\n            this.previousTop = -1;\n        }\n    }\n\n    private handleVerticalScrollingWithDocument(area: HitArea): void {\n        const scrollTop = jQuery(document).scrollTop() || 0;\n        const distanceTop = area.top - scrollTop;\n\n        if (distanceTop < 20) {\n            jQuery(document).scrollTop(scrollTop - 20);\n        } else {\n            const windowHeight = jQuery(window).height() || 0;\n\n            if (windowHeight - (area.bottom - scrollTop) < 20) {\n                jQuery(document).scrollTop(scrollTop + 20);\n            }\n        }\n    }\n\n    private checkVerticalScrolling(): void {\n        const hoveredArea = this.treeWidget.dndHandler.hoveredArea;\n\n        if (hoveredArea && hoveredArea.top !== this.previousTop) {\n            this.previousTop = hoveredArea.top;\n\n            if (this.$scrollParent) {\n                this.handleVerticalScrollingWithScrollParent(hoveredArea);\n            } else {\n                this.handleVerticalScrollingWithDocument(hoveredArea);\n            }\n        }\n    }\n\n    private checkHorizontalScrolling(): void {\n        const positionInfo = this.treeWidget.dndHandler.positionInfo;\n\n        if (!positionInfo) {\n            return;\n        }\n\n        if (this.$scrollParent) {\n            this.handleHorizontalScrollingWithParent(positionInfo);\n        } else {\n            this.handleHorizontalScrollingWithDocument(positionInfo);\n        }\n    }\n\n    private handleHorizontalScrollingWithParent(\n        positionInfo: PositionInfo\n    ): void {\n        if (\n            positionInfo.pageX === undefined ||\n            positionInfo.pageY === undefined\n        ) {\n            return;\n        }\n\n        const $scrollParent = this.$scrollParent;\n        const scrollParentOffset = $scrollParent && $scrollParent.offset();\n\n        if (!($scrollParent && scrollParentOffset)) {\n            return;\n        }\n\n        const scrollParent = $scrollParent[0];\n\n        const canScrollRight =\n            scrollParent.scrollLeft + scrollParent.clientWidth <\n            scrollParent.scrollWidth;\n        const canScrollLeft = scrollParent.scrollLeft > 0;\n\n        const rightEdge = scrollParentOffset.left + scrollParent.clientWidth;\n        const leftEdge = scrollParentOffset.left;\n        const isNearRightEdge = positionInfo.pageX > rightEdge - 20;\n        const isNearLeftEdge = positionInfo.pageX < leftEdge + 20;\n\n        if (isNearRightEdge && canScrollRight) {\n            scrollParent.scrollLeft = Math.min(\n                scrollParent.scrollLeft + 20,\n                scrollParent.scrollWidth\n            );\n        } else if (isNearLeftEdge && canScrollLeft) {\n            scrollParent.scrollLeft = Math.max(scrollParent.scrollLeft - 20, 0);\n        }\n    }\n\n    private handleHorizontalScrollingWithDocument(\n        positionInfo: PositionInfo\n    ): void {\n        if (\n            positionInfo.pageX === undefined ||\n            positionInfo.pageY === undefined\n        ) {\n            return;\n        }\n\n        const $document = jQuery(document);\n\n        const scrollLeft = $document.scrollLeft() || 0;\n        const windowWidth = jQuery(window).width() || 0;\n\n        const canScrollLeft = scrollLeft > 0;\n\n        const isNearRightEdge = positionInfo.pageX > windowWidth - 20;\n        const isNearLeftEdge = positionInfo.pageX - scrollLeft < 20;\n\n        if (isNearRightEdge) {\n            $document.scrollLeft(scrollLeft + 20);\n        } else if (isNearLeftEdge && canScrollLeft) {\n            $document.scrollLeft(Math.max(scrollLeft - 20, 0));\n        }\n    }\n}\n","import { Node, NodeId } from \"./node\";\nimport { JqTreeWidget } from \"./tree.jquery\";\n\nexport default class SelectNodeHandler {\n    private treeWidget: JqTreeWidget;\n    private selectedNodes: Record<NodeId, boolean>;\n    private selectedSingleNode: Node | null;\n\n    constructor(treeWidget: JqTreeWidget) {\n        this.treeWidget = treeWidget;\n        this.clear();\n    }\n\n    public getSelectedNode(): Node | false {\n        const selectedNodes = this.getSelectedNodes();\n\n        if (selectedNodes.length) {\n            return selectedNodes[0];\n        } else {\n            return false;\n        }\n    }\n\n    public getSelectedNodes(): Node[] {\n        if (this.selectedSingleNode) {\n            return [this.selectedSingleNode];\n        } else {\n            const selectedNodes = [];\n\n            for (const id in this.selectedNodes) {\n                if (\n                    Object.prototype.hasOwnProperty.call(this.selectedNodes, id)\n                ) {\n                    const node = this.treeWidget.getNodeById(id);\n                    if (node) {\n                        selectedNodes.push(node);\n                    }\n                }\n            }\n\n            return selectedNodes;\n        }\n    }\n\n    public getSelectedNodesUnder(parent: Node): Node[] {\n        if (this.selectedSingleNode) {\n            if (parent.isParentOf(this.selectedSingleNode)) {\n                return [this.selectedSingleNode];\n            } else {\n                return [];\n            }\n        } else {\n            const selectedNodes = [];\n\n            for (const id in this.selectedNodes) {\n                if (\n                    Object.prototype.hasOwnProperty.call(this.selectedNodes, id)\n                ) {\n                    const node = this.treeWidget.getNodeById(id);\n                    if (node && parent.isParentOf(node)) {\n                        selectedNodes.push(node);\n                    }\n                }\n            }\n\n            return selectedNodes;\n        }\n    }\n\n    public isNodeSelected(node: Node): boolean {\n        if (node.id != null) {\n            if (this.selectedNodes[node.id]) {\n                return true;\n            } else {\n                return false;\n            }\n        } else if (this.selectedSingleNode) {\n            return this.selectedSingleNode.element === node.element;\n        } else {\n            return false;\n        }\n    }\n\n    public clear(): void {\n        this.selectedNodes = {};\n        this.selectedSingleNode = null;\n    }\n\n    public removeFromSelection(node: Node, includeChildren = false): void {\n        if (node.id == null) {\n            if (\n                this.selectedSingleNode &&\n                node.element === this.selectedSingleNode.element\n            ) {\n                this.selectedSingleNode = null;\n            }\n        } else {\n            delete this.selectedNodes[node.id];\n\n            if (includeChildren) {\n                node.iterate(() => {\n                    if (node.id != null) {\n                        delete this.selectedNodes[node.id];\n                    }\n                    return true;\n                });\n            }\n        }\n    }\n\n    public addToSelection(node: Node): void {\n        if (node.id != null) {\n            this.selectedNodes[node.id] = true;\n        } else {\n            this.selectedSingleNode = node;\n        }\n    }\n\n    public isFocusOnTree(): boolean {\n        const activeElement = document.activeElement;\n\n        return Boolean(\n            activeElement &&\n                activeElement.tagName === \"SPAN\" &&\n                this.treeWidget._containsElement(activeElement as HTMLElement)\n        );\n    }\n}\n","import { Position, Node } from \"./node\";\nimport { JqTreeWidget } from \"./tree.jquery\";\nimport { DropHint } from \"./types\";\n\nexport type OnFinishOpenNode = (node: Node) => void;\n\nexport class NodeElement {\n    public node: Node;\n    public $element: JQuery<HTMLElement>;\n    protected treeWidget: JqTreeWidget;\n\n    constructor(node: Node, treeWidget: JqTreeWidget) {\n        this.init(node, treeWidget);\n    }\n\n    public init(node: Node, treeWidget: JqTreeWidget): void {\n        this.node = node;\n        this.treeWidget = treeWidget;\n\n        if (!node.element) {\n            node.element = this.treeWidget.element.get(0);\n        }\n\n        this.$element = jQuery(node.element);\n    }\n\n    public addDropHint(position: number): DropHint {\n        if (this.mustShowBorderDropHint(position)) {\n            return new BorderDropHint(\n                this.$element,\n                this.treeWidget._getScrollLeft()\n            );\n        } else {\n            return new GhostDropHint(this.node, this.$element, position);\n        }\n    }\n\n    public select(mustSetFocus: boolean): void {\n        const $li = this.getLi();\n\n        $li.addClass(\"jqtree-selected\");\n        $li.attr(\"aria-selected\", \"true\");\n\n        const $span = this.getSpan();\n        $span.attr(\"tabindex\", this.treeWidget.options.tabIndex ?? null);\n\n        if (mustSetFocus) {\n            $span.trigger(\"focus\");\n        }\n    }\n\n    public deselect(): void {\n        const $li = this.getLi();\n\n        $li.removeClass(\"jqtree-selected\");\n        $li.attr(\"aria-selected\", \"false\");\n\n        const $span = this.getSpan();\n        $span.removeAttr(\"tabindex\");\n\n        $span.blur();\n    }\n\n    protected getUl(): JQuery<HTMLElement> {\n        return this.$element.children(\"ul:first\");\n    }\n\n    protected getSpan(): JQuery<HTMLElement> {\n        return this.$element\n            .children(\".jqtree-element\")\n            .find(\"span.jqtree-title\");\n    }\n\n    protected getLi(): JQuery<HTMLElement> {\n        return this.$element;\n    }\n\n    protected mustShowBorderDropHint(position: number): boolean {\n        return position === Position.Inside;\n    }\n}\n\nexport class FolderElement extends NodeElement {\n    public open(\n        onFinished: OnFinishOpenNode | null,\n        slide = true,\n        animationSpeed: JQuery.Duration | string = \"fast\"\n    ): void {\n        if (this.node.is_open) {\n            return;\n        }\n\n        this.node.is_open = true;\n\n        const $button = this.getButton();\n        $button.removeClass(\"jqtree-closed\");\n        $button.html(\"\");\n\n        const buttonEl = $button.get(0);\n\n        if (buttonEl) {\n            const icon = this.treeWidget.renderer.openedIconElement.cloneNode(\n                true\n            );\n\n            buttonEl.appendChild(icon);\n        }\n\n        const doOpen = (): void => {\n            const $li = this.getLi();\n            $li.removeClass(\"jqtree-closed\");\n\n            const $span = this.getSpan();\n            $span.attr(\"aria-expanded\", \"true\");\n\n            if (onFinished) {\n                onFinished(this.node);\n            }\n\n            this.treeWidget._triggerEvent(\"tree.open\", {\n                node: this.node,\n            });\n        };\n\n        if (slide) {\n            this.getUl().slideDown(animationSpeed, doOpen);\n        } else {\n            this.getUl().show();\n            doOpen();\n        }\n    }\n\n    public close(\n        slide = true,\n        animationSpeed: JQuery.Duration | string = \"fast\"\n    ): void {\n        if (!this.node.is_open) {\n            return;\n        }\n\n        this.node.is_open = false;\n\n        const $button = this.getButton();\n        $button.addClass(\"jqtree-closed\");\n        $button.html(\"\");\n\n        const buttonEl = $button.get(0);\n\n        if (buttonEl) {\n            const icon = this.treeWidget.renderer.closedIconElement.cloneNode(\n                true\n            );\n\n            buttonEl.appendChild(icon);\n        }\n\n        const doClose = (): void => {\n            const $li = this.getLi();\n            $li.addClass(\"jqtree-closed\");\n\n            const $span = this.getSpan();\n            $span.attr(\"aria-expanded\", \"false\");\n\n            this.treeWidget._triggerEvent(\"tree.close\", {\n                node: this.node,\n            });\n        };\n\n        if (slide) {\n            this.getUl().slideUp(animationSpeed, doClose);\n        } else {\n            this.getUl().hide();\n            doClose();\n        }\n    }\n\n    protected mustShowBorderDropHint(position: number): boolean {\n        return !this.node.is_open && position === Position.Inside;\n    }\n\n    private getButton(): JQuery {\n        return this.$element\n            .children(\".jqtree-element\")\n            .find(\"a.jqtree-toggler\");\n    }\n}\n\nexport class BorderDropHint implements DropHint {\n    private $hint: JQuery<Element>;\n\n    constructor($element: JQuery<Element>, scrollLeft: number) {\n        const $div = $element.children(\".jqtree-element\");\n\n        const elWidth = $element.width() || 0;\n        const width = Math.max(elWidth + scrollLeft - 4, 0);\n\n        const elHeight = $div.outerHeight() || 0;\n        const height = Math.max(elHeight - 4, 0);\n\n        this.$hint = jQuery('<span class=\"jqtree-border\"></span>');\n        $div.append(this.$hint);\n\n        this.$hint.css({ width, height });\n    }\n\n    public remove(): void {\n        this.$hint.remove();\n    }\n}\n\nclass GhostDropHint implements DropHint {\n    private $element: JQuery<Element>;\n    private node: Node;\n    private $ghost: JQuery;\n\n    constructor(node: Node, $element: JQuery<Element>, position: number) {\n        this.$element = $element;\n\n        this.node = node;\n        this.$ghost = jQuery(\n            `<li class=\"jqtree_common jqtree-ghost\"><span class=\"jqtree_common jqtree-circle\"></span>\n            <span class=\"jqtree_common jqtree-line\"></span></li>`\n        );\n\n        if (position === Position.After) {\n            this.moveAfter();\n        } else if (position === Position.Before) {\n            this.moveBefore();\n        } else if (position === Position.Inside) {\n            if (node.isFolder() && node.is_open) {\n                this.moveInsideOpenFolder();\n            } else {\n                this.moveInside();\n            }\n        }\n    }\n\n    public remove(): void {\n        this.$ghost.remove();\n    }\n\n    public moveAfter(): void {\n        this.$element.after(this.$ghost);\n    }\n\n    public moveBefore(): void {\n        this.$element.before(this.$ghost);\n    }\n\n    public moveInsideOpenFolder(): void {\n        jQuery(this.node.children[0].element).before(this.$ghost);\n    }\n\n    public moveInside(): void {\n        this.$element.after(this.$ghost);\n        this.$ghost.addClass(\"jqtree-inside\");\n    }\n}\n","import __version__ from \"./version\";\nimport * as jQueryProxy from \"jquery\";\nimport { DragAndDropHandler } from \"./dragAndDropHandler\";\nimport ElementsRenderer from \"./elementsRenderer\";\nimport DataLoader, { HandleFinishedLoading } from \"./dataLoader\";\nimport KeyHandler from \"./keyHandler\";\nimport MouseWidget from \"./mouse.widget\";\nimport { PositionInfo } from \"./types\";\nimport SaveStateHandler from \"./saveStateHandler\";\nimport ScrollHandler from \"./scrollHandler\";\nimport SelectNodeHandler from \"./selectNodeHandler\";\nimport SimpleWidget from \"./simple.widget\";\nimport { Node, NodeId, getPosition, NodeData } from \"./node\";\nimport { isFunction } from \"./util\";\nimport { FolderElement, NodeElement, OnFinishOpenNode } from \"./nodeElement\";\nimport { JQTreeOptions } from \"./jqtreeOptions\";\n\n// eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-unsafe-member-access\nconst jQuery: JQueryStatic = (<any>jQueryProxy).default || jQueryProxy;\n\ninterface ClickTarget {\n    node: Node;\n    type: \"button\" | \"label\";\n}\n\ninterface SelectNodeOptions {\n    mustToggle?: boolean;\n    mustSetFocus?: boolean;\n}\n\nconst NODE_PARAM_IS_EMPTY = \"Node parameter is empty\";\nconst PARAM_IS_EMPTY = \"Parameter is empty: \";\n\nexport class JqTreeWidget extends MouseWidget<JQTreeOptions> {\n    protected static defaults: JQTreeOptions = {\n        animationSpeed: \"fast\",\n        autoOpen: false, // true / false / int (open n levels starting at 0)\n        saveState: false, // true / false / string (cookie name)\n        dragAndDrop: false,\n        selectable: true,\n        useContextMenu: true,\n        onCanSelectNode: undefined,\n        onSetStateFromStorage: undefined,\n        onGetStateFromStorage: undefined,\n        onCreateLi: undefined,\n        onIsMoveHandle: undefined,\n\n        // Can this node be moved?\n        onCanMove: undefined,\n\n        // Can this node be moved to this position? function(moved_node, target_node, position)\n        onCanMoveTo: undefined,\n        onLoadFailed: undefined,\n        autoEscape: true,\n        dataUrl: undefined,\n\n        // The symbol to use for a closed node - ► BLACK RIGHT-POINTING POINTER\n        // http://www.fileformat.info/info/unicode/char/25ba/index.htm\n        closedIcon: undefined,\n\n        // The symbol to use for an open node - ▼ BLACK DOWN-POINTING TRIANGLE\n        // http://www.fileformat.info/info/unicode/char/25bc/index.htm\n        openedIcon: \"&#x25bc;\",\n        slide: true, // must display slide animation?\n        nodeClass: Node,\n        dataFilter: undefined,\n        keyboardSupport: true,\n        openFolderDelay: 500, // The delay for opening a folder during drag and drop; the value is in milliseconds\n        startDndDelay: 300, // The delay for starting dnd (in milliseconds)\n        rtl: undefined, // right-to-left support; true / false (default)\n        onDragMove: undefined,\n        onDragStop: undefined,\n        buttonLeft: true,\n        onLoading: undefined,\n        showEmptyFolder: false,\n        tabIndex: 0,\n    };\n\n    public element: JQuery;\n    public tree: Node;\n    public dndHandler: DragAndDropHandler;\n    public renderer: ElementsRenderer;\n    public dataLoader: DataLoader;\n    public scrollHandler: ScrollHandler;\n    public selectNodeHandler: SelectNodeHandler;\n\n    private isInitialized: boolean;\n    private saveStateHandler: SaveStateHandler;\n    private keyHandler: KeyHandler;\n\n    public toggle(node: Node, slideParam: null | boolean = null): JQuery {\n        if (!node) {\n            throw Error(NODE_PARAM_IS_EMPTY);\n        }\n\n        const slide = slideParam ?? this.options.slide;\n\n        if (node.is_open) {\n            this.closeNode(node, slide);\n        } else {\n            this.openNode(node, slide);\n        }\n\n        return this.element;\n    }\n\n    public getTree(): Node {\n        return this.tree;\n    }\n\n    public selectNode(\n        node: Node | null,\n        optionsParam?: SelectNodeOptions\n    ): JQuery {\n        this.doSelectNode(node, optionsParam);\n        return this.element;\n    }\n\n    public getSelectedNode(): Node | false {\n        return this.selectNodeHandler.getSelectedNode();\n    }\n\n    public toJson(): string {\n        return JSON.stringify(this.tree.getData());\n    }\n\n    public loadData(data: NodeData[], parentNode: Node | null): JQuery {\n        this.doLoadData(data, parentNode);\n        return this.element;\n    }\n\n    /*\n    signatures:\n    - loadDataFromUrl(url, parent_node=null, on_finished=null)\n        loadDataFromUrl('/my_data');\n        loadDataFromUrl('/my_data', node1);\n        loadDataFromUrl('/my_data', node1, function() { console.log('finished'); });\n        loadDataFromUrl('/my_data', null, function() { console.log('finished'); });\n\n    - loadDataFromUrl(parent_node=null, on_finished=null)\n        loadDataFromUrl();\n        loadDataFromUrl(node1);\n        loadDataFromUrl(null, function() { console.log('finished'); });\n        loadDataFromUrl(node1, function() { console.log('finished'); });\n    */\n    public loadDataFromUrl(\n        param1: string | null | Node,\n        param2?: Node | null | HandleFinishedLoading,\n        param3?: HandleFinishedLoading\n    ): JQuery {\n        if (typeof param1 === \"string\") {\n            // first parameter is url\n            this.doLoadDataFromUrl(\n                param1,\n                param2 as Node | null,\n                param3 ?? null\n            );\n        } else {\n            // first parameter is not url\n            this.doLoadDataFromUrl(\n                null,\n                param1,\n                param2 as HandleFinishedLoading | null\n            );\n        }\n\n        return this.element;\n    }\n\n    public reload(onFinished: HandleFinishedLoading | null): JQuery {\n        this.doLoadDataFromUrl(null, null, onFinished);\n        return this.element;\n    }\n\n    public getNodeById(nodeId: NodeId): Node | null {\n        return this.tree.getNodeById(nodeId);\n    }\n\n    public getNodeByName(name: string): Node | null {\n        return this.tree.getNodeByName(name);\n    }\n\n    public getNodeByNameMustExist(name: string): Node {\n        return this.tree.getNodeByNameMustExist(name);\n    }\n\n    public getNodesByProperty(key: string, value: unknown): Node[] {\n        return this.tree.getNodesByProperty(key, value);\n    }\n\n    public getNodeByHtmlElement(\n        element: HTMLElement | JQuery<HTMLElement>\n    ): Node | null {\n        return this.getNode(jQuery(element));\n    }\n\n    public getNodeByCallback(callback: (node: Node) => boolean): Node | null {\n        return this.tree.getNodeByCallback(callback);\n    }\n\n    public openNode(\n        node: Node,\n        param1?: boolean | OnFinishOpenNode,\n        param2?: OnFinishOpenNode\n    ): JQuery {\n        if (!node) {\n            throw Error(NODE_PARAM_IS_EMPTY);\n        }\n\n        const parseParams = (): [boolean, OnFinishOpenNode | null] => {\n            let onFinished: OnFinishOpenNode | null;\n            let slide: boolean | null;\n\n            if (isFunction(param1)) {\n                onFinished = param1 as OnFinishOpenNode | null;\n                slide = null;\n            } else {\n                slide = param1 as boolean;\n                onFinished = param2 as OnFinishOpenNode;\n            }\n\n            if (slide == null) {\n                slide = this.options.slide ?? false;\n            }\n\n            return [slide, onFinished];\n        };\n\n        const [slide, onFinished] = parseParams();\n\n        this._openNode(node, slide, onFinished);\n        return this.element;\n    }\n\n    public closeNode(node: Node, slideParam?: null | boolean): JQuery {\n        if (!node) {\n            throw Error(NODE_PARAM_IS_EMPTY);\n        }\n\n        const slide = slideParam ?? this.options.slide;\n\n        if (node.isFolder() || node.isEmptyFolder) {\n            new FolderElement(node, this).close(\n                slide,\n                this.options.animationSpeed\n            );\n\n            this.saveState();\n        }\n\n        return this.element;\n    }\n\n    public isDragging(): boolean {\n        return this.dndHandler.isDragging;\n    }\n\n    public refreshHitAreas(): JQuery {\n        this.dndHandler.refresh();\n        return this.element;\n    }\n\n    public addNodeAfter(\n        newNodeInfo: NodeData,\n        existingNode: Node\n    ): Node | null {\n        const newNode = existingNode.addAfter(newNodeInfo);\n\n        if (newNode) {\n            this._refreshElements(existingNode.parent);\n        }\n\n        return newNode;\n    }\n\n    public addNodeBefore(\n        newNodeInfo: NodeData,\n        existingNode: Node\n    ): Node | null {\n        if (!existingNode) {\n            throw Error(PARAM_IS_EMPTY + \"existingNode\");\n        }\n\n        const newNode = existingNode.addBefore(newNodeInfo);\n\n        if (newNode) {\n            this._refreshElements(existingNode.parent);\n        }\n\n        return newNode;\n    }\n\n    public addParentNode(\n        newNodeInfo: NodeData,\n        existingNode: Node\n    ): Node | null {\n        if (!existingNode) {\n            throw Error(PARAM_IS_EMPTY + \"existingNode\");\n        }\n\n        const newNode = existingNode.addParent(newNodeInfo);\n\n        if (newNode) {\n            this._refreshElements(newNode.parent);\n        }\n\n        return newNode;\n    }\n\n    public removeNode(node: Node): JQuery {\n        if (!node) {\n            throw Error(NODE_PARAM_IS_EMPTY);\n        }\n\n        if (!node.parent) {\n            throw Error(\"Node has no parent\");\n        }\n\n        this.selectNodeHandler.removeFromSelection(node, true); // including children\n\n        const parent = node.parent;\n        node.remove();\n        this._refreshElements(parent);\n\n        return this.element;\n    }\n\n    public appendNode(newNodeInfo: NodeData, parentNodeParam?: Node): Node {\n        const parentNode = parentNodeParam || this.tree;\n\n        const node = parentNode.append(newNodeInfo);\n\n        this._refreshElements(parentNode);\n\n        return node;\n    }\n\n    public prependNode(newNodeInfo: NodeData, parentNodeParam?: Node): Node {\n        const parentNode = parentNodeParam ?? this.tree;\n\n        const node = parentNode.prepend(newNodeInfo);\n\n        this._refreshElements(parentNode);\n\n        return node;\n    }\n\n    public updateNode(node: Node, data: NodeData): JQuery {\n        if (!node) {\n            throw Error(NODE_PARAM_IS_EMPTY);\n        }\n\n        const idIsChanged =\n            typeof data === \"object\" && data.id && data.id !== node.id;\n\n        if (idIsChanged) {\n            this.tree.removeNodeFromIndex(node);\n        }\n\n        node.setData(data);\n\n        if (idIsChanged) {\n            this.tree.addNodeToIndex(node);\n        }\n\n        if (\n            typeof data === \"object\" &&\n            data[\"children\"] &&\n            data[\"children\"] instanceof Array\n        ) {\n            node.removeChildren();\n\n            if (data.children.length) {\n                node.loadFromData(data.children);\n            }\n        }\n\n        const mustSetFocus = this.selectNodeHandler.isFocusOnTree();\n        const mustSelect = this.isSelectedNodeInSubtree(node);\n\n        this._refreshElements(node);\n\n        if (mustSelect) {\n            this.selectCurrentNode(mustSetFocus);\n        }\n\n        return this.element;\n    }\n\n    private isSelectedNodeInSubtree(subtree: Node): boolean {\n        const selectedNode = this.getSelectedNode();\n\n        if (!selectedNode) {\n            return false;\n        } else {\n            return subtree === selectedNode || subtree.isParentOf(selectedNode);\n        }\n    }\n\n    public moveNode(node: Node, targetNode: Node, position: string): JQuery {\n        if (!node) {\n            throw Error(NODE_PARAM_IS_EMPTY);\n        }\n\n        if (!targetNode) {\n            throw Error(PARAM_IS_EMPTY + \"targetNode\");\n        }\n\n        const positionIndex = getPosition(position);\n\n        if (positionIndex !== undefined) {\n            this.tree.moveNode(node, targetNode, positionIndex);\n            this._refreshElements(null);\n        }\n\n        return this.element;\n    }\n\n    public getStateFromStorage(): SavedState | null {\n        return this.saveStateHandler.getStateFromStorage();\n    }\n\n    public addToSelection(node: Node, mustSetFocus?: boolean): JQuery {\n        if (!node) {\n            throw Error(NODE_PARAM_IS_EMPTY);\n        }\n\n        this.selectNodeHandler.addToSelection(node);\n\n        this._getNodeElementForNode(node).select(\n            mustSetFocus === undefined ? true : mustSetFocus\n        );\n\n        this.saveState();\n\n        return this.element;\n    }\n\n    public getSelectedNodes(): Node[] {\n        return this.selectNodeHandler.getSelectedNodes();\n    }\n\n    public isNodeSelected(node: Node): boolean {\n        if (!node) {\n            throw Error(NODE_PARAM_IS_EMPTY);\n        }\n\n        return this.selectNodeHandler.isNodeSelected(node);\n    }\n\n    public removeFromSelection(node: Node): JQuery {\n        if (!node) {\n            throw Error(NODE_PARAM_IS_EMPTY);\n        }\n\n        this.selectNodeHandler.removeFromSelection(node);\n\n        this._getNodeElementForNode(node).deselect();\n        this.saveState();\n\n        return this.element;\n    }\n\n    public scrollToNode(node: Node): JQuery {\n        if (!node) {\n            throw Error(NODE_PARAM_IS_EMPTY);\n        }\n\n        const nodeOffset = jQuery(node.element).offset();\n        const nodeTop = nodeOffset ? nodeOffset.top : 0;\n\n        const treeOffset = this.$el.offset();\n        const treeTop = treeOffset ? treeOffset.top : 0;\n\n        const top = nodeTop - treeTop;\n\n        this.scrollHandler.scrollToY(top);\n\n        return this.element;\n    }\n\n    public getState(): SavedState | null {\n        return this.saveStateHandler.getState();\n    }\n\n    public setState(state: SavedState): JQuery {\n        this.saveStateHandler.setInitialState(state);\n        this._refreshElements(null);\n\n        return this.element;\n    }\n\n    public setOption(option: string, value: unknown): JQuery {\n        (this.options as Record<string, unknown>)[option] = value;\n        return this.element;\n    }\n\n    public moveDown(): JQuery {\n        const selectedNode = this.getSelectedNode();\n        if (selectedNode) {\n            this.keyHandler.moveDown(selectedNode);\n        }\n\n        return this.element;\n    }\n\n    public moveUp(): JQuery {\n        const selectedNode = this.getSelectedNode();\n        if (selectedNode) {\n            this.keyHandler.moveUp(selectedNode);\n        }\n\n        return this.element;\n    }\n\n    public getVersion(): string {\n        return __version__;\n    }\n\n    public _triggerEvent(\n        eventName: string,\n        values?: DefaultRecord\n    ): JQuery.Event {\n        const event = jQuery.Event(eventName, values);\n        this.element.trigger(event);\n        return event;\n    }\n\n    public _openNode(\n        node: Node,\n        slide = true,\n        onFinished: OnFinishOpenNode | null\n    ): void {\n        const doOpenNode = (\n            _node: Node,\n            _slide: any,\n            _onFinished: OnFinishOpenNode | null\n        ): void => {\n            const folderElement = new FolderElement(_node, this);\n            folderElement.open(\n                _onFinished,\n                _slide,\n                this.options.animationSpeed\n            );\n        };\n\n        if (node.isFolder() || node.isEmptyFolder) {\n            if (node.load_on_demand) {\n                this.loadFolderOnDemand(node, slide, onFinished);\n            } else {\n                let parent = node.parent;\n\n                while (parent) {\n                    // nb: do not open root element\n                    if (parent.parent) {\n                        doOpenNode(parent, false, null);\n                    }\n                    parent = parent.parent;\n                }\n\n                doOpenNode(node, slide, onFinished);\n                this.saveState();\n            }\n        }\n    }\n\n    /*\n    Redraw the tree or part of the tree.\n     from_node: redraw this subtree\n    */\n    public _refreshElements(fromNode: Node | null): void {\n        this.renderer.render(fromNode);\n\n        this._triggerEvent(\"tree.refresh\");\n    }\n\n    public _getNodeElementForNode(node: Node): NodeElement {\n        if (node.isFolder()) {\n            return new FolderElement(node, this);\n        } else {\n            return new NodeElement(node, this);\n        }\n    }\n\n    public _getNodeElement($element: JQuery<HTMLElement>): NodeElement | null {\n        const node = this.getNode($element);\n        if (node) {\n            return this._getNodeElementForNode(node);\n        } else {\n            return null;\n        }\n    }\n\n    public _containsElement(element: HTMLElement): boolean {\n        const node = this.getNode(jQuery(element));\n\n        return node != null && node.tree === this.tree;\n    }\n\n    public _getScrollLeft(): number {\n        return this.scrollHandler.getScrollLeft();\n    }\n\n    public init(): void {\n        super.init();\n\n        this.element = this.$el;\n        this.isInitialized = false;\n\n        this.options.rtl = this.getRtlOption();\n\n        if (this.options.closedIcon == null) {\n            this.options.closedIcon = this.getDefaultClosedIcon();\n        }\n\n        this.renderer = new ElementsRenderer(this);\n        this.dataLoader = new DataLoader(this);\n        this.saveStateHandler = new SaveStateHandler(this);\n        this.selectNodeHandler = new SelectNodeHandler(this);\n        this.dndHandler = new DragAndDropHandler(this);\n        this.scrollHandler = new ScrollHandler(this);\n        this.keyHandler = new KeyHandler(this);\n\n        this.initData();\n\n        this.element.on(\"click\", this.handleClick);\n        this.element.on(\"dblclick\", this.handleDblclick);\n\n        if (this.options.useContextMenu) {\n            this.element.on(\"contextmenu\", this.handleContextmenu);\n        }\n    }\n\n    public deinit(): void {\n        this.element.empty();\n        this.element.off();\n\n        this.keyHandler.deinit();\n\n        this.tree = new Node({}, true);\n\n        super.deinit();\n    }\n\n    protected mouseCapture(positionInfo: PositionInfo): boolean | null {\n        if (this.options.dragAndDrop) {\n            return this.dndHandler.mouseCapture(positionInfo);\n        } else {\n            return false;\n        }\n    }\n\n    protected mouseStart(positionInfo: PositionInfo): boolean {\n        if (this.options.dragAndDrop) {\n            return this.dndHandler.mouseStart(positionInfo);\n        } else {\n            return false;\n        }\n    }\n\n    protected mouseDrag(positionInfo: PositionInfo): boolean {\n        if (this.options.dragAndDrop) {\n            const result = this.dndHandler.mouseDrag(positionInfo);\n\n            this.scrollHandler.checkScrolling();\n            return result;\n        } else {\n            return false;\n        }\n    }\n\n    protected mouseStop(positionInfo: PositionInfo): boolean {\n        if (this.options.dragAndDrop) {\n            return this.dndHandler.mouseStop(positionInfo);\n        } else {\n            return false;\n        }\n    }\n\n    protected getMouseDelay(): number {\n        return this.options.startDndDelay ?? 0;\n    }\n\n    private initData(): void {\n        if (this.options.data) {\n            this.doLoadData(this.options.data, null);\n        } else {\n            const dataUrl = this.getDataUrlInfo(null);\n\n            if (dataUrl) {\n                this.doLoadDataFromUrl(null, null, null);\n            } else {\n                this.doLoadData([], null);\n            }\n        }\n    }\n\n    private getDataUrlInfo(node: Node | null): JQuery.AjaxSettings | null {\n        const dataUrl =\n            this.options.dataUrl || (this.element.data(\"url\") as string | null);\n\n        const getUrlFromString = (url: string): JQuery.AjaxSettings => {\n            const urlInfo: JQuery.AjaxSettings = { url };\n\n            setUrlInfoData(urlInfo);\n\n            return urlInfo;\n        };\n\n        const setUrlInfoData = (urlInfo: JQuery.AjaxSettings): void => {\n            if (node?.id) {\n                // Load on demand of a subtree; add node parameter\n                const data = { node: node.id };\n                urlInfo[\"data\"] = data;\n            } else {\n                // Add selected_node parameter\n                const selectedNodeId = this.getNodeIdToBeSelected();\n                if (selectedNodeId) {\n                    const data = { selected_node: selectedNodeId };\n                    urlInfo[\"data\"] = data;\n                }\n            }\n        };\n\n        if (typeof dataUrl === \"function\") {\n            return dataUrl(node);\n        } else if (typeof dataUrl === \"string\") {\n            return getUrlFromString(dataUrl);\n        } else if (dataUrl && typeof dataUrl === \"object\") {\n            setUrlInfoData(dataUrl);\n            return dataUrl;\n        } else {\n            return null;\n        }\n    }\n\n    private getNodeIdToBeSelected(): NodeId | null {\n        if (this.options.saveState) {\n            return this.saveStateHandler.getNodeIdToBeSelected();\n        } else {\n            return null;\n        }\n    }\n\n    private initTree(data: any): void {\n        const doInit = (): void => {\n            if (!this.isInitialized) {\n                this.isInitialized = true;\n                this._triggerEvent(\"tree.init\");\n            }\n        };\n\n        if (!this.options.nodeClass) {\n            return;\n        }\n\n        this.tree = new this.options.nodeClass(\n            null,\n            true,\n            this.options.nodeClass\n        );\n\n        this.selectNodeHandler.clear();\n\n        this.tree.loadFromData(data);\n\n        const mustLoadOnDemand = this.setInitialState();\n\n        this._refreshElements(null);\n\n        if (!mustLoadOnDemand) {\n            doInit();\n        } else {\n            // Load data on demand and then init the tree\n            this.setInitialStateOnDemand(doInit);\n        }\n    }\n\n    // Set initial state, either by restoring the state or auto-opening nodes\n    // result: must load nodes on demand?\n    private setInitialState(): boolean {\n        const restoreState = (): boolean[] => {\n            // result: is state restored, must load on demand?\n            if (!this.options.saveState) {\n                return [false, false];\n            } else {\n                const state = this.saveStateHandler.getStateFromStorage();\n\n                if (!state) {\n                    return [false, false];\n                } else {\n                    const mustLoadOnDemand = this.saveStateHandler.setInitialState(\n                        state\n                    );\n\n                    // return true: the state is restored\n                    return [true, mustLoadOnDemand];\n                }\n            }\n        };\n\n        const autoOpenNodes = (): boolean => {\n            // result: must load on demand?\n            if (this.options.autoOpen === false) {\n                return false;\n            }\n\n            const maxLevel = this.getAutoOpenMaxLevel();\n            let mustLoadOnDemand = false;\n\n            this.tree.iterate((node: Node, level: number) => {\n                if (node.load_on_demand) {\n                    mustLoadOnDemand = true;\n                    return false;\n                } else if (!node.hasChildren()) {\n                    return false;\n                } else {\n                    node.is_open = true;\n                    return level !== maxLevel;\n                }\n            });\n\n            return mustLoadOnDemand;\n        };\n\n        let [isRestored, mustLoadOnDemand] = restoreState(); // eslint-disable-line prefer-const\n\n        if (!isRestored) {\n            mustLoadOnDemand = autoOpenNodes();\n        }\n\n        return mustLoadOnDemand;\n    }\n\n    // Set the initial state for nodes that are loaded on demand\n    // Call cb_finished when done\n    private setInitialStateOnDemand(cbFinished: () => void): void {\n        const restoreState = (): boolean => {\n            if (!this.options.saveState) {\n                return false;\n            } else {\n                const state = this.saveStateHandler.getStateFromStorage();\n\n                if (!state) {\n                    return false;\n                } else {\n                    this.saveStateHandler.setInitialStateOnDemand(\n                        state,\n                        cbFinished\n                    );\n\n                    return true;\n                }\n            }\n        };\n\n        const autoOpenNodes = (): void => {\n            const maxLevel = this.getAutoOpenMaxLevel();\n            let loadingCount = 0;\n\n            const loadAndOpenNode = (node: Node): void => {\n                loadingCount += 1;\n                this._openNode(node, false, () => {\n                    loadingCount -= 1;\n                    openNodes();\n                });\n            };\n\n            const openNodes = (): void => {\n                this.tree.iterate((node: Node, level: number) => {\n                    if (node.load_on_demand) {\n                        if (!node.is_loading) {\n                            loadAndOpenNode(node);\n                        }\n\n                        return false;\n                    } else {\n                        this._openNode(node, false, null);\n\n                        return level !== maxLevel;\n                    }\n                });\n\n                if (loadingCount === 0) {\n                    cbFinished();\n                }\n            };\n\n            openNodes();\n        };\n\n        if (!restoreState()) {\n            autoOpenNodes();\n        }\n    }\n\n    private getAutoOpenMaxLevel(): number {\n        if (this.options.autoOpen === true) {\n            return -1;\n        } else if (typeof this.options.autoOpen === \"number\") {\n            return this.options.autoOpen;\n        } else if (typeof this.options.autoOpen === \"string\") {\n            return parseInt(this.options.autoOpen, 10);\n        } else {\n            return 0;\n        }\n    }\n\n    private handleClick = (e: JQuery.ClickEvent): void => {\n        const clickTarget = this.getClickTarget(e.target);\n\n        if (clickTarget) {\n            if (clickTarget.type === \"button\") {\n                this.toggle(clickTarget.node, this.options.slide);\n\n                e.preventDefault();\n                e.stopPropagation();\n            } else if (clickTarget.type === \"label\") {\n                const node = clickTarget.node;\n                const event = this._triggerEvent(\"tree.click\", {\n                    node,\n                    click_event: e,\n                });\n\n                if (!event.isDefaultPrevented()) {\n                    this.doSelectNode(node);\n                }\n            }\n        }\n    };\n\n    private handleDblclick = (e: JQuery.DoubleClickEvent): void => {\n        const clickTarget = this.getClickTarget(e.target);\n\n        if (clickTarget?.type === \"label\") {\n            this._triggerEvent(\"tree.dblclick\", {\n                node: clickTarget.node,\n                click_event: e,\n            });\n        }\n    };\n\n    private getClickTarget(element: EventTarget): ClickTarget | null {\n        const $target = jQuery(element);\n\n        const $button = $target.closest(\".jqtree-toggler\");\n\n        if ($button.length) {\n            const node = this.getNode($button as JQuery<HTMLElement>);\n\n            if (node) {\n                return {\n                    type: \"button\",\n                    node,\n                };\n            }\n        } else {\n            const $el = $target.closest(\".jqtree-element\");\n            if ($el.length) {\n                const node = this.getNode($el as JQuery<HTMLElement>);\n                if (node) {\n                    return {\n                        type: \"label\",\n                        node,\n                    };\n                }\n            }\n        }\n\n        return null;\n    }\n\n    private getNode($element: JQuery<HTMLElement>): null | Node {\n        const $li = $element.closest(\"li.jqtree_common\");\n        if ($li.length === 0) {\n            return null;\n        } else {\n            return $li.data(\"node\") as Node;\n        }\n    }\n\n    private handleContextmenu = (e: JQuery.ContextMenuEvent) => {\n        const $div = jQuery(e.target).closest(\"ul.jqtree-tree .jqtree-element\");\n        if ($div.length) {\n            const node = this.getNode($div);\n            if (node) {\n                e.preventDefault();\n                e.stopPropagation();\n\n                this._triggerEvent(\"tree.contextmenu\", {\n                    node,\n                    click_event: e,\n                });\n                return false;\n            }\n        }\n\n        return null;\n    };\n\n    private saveState(): void {\n        if (this.options.saveState) {\n            this.saveStateHandler.saveState();\n        }\n    }\n\n    private selectCurrentNode(mustSetFocus: boolean): void {\n        const node = this.getSelectedNode();\n        if (node) {\n            const nodeElement = this._getNodeElementForNode(node);\n            if (nodeElement) {\n                nodeElement.select(mustSetFocus);\n            }\n        }\n    }\n\n    private deselectCurrentNode(): void {\n        const node = this.getSelectedNode();\n        if (node) {\n            this.removeFromSelection(node);\n        }\n    }\n\n    private getDefaultClosedIcon(): string {\n        if (this.options.rtl) {\n            // triangle to the left\n            return \"&#x25c0;\";\n        } else {\n            // triangle to the right\n            return \"&#x25ba;\";\n        }\n    }\n\n    private getRtlOption(): boolean {\n        if (this.options.rtl != null) {\n            return this.options.rtl;\n        } else {\n            const dataRtl = this.element.data(\"rtl\") as unknown;\n\n            if (\n                dataRtl !== null &&\n                dataRtl !== false &&\n                dataRtl !== undefined\n            ) {\n                return true;\n            } else {\n                return false;\n            }\n        }\n    }\n\n    private doSelectNode(\n        node: Node | null,\n        optionsParam?: SelectNodeOptions\n    ): void {\n        const saveState = (): void => {\n            if (this.options.saveState) {\n                this.saveStateHandler.saveState();\n            }\n        };\n\n        if (!node) {\n            // Called with empty node -> deselect current node\n            this.deselectCurrentNode();\n            saveState();\n            return;\n        }\n        const defaultOptions = { mustSetFocus: true, mustToggle: true };\n        const selectOptions = { ...defaultOptions, ...(optionsParam || {}) };\n\n        const canSelect = (): boolean => {\n            if (this.options.onCanSelectNode) {\n                return (\n                    this.options.selectable === true &&\n                    this.options.onCanSelectNode(node)\n                );\n            } else {\n                return this.options.selectable === true;\n            }\n        };\n\n        const openParents = (): void => {\n            const parent = node.parent;\n\n            if (parent && parent.parent && !parent.is_open) {\n                this.openNode(parent, false);\n            }\n        };\n\n        if (!canSelect()) {\n            return;\n        }\n\n        if (this.selectNodeHandler.isNodeSelected(node)) {\n            if (selectOptions.mustToggle) {\n                this.deselectCurrentNode();\n                this._triggerEvent(\"tree.select\", {\n                    node: null,\n                    previous_node: node,\n                });\n            }\n        } else {\n            const deselectedNode = this.getSelectedNode() || null;\n            this.deselectCurrentNode();\n            this.addToSelection(node, selectOptions.mustSetFocus);\n\n            this._triggerEvent(\"tree.select\", {\n                node,\n                deselected_node: deselectedNode,\n            });\n            openParents();\n        }\n\n        saveState();\n    }\n\n    private doLoadData(data: NodeData[] | null, parentNode: Node | null): void {\n        if (!data) {\n            return;\n        } else {\n            this._triggerEvent(\"tree.load_data\", { tree_data: data });\n\n            if (parentNode) {\n                this.deselectNodes(parentNode);\n                this.loadSubtree(data, parentNode);\n            } else {\n                this.initTree(data);\n            }\n\n            if (this.isDragging()) {\n                this.dndHandler.refresh();\n            }\n        }\n    }\n\n    private deselectNodes(parentNode: Node): void {\n        const selectedNodesUnderParent = this.selectNodeHandler.getSelectedNodesUnder(\n            parentNode\n        );\n        for (const n of selectedNodesUnderParent) {\n            this.selectNodeHandler.removeFromSelection(n);\n        }\n    }\n\n    private loadSubtree(data: any[], parentNode: Node): void {\n        parentNode.loadFromData(data);\n\n        parentNode.load_on_demand = false;\n        parentNode.is_loading = false;\n\n        this._refreshElements(parentNode);\n    }\n\n    private doLoadDataFromUrl(\n        urlInfoParam: string | JQuery.AjaxSettings | null,\n        parentNode: Node | null,\n        onFinished: HandleFinishedLoading | null\n    ): void {\n        const urlInfo = urlInfoParam || this.getDataUrlInfo(parentNode);\n\n        this.dataLoader.loadFromUrl(urlInfo, parentNode, onFinished);\n    }\n\n    private loadFolderOnDemand(\n        node: Node,\n        slide = true,\n        onFinished: OnFinishOpenNode | null\n    ): void {\n        node.is_loading = true;\n\n        this.doLoadDataFromUrl(null, node, () => {\n            this._openNode(node, slide, onFinished);\n        });\n    }\n}\n\nSimpleWidget.register(JqTreeWidget, \"tree\");\n"],"names":["jQuery","jQueryProxy[\"default\"]","jQueryProxy","__version__"],"mappings":"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"}