{"version":3,"file":"tree.jquery.debug.js","sources":["src/version.ts","src/node.ts","src/dragAndDropHandler.ts","src/util.ts","src/elementsRenderer.ts","src/dataLoader.ts","src/keyHandler.ts","src/simple.widget.ts","src/mouse.widget.ts","src/saveStateHandler.ts","src/scrollHandler.ts","src/selectNodeHandler.ts","src/nodeElement.ts","src/tree.jquery.ts"],"sourcesContent":["const version = \"1.7.1\";\n\nexport default version;\n","interface NodeRecordWithChildren extends NodeRecord {\n    children: NodeData[];\n}\n\nexport enum Position {\n    Before = 1,\n    After,\n    Inside,\n    None,\n}\n\nconst positionNames: Record<string, Position> = {\n    before: Position.Before,\n    after: Position.After,\n    inside: Position.Inside,\n    none: Position.None,\n};\n\ntype IterateCallback = (node: Node, level: number) => boolean;\n\nexport const getPositionName = (position: Position): string => {\n    for (const name in positionNames) {\n        if (Object.prototype.hasOwnProperty.call(positionNames, name)) {\n            if (positionNames[name] === position) {\n                return name;\n            }\n        }\n    }\n\n    return \"\";\n};\n\nexport const getPosition = (name: string): Position | undefined =>\n    positionNames[name];\n\nconst isNodeRecordWithChildren = (\n    data: NodeData\n): data is NodeRecordWithChildren =>\n    typeof data === \"object\" &&\n    \"children\" in data &&\n    data[\"children\"] instanceof Array;\n\nexport class Node implements INode {\n    public id?: NodeId;\n    public name: string;\n    public children: Node[];\n    public parent: Node | null;\n    public idMapping: Map<NodeId, Node>;\n    public tree?: Node;\n    public nodeClass?: typeof Node;\n    public load_on_demand: boolean;\n    public is_open: boolean;\n    public element: HTMLElement;\n    public is_loading: boolean;\n    public isEmptyFolder: boolean;\n\n    [key: string]: unknown;\n\n    constructor(o: NodeData | null = null, isRoot = false, nodeClass = Node) {\n        this.name = \"\";\n        this.isEmptyFolder = false;\n        this.load_on_demand = false;\n\n        this.setData(o);\n\n        this.children = [];\n        this.parent = null;\n\n        if (isRoot) {\n            this.idMapping = new Map<NodeId, Node>();\n            this.tree = this;\n            this.nodeClass = nodeClass;\n        }\n    }\n\n    /*\n    Set the data of this node.\n\n    setData(string): set the name of the node\n    setdata(object): set attributes of the node\n\n    Examples:\n        setdata('node1')\n\n        setData({ name: 'node1', id: 1});\n\n        setData({ name: 'node2', id: 2, color: 'green'});\n\n    * This is an internal function; it is not in the docs\n    * Does not remove existing node values\n    */\n    public setData(o: NodeData | null): void {\n        if (!o) {\n            return;\n        } else if (typeof o === \"string\") {\n            this.name = o;\n        } else if (typeof o === \"object\") {\n            for (const key in o) {\n                if (Object.prototype.hasOwnProperty.call(o, key)) {\n                    const value = o[key];\n\n                    if (key === \"label\" || key === \"name\") {\n                        // You can use the 'label' key instead of 'name'; this is a legacy feature\n                        if (typeof value === \"string\") {\n                            this.name = value;\n                        }\n                    } else if (key !== \"children\" && key !== \"parent\") {\n                        // You can't update the children or the parent using this function\n                        this[key] = value;\n                    }\n                }\n            }\n        }\n    }\n\n    /*\n    Create tree from data.\n\n    Structure of data is:\n    [\n        {\n            name: 'node1',\n            children: [\n                { name: 'child1' },\n                { name: 'child2' }\n            ]\n        },\n        {\n            name: 'node2'\n        }\n    ]\n    */\n    public loadFromData(data: NodeData[]): Node {\n        this.removeChildren();\n\n        for (const o of data) {\n            const node = this.createNode(o);\n            this.addChild(node);\n\n            if (isNodeRecordWithChildren(o)) {\n                if (o.children.length === 0) {\n                    node.isEmptyFolder = true;\n                } else {\n                    node.loadFromData(o.children);\n                }\n            }\n        }\n\n        return this;\n    }\n\n    /*\n    Add child.\n\n    tree.addChild(\n        new Node('child1')\n    );\n    */\n    public addChild(node: Node): void {\n        this.children.push(node);\n        node.setParent(this);\n    }\n\n    /*\n    Add child at position. Index starts at 0.\n\n    tree.addChildAtPosition(\n        new Node('abc'),\n        1\n    );\n    */\n    public addChildAtPosition(node: Node, index: number): void {\n        this.children.splice(index, 0, node);\n        node.setParent(this);\n    }\n\n    /*\n    Remove child. This also removes the children of the node.\n\n    tree.removeChild(tree.children[0]);\n    */\n    public removeChild(node: Node): void {\n        // remove children from the index\n        node.removeChildren();\n\n        this.doRemoveChild(node);\n    }\n\n    /*\n    Get child index.\n\n    var index = getChildIndex(node);\n    */\n    public getChildIndex(node: Node): number {\n        return this.children.indexOf(node);\n    }\n\n    /*\n    Does the tree have children?\n\n    if (tree.hasChildren()) {\n        //\n    }\n    */\n    public hasChildren(): boolean {\n        return this.children.length !== 0;\n    }\n\n    public isFolder(): boolean {\n        return this.hasChildren() || this.load_on_demand;\n    }\n\n    /*\n    Iterate over all the nodes in the tree.\n\n    Calls callback with (node, level).\n\n    The callback must return true to continue the iteration on current node.\n\n    tree.iterate(\n        function(node, level) {\n           console.log(node.name);\n\n           // stop iteration after level 2\n           return (level <= 2);\n        }\n    );\n\n    */\n    public iterate(callback: IterateCallback): void {\n        const _iterate = (node: Node, level: number): void => {\n            if (node.children) {\n                for (const child of node.children) {\n                    const result = callback(child, level);\n\n                    if (result && child.hasChildren()) {\n                        _iterate(child, level + 1);\n                    }\n                }\n            }\n        };\n\n        _iterate(this, 0);\n    }\n\n    /*\n    Move node relative to another node.\n\n    Argument position: Position.BEFORE, Position.AFTER or Position.Inside\n\n    // move node1 after node2\n    tree.moveNode(node1, node2, Position.AFTER);\n    */\n    public moveNode(\n        movedNode: Node,\n        targetNode: Node,\n        position: Position\n    ): boolean {\n        if (!movedNode.parent || movedNode.isParentOf(targetNode)) {\n            // - Node is parent of target node\n            // - Or, parent is empty\n            return false;\n        } else {\n            movedNode.parent.doRemoveChild(movedNode);\n\n            switch (position) {\n                case Position.After: {\n                    if (targetNode.parent) {\n                        targetNode.parent.addChildAtPosition(\n                            movedNode,\n                            targetNode.parent.getChildIndex(targetNode) + 1\n                        );\n                        return true;\n                    }\n                    return false;\n                }\n\n                case Position.Before: {\n                    if (targetNode.parent) {\n                        targetNode.parent.addChildAtPosition(\n                            movedNode,\n                            targetNode.parent.getChildIndex(targetNode)\n                        );\n                        return true;\n                    }\n                    return false;\n                }\n\n                case Position.Inside: {\n                    // move inside as first child\n                    targetNode.addChildAtPosition(movedNode, 0);\n                    return true;\n                }\n\n                default:\n                    return false;\n            }\n        }\n    }\n\n    /*\n    Get the tree as data.\n    */\n    public getData(includeParent = false): NodeRecord[] {\n        const getDataFromNodes = (nodes: Node[]): Record<string, unknown>[] => {\n            return nodes.map((node) => {\n                const tmpNode: Record<string, unknown> = {};\n\n                for (const k in node) {\n                    if (\n                        [\n                            \"parent\",\n                            \"children\",\n                            \"element\",\n                            \"idMapping\",\n                            \"load_on_demand\",\n                            \"nodeClass\",\n                            \"tree\",\n                            \"isEmptyFolder\",\n                        ].indexOf(k) === -1 &&\n                        Object.prototype.hasOwnProperty.call(node, k)\n                    ) {\n                        const v = node[k];\n                        tmpNode[k] = v;\n                    }\n                }\n\n                if (node.hasChildren()) {\n                    tmpNode[\"children\"] = getDataFromNodes(node.children);\n                }\n\n                return tmpNode;\n            });\n        };\n\n        if (includeParent) {\n            return getDataFromNodes([this]);\n        } else {\n            return getDataFromNodes(this.children);\n        }\n    }\n\n    public getNodeByName(name: string): Node | null {\n        return this.getNodeByCallback((node: Node) => node.name === name);\n    }\n\n    public getNodeByNameMustExist(name: string): Node {\n        const node = this.getNodeByCallback((n: Node) => n.name === name);\n\n        if (!node) {\n            throw `Node with name ${name} not found`;\n        }\n\n        return node;\n    }\n\n    public getNodeByCallback(callback: (node: Node) => boolean): Node | null {\n        let result: Node | null = null;\n\n        this.iterate((node: Node) => {\n            if (result) {\n                return false;\n            } else if (callback(node)) {\n                result = node;\n                return false;\n            } else {\n                return true;\n            }\n        });\n\n        return result;\n    }\n\n    public addAfter(nodeInfo: NodeData): Node | null {\n        if (!this.parent) {\n            return null;\n        } else {\n            const node = this.createNode(nodeInfo);\n\n            const childIndex = this.parent.getChildIndex(this);\n            this.parent.addChildAtPosition(node, childIndex + 1);\n\n            if (\n                isNodeRecordWithChildren(nodeInfo) &&\n                nodeInfo.children.length\n            ) {\n                node.loadFromData(nodeInfo.children);\n            }\n\n            return node;\n        }\n    }\n\n    public addBefore(nodeInfo: NodeData): Node | null {\n        if (!this.parent) {\n            return null;\n        } else {\n            const node = this.createNode(nodeInfo);\n\n            const childIndex = this.parent.getChildIndex(this);\n            this.parent.addChildAtPosition(node, childIndex);\n\n            if (\n                isNodeRecordWithChildren(nodeInfo) &&\n                nodeInfo.children.length\n            ) {\n                node.loadFromData(nodeInfo.children);\n            }\n\n            return node;\n        }\n    }\n\n    public addParent(nodeInfo: NodeData): Node | null {\n        if (!this.parent) {\n            return null;\n        } else {\n            const newParent = this.createNode(nodeInfo);\n\n            if (this.tree) {\n                newParent.setParent(this.tree);\n            }\n            const originalParent = this.parent;\n\n            for (const child of originalParent.children) {\n                newParent.addChild(child);\n            }\n\n            originalParent.children = [];\n            originalParent.addChild(newParent);\n            return newParent;\n        }\n    }\n\n    public remove(): void {\n        if (this.parent) {\n            this.parent.removeChild(this);\n            this.parent = null;\n        }\n    }\n\n    public append(nodeInfo: NodeData): Node {\n        const node = this.createNode(nodeInfo);\n        this.addChild(node);\n\n        if (isNodeRecordWithChildren(nodeInfo) && nodeInfo.children.length) {\n            node.loadFromData(nodeInfo.children);\n        }\n\n        return node;\n    }\n\n    public prepend(nodeInfo: NodeData): Node {\n        const node = this.createNode(nodeInfo);\n        this.addChildAtPosition(node, 0);\n\n        if (isNodeRecordWithChildren(nodeInfo) && nodeInfo.children.length) {\n            node.loadFromData(nodeInfo.children);\n        }\n\n        return node;\n    }\n\n    public isParentOf(node: Node): boolean {\n        let parent = node.parent;\n\n        while (parent) {\n            if (parent === this) {\n                return true;\n            }\n\n            parent = parent.parent;\n        }\n\n        return false;\n    }\n\n    public getLevel(): number {\n        let level = 0;\n        let node: Node = this; // eslint-disable-line @typescript-eslint/no-this-alias\n\n        while (node.parent) {\n            level += 1;\n            node = node.parent;\n        }\n\n        return level;\n    }\n\n    public getNodeById(nodeId: NodeId): Node | null {\n        return this.idMapping.get(nodeId) || null;\n    }\n\n    public addNodeToIndex(node: Node): void {\n        if (node.id != null) {\n            this.idMapping.set(node.id, node);\n        }\n    }\n\n    public removeNodeFromIndex(node: Node): void {\n        if (node.id != null) {\n            this.idMapping.delete(node.id);\n        }\n    }\n\n    public removeChildren(): void {\n        this.iterate((child: Node) => {\n            this.tree?.removeNodeFromIndex(child);\n            return true;\n        });\n\n        this.children = [];\n    }\n\n    public getPreviousSibling(): Node | null {\n        if (!this.parent) {\n            return null;\n        } else {\n            const previousIndex = this.parent.getChildIndex(this) - 1;\n            if (previousIndex >= 0) {\n                return this.parent.children[previousIndex] || null;\n            } else {\n                return null;\n            }\n        }\n    }\n\n    public getNextSibling(): Node | null {\n        if (!this.parent) {\n            return null;\n        } else {\n            const nextIndex = this.parent.getChildIndex(this) + 1;\n            if (nextIndex < this.parent.children.length) {\n                return this.parent.children[nextIndex] || null;\n            } else {\n                return null;\n            }\n        }\n    }\n\n    public getNodesByProperty(key: string, value: unknown): Node[] {\n        return this.filter((node: Node) => node[key] === value);\n    }\n\n    public filter(f: (node: Node) => boolean): Node[] {\n        const result: Node[] = [];\n\n        this.iterate((node: Node) => {\n            if (f(node)) {\n                result.push(node);\n            }\n\n            return true;\n        });\n\n        return result;\n    }\n\n    public getNextNode(includeChildren = true): Node | null {\n        if (includeChildren && this.hasChildren()) {\n            return this.children[0] || null;\n        } else if (!this.parent) {\n            return null;\n        } else {\n            const nextSibling = this.getNextSibling();\n\n            if (nextSibling) {\n                return nextSibling;\n            } else {\n                return this.parent.getNextNode(false);\n            }\n        }\n    }\n\n    public getNextVisibleNode(): Node | null {\n        if (this.hasChildren() && this.is_open) {\n            // First child\n            return this.children[0] || null;\n        } else {\n            if (!this.parent) {\n                return null;\n            } else {\n                const nextSibling = this.getNextSibling();\n                if (nextSibling) {\n                    // Next sibling\n                    return nextSibling;\n                } else {\n                    // Next node of parent\n                    return this.parent.getNextNode(false);\n                }\n            }\n        }\n    }\n\n    public getPreviousNode(): Node | null {\n        if (!this.parent) {\n            return null;\n        } else {\n            const previousSibling = this.getPreviousSibling();\n\n            if (!previousSibling) {\n                return this.getParent();\n            } else if (previousSibling.hasChildren()) {\n                return previousSibling.getLastChild();\n            } else {\n                return previousSibling;\n            }\n        }\n    }\n\n    public getPreviousVisibleNode(): Node | null {\n        if (!this.parent) {\n            return null;\n        } else {\n            const previousSibling = this.getPreviousSibling();\n\n            if (!previousSibling) {\n                return this.getParent();\n            } else if (\n                !previousSibling.hasChildren() ||\n                !previousSibling.is_open\n            ) {\n                // Previous sibling\n                return previousSibling;\n            } else {\n                // Last child of previous sibling\n                return previousSibling.getLastChild();\n            }\n        }\n    }\n\n    public getParent(): Node | null {\n        // Return parent except if it is the root node\n        if (!this.parent) {\n            return null;\n        } else if (!this.parent.parent) {\n            // Root node -> null\n            return null;\n        } else {\n            return this.parent;\n        }\n    }\n\n    public getLastChild(): Node | null {\n        if (!this.hasChildren()) {\n            return null;\n        } else {\n            const lastChild = this.children[this.children.length - 1];\n\n            if (!lastChild) {\n                return null;\n            }\n\n            if (!(lastChild.hasChildren() && lastChild.is_open)) {\n                return lastChild;\n            } else {\n                return lastChild?.getLastChild();\n            }\n        }\n    }\n\n    // Init Node from data without making it the root of the tree\n    public initFromData(data: NodeData): void {\n        const addNode = (nodeData: NodeData): void => {\n            this.setData(nodeData);\n\n            if (\n                isNodeRecordWithChildren(nodeData) &&\n                nodeData.children.length\n            ) {\n                addChildren(nodeData.children);\n            }\n        };\n\n        const addChildren = (childrenData: NodeData[]): void => {\n            for (const child of childrenData) {\n                const node = this.createNode();\n                node.initFromData(child);\n                this.addChild(node);\n            }\n        };\n\n        addNode(data);\n    }\n\n    private setParent(parent: Node): void {\n        this.parent = parent;\n        this.tree = parent.tree;\n        this.tree?.addNodeToIndex(this);\n    }\n\n    private doRemoveChild(node: Node): void {\n        this.children.splice(this.getChildIndex(node), 1);\n        this.tree?.removeNodeFromIndex(node);\n    }\n\n    private getNodeClass(): typeof Node {\n        return this.nodeClass || this?.tree?.nodeClass || Node;\n    }\n\n    private createNode(nodeData?: NodeData): Node {\n        const nodeClass = this.getNodeClass();\n        return new nodeClass(nodeData);\n    }\n}\n","import { getPositionName, Node, Position } from \"./node\";\nimport { DropHint, HitArea, PositionInfo } from \"./types\";\nimport { NodeElement } from \"./nodeElement\";\nimport { JqTreeWidget } from \"./tree.jquery\";\n\ninterface Dimensions {\n    left: number;\n    top: number;\n    right: number;\n    bottom: number;\n}\n\nexport class DragAndDropHandler {\n    public hitAreas: HitArea[];\n    public isDragging: boolean;\n    public currentItem: NodeElement | null;\n    public hoveredArea: HitArea | null;\n    public positionInfo: PositionInfo | null;\n\n    private treeWidget: JqTreeWidget;\n    private dragElement: DragElement | null;\n    private previousGhost: DropHint | null;\n    private openFolderTimer: number | null;\n\n    constructor(treeWidget: JqTreeWidget) {\n        this.treeWidget = treeWidget;\n\n        this.hoveredArea = null;\n        this.hitAreas = [];\n        this.isDragging = false;\n        this.currentItem = null;\n        this.positionInfo = null;\n    }\n\n    public mouseCapture(positionInfo: PositionInfo): boolean | null {\n        const $element = jQuery(positionInfo.target);\n\n        if (!this.mustCaptureElement($element)) {\n            return null;\n        }\n\n        if (\n            this.treeWidget.options.onIsMoveHandle &&\n            !this.treeWidget.options.onIsMoveHandle($element)\n        ) {\n            return null;\n        }\n\n        let nodeElement = this.treeWidget._getNodeElement($element);\n\n        if (nodeElement && this.treeWidget.options.onCanMove) {\n            if (!this.treeWidget.options.onCanMove(nodeElement.node)) {\n                nodeElement = null;\n            }\n        }\n\n        this.currentItem = nodeElement;\n        return this.currentItem != null;\n    }\n\n    public mouseStart(positionInfo: PositionInfo): boolean {\n        if (\n            !this.currentItem ||\n            positionInfo.pageX === undefined ||\n            positionInfo.pageY === undefined\n        ) {\n            return false;\n        }\n\n        this.refresh();\n\n        const offset = jQuery(positionInfo.target).offset();\n        const left = offset ? offset.left : 0;\n        const top = offset ? offset.top : 0;\n\n        const node = this.currentItem.node;\n\n        this.dragElement = new DragElement(\n            node.name,\n            positionInfo.pageX - left,\n            positionInfo.pageY - top,\n            this.treeWidget.element,\n            this.treeWidget.options.autoEscape ?? true\n        );\n\n        this.isDragging = true;\n        this.positionInfo = positionInfo;\n        this.currentItem.$element.addClass(\"jqtree-moving\");\n        return true;\n    }\n\n    public mouseDrag(positionInfo: PositionInfo): boolean {\n        if (\n            !this.currentItem ||\n            !this.dragElement ||\n            positionInfo.pageX === undefined ||\n            positionInfo.pageY === undefined\n        ) {\n            return false;\n        }\n\n        this.dragElement.move(positionInfo.pageX, positionInfo.pageY);\n        this.positionInfo = positionInfo;\n\n        const area = this.findHoveredArea(\n            positionInfo.pageX,\n            positionInfo.pageY\n        );\n\n        if (area && this.canMoveToArea(area)) {\n            if (!area.node.isFolder()) {\n                this.stopOpenFolderTimer();\n            }\n\n            if (this.hoveredArea !== area) {\n                this.hoveredArea = area;\n\n                // If this is a closed folder, start timer to open it\n                if (this.mustOpenFolderTimer(area)) {\n                    this.startOpenFolderTimer(area.node);\n                } else {\n                    this.stopOpenFolderTimer();\n                }\n\n                this.updateDropHint();\n            }\n        } else {\n            this.removeDropHint();\n            this.stopOpenFolderTimer();\n            this.hoveredArea = area;\n        }\n\n        if (!area) {\n            if (this.treeWidget.options.onDragMove) {\n                this.treeWidget.options.onDragMove(\n                    this.currentItem.node,\n                    positionInfo.originalEvent\n                );\n            }\n        }\n\n        return true;\n    }\n\n    public mouseStop(positionInfo: PositionInfo): boolean {\n        this.moveItem(positionInfo);\n        this.clear();\n        this.removeHover();\n        this.removeDropHint();\n        this.removeHitAreas();\n\n        const currentItem = this.currentItem;\n\n        if (this.currentItem) {\n            this.currentItem.$element.removeClass(\"jqtree-moving\");\n            this.currentItem = null;\n        }\n\n        this.isDragging = false;\n        this.positionInfo = null;\n\n        if (!this.hoveredArea && currentItem) {\n            if (this.treeWidget.options.onDragStop) {\n                this.treeWidget.options.onDragStop(\n                    currentItem.node,\n                    positionInfo.originalEvent\n                );\n            }\n        }\n\n        return false;\n    }\n\n    public refresh(): void {\n        this.removeHitAreas();\n\n        if (this.currentItem) {\n            this.generateHitAreas();\n\n            this.currentItem = this.treeWidget._getNodeElementForNode(\n                this.currentItem.node\n            );\n\n            if (this.isDragging) {\n                this.currentItem.$element.addClass(\"jqtree-moving\");\n            }\n        }\n    }\n\n    private generateHitAreas(): void {\n        if (!this.currentItem) {\n            this.hitAreas = [];\n        } else {\n            const hitAreasGenerator = new HitAreasGenerator(\n                this.treeWidget.tree,\n                this.currentItem.node,\n                this.getTreeDimensions().bottom\n            );\n            this.hitAreas = hitAreasGenerator.generate();\n        }\n    }\n\n    private mustCaptureElement($element: JQuery<HTMLElement>): boolean {\n        return !$element.is(\"input,select,textarea\");\n    }\n\n    private canMoveToArea(area: HitArea): boolean {\n        if (!this.treeWidget.options.onCanMoveTo) {\n            return true;\n        }\n\n        if (!this.currentItem) {\n            return false;\n        }\n\n        const positionName = getPositionName(area.position);\n\n        return this.treeWidget.options.onCanMoveTo(\n            this.currentItem.node,\n            area.node,\n            positionName\n        );\n    }\n\n    private removeHitAreas(): void {\n        this.hitAreas = [];\n    }\n\n    private clear(): void {\n        if (this.dragElement) {\n            this.dragElement.remove();\n            this.dragElement = null;\n        }\n    }\n\n    private removeDropHint(): void {\n        if (this.previousGhost) {\n            this.previousGhost.remove();\n        }\n    }\n\n    private removeHover(): void {\n        this.hoveredArea = null;\n    }\n\n    private findHoveredArea(x: number, y: number): HitArea | null {\n        const dimensions = this.getTreeDimensions();\n\n        if (\n            x < dimensions.left ||\n            y < dimensions.top ||\n            x > dimensions.right ||\n            y > dimensions.bottom\n        ) {\n            return null;\n        }\n\n        let low = 0;\n        let high = this.hitAreas.length;\n        while (low < high) {\n            const mid = (low + high) >> 1;\n            const area = this.hitAreas[mid];\n\n            if (!area) {\n                return null;\n            }\n\n            if (y < area.top) {\n                high = mid;\n            } else if (y > area.bottom) {\n                low = mid + 1;\n            } else {\n                return area;\n            }\n        }\n\n        return null;\n    }\n\n    private mustOpenFolderTimer(area: HitArea): boolean {\n        const node = area.node;\n\n        return (\n            node.isFolder() &&\n            !node.is_open &&\n            area.position === Position.Inside\n        );\n    }\n\n    private updateDropHint(): void {\n        if (!this.hoveredArea) {\n            return;\n        }\n\n        // remove previous drop hint\n        this.removeDropHint();\n\n        // add new drop hint\n        const nodeElement = this.treeWidget._getNodeElementForNode(\n            this.hoveredArea.node\n        );\n        this.previousGhost = nodeElement.addDropHint(this.hoveredArea.position);\n    }\n\n    private startOpenFolderTimer(folder: Node): void {\n        const openFolder = (): void => {\n            this.treeWidget._openNode(\n                folder,\n                this.treeWidget.options.slide,\n                () => {\n                    this.refresh();\n                    this.updateDropHint();\n                }\n            );\n        };\n\n        this.stopOpenFolderTimer();\n\n        const openFolderDelay = this.treeWidget.options.openFolderDelay;\n\n        if (openFolderDelay !== false) {\n            this.openFolderTimer = window.setTimeout(\n                openFolder,\n                openFolderDelay\n            );\n        }\n    }\n\n    private stopOpenFolderTimer(): void {\n        if (this.openFolderTimer) {\n            clearTimeout(this.openFolderTimer);\n            this.openFolderTimer = null;\n        }\n    }\n\n    private moveItem(positionInfo: PositionInfo): void {\n        if (\n            this.currentItem &&\n            this.hoveredArea &&\n            this.hoveredArea.position !== Position.None &&\n            this.canMoveToArea(this.hoveredArea)\n        ) {\n            const movedNode = this.currentItem.node;\n            const targetNode = this.hoveredArea.node;\n            const position = this.hoveredArea.position;\n            const previousParent = movedNode.parent;\n\n            if (position === Position.Inside) {\n                this.hoveredArea.node.is_open = true;\n            }\n\n            const doMove = (): void => {\n                this.treeWidget.tree.moveNode(movedNode, targetNode, position);\n                this.treeWidget.element.empty();\n                this.treeWidget._refreshElements(null);\n            };\n\n            const event = this.treeWidget._triggerEvent(\"tree.move\", {\n                move_info: {\n                    moved_node: movedNode,\n                    target_node: targetNode,\n                    position: getPositionName(position),\n                    previous_parent: previousParent,\n                    do_move: doMove,\n                    original_event: positionInfo.originalEvent,\n                },\n            });\n\n            if (!event.isDefaultPrevented()) {\n                doMove();\n            }\n        }\n    }\n\n    private getTreeDimensions(): Dimensions {\n        // Return the dimensions of the tree. Add a margin to the bottom to allow\n        // to drag-and-drop after the last element.\n        const offset = this.treeWidget.element.offset();\n\n        if (!offset) {\n            return { left: 0, top: 0, right: 0, bottom: 0 };\n        } else {\n            const el = this.treeWidget.element;\n            const width = el.width() || 0;\n            const height = el.height() || 0;\n            const left = offset.left + this.treeWidget._getScrollLeft();\n\n            return {\n                left,\n                top: offset.top,\n                right: left + width,\n                bottom: offset.top + height + 16,\n            };\n        }\n    }\n}\n\nabstract class VisibleNodeIterator {\n    private tree: Node;\n\n    constructor(tree: Node) {\n        this.tree = tree;\n    }\n\n    protected iterate(): void {\n        let isFirstNode = true;\n\n        const _iterateNode = (node: Node, nextNode: Node | null): void => {\n            let mustIterateInside =\n                (node.is_open || !node.element) && node.hasChildren();\n\n            let $element: JQuery<HTMLElement> | null = null;\n\n            if (node.element) {\n                $element = jQuery(node.element);\n\n                if (!$element.is(\":visible\")) {\n                    return;\n                }\n\n                if (isFirstNode) {\n                    this.handleFirstNode(node);\n                    isFirstNode = false;\n                }\n\n                if (!node.hasChildren()) {\n                    this.handleNode(node, nextNode, $element);\n                } else if (node.is_open) {\n                    if (!this.handleOpenFolder(node, $element)) {\n                        mustIterateInside = false;\n                    }\n                } else {\n                    this.handleClosedFolder(node, nextNode, $element);\n                }\n            }\n\n            if (mustIterateInside) {\n                const childrenLength = node.children.length;\n                node.children.forEach((_, i) => {\n                    const child = node.children[i];\n\n                    if (child) {\n                        if (i === childrenLength - 1) {\n                            _iterateNode(child, null);\n                        } else {\n                            const nextChild = node.children[i + 1];\n\n                            if (nextChild) {\n                                _iterateNode(child, nextChild);\n                            }\n                        }\n                    }\n                });\n\n                if (node.is_open && $element) {\n                    this.handleAfterOpenFolder(node, nextNode);\n                }\n            }\n        };\n\n        _iterateNode(this.tree, null);\n    }\n\n    protected abstract handleNode(\n        node: Node,\n        nextNode: Node | null,\n        $element: JQuery\n    ): void;\n\n    /*\n    override\n    return\n        - true: continue iterating\n        - false: stop iterating\n    */\n    protected abstract handleOpenFolder(node: Node, $element: JQuery): boolean;\n\n    protected abstract handleClosedFolder(\n        node: Node,\n        nextNode: Node | null,\n        $element: JQuery\n    ): void;\n\n    protected abstract handleAfterOpenFolder(\n        node: Node,\n        nextNode: Node | null\n    ): void;\n\n    protected abstract handleFirstNode(node: Node): void;\n}\n\nexport class HitAreasGenerator extends VisibleNodeIterator {\n    private currentNode: Node;\n    private treeBottom: number;\n    private positions: HitArea[];\n    private lastTop: number;\n\n    constructor(tree: Node, currentNode: Node, treeBottom: number) {\n        super(tree);\n\n        this.currentNode = currentNode;\n        this.treeBottom = treeBottom;\n    }\n\n    public generate(): HitArea[] {\n        this.positions = [];\n        this.lastTop = 0;\n\n        this.iterate();\n\n        return this.generateHitAreas(this.positions);\n    }\n\n    protected generateHitAreas(positions: HitArea[]): HitArea[] {\n        let previousTop = -1;\n        let group = [];\n        const hitAreas: HitArea[] = [];\n\n        for (const position of positions) {\n            if (position.top !== previousTop && group.length) {\n                if (group.length) {\n                    this.generateHitAreasForGroup(\n                        hitAreas,\n                        group,\n                        previousTop,\n                        position.top\n                    );\n                }\n\n                previousTop = position.top;\n                group = [];\n            }\n\n            group.push(position);\n        }\n\n        this.generateHitAreasForGroup(\n            hitAreas,\n            group,\n            previousTop,\n            this.treeBottom\n        );\n\n        return hitAreas;\n    }\n\n    protected handleOpenFolder(node: Node, $element: JQuery): boolean {\n        if (node === this.currentNode) {\n            // Cannot move inside current item\n            // Stop iterating\n            return false;\n        }\n\n        // Cannot move before current item\n        if (node.children[0] !== this.currentNode) {\n            this.addPosition(node, Position.Inside, this.getTop($element));\n        }\n\n        // Continue iterating\n        return true;\n    }\n\n    protected handleClosedFolder(\n        node: Node,\n        nextNode: Node,\n        $element: JQuery\n    ): void {\n        const top = this.getTop($element);\n\n        if (node === this.currentNode) {\n            // Cannot move after current item\n            this.addPosition(node, Position.None, top);\n        } else {\n            this.addPosition(node, Position.Inside, top);\n\n            // Cannot move before current item\n            if (nextNode !== this.currentNode) {\n                this.addPosition(node, Position.After, top);\n            }\n        }\n    }\n\n    protected handleFirstNode(node: Node): void {\n        if (node !== this.currentNode) {\n            this.addPosition(\n                node,\n                Position.Before,\n                this.getTop(jQuery(node.element))\n            );\n        }\n    }\n\n    protected handleAfterOpenFolder(node: Node, nextNode: Node): void {\n        if (node === this.currentNode || nextNode === this.currentNode) {\n            // Cannot move before or after current item\n            this.addPosition(node, Position.None, this.lastTop);\n        } else {\n            this.addPosition(node, Position.After, this.lastTop);\n        }\n    }\n\n    protected handleNode(node: Node, nextNode: Node, $element: JQuery): void {\n        const top = this.getTop($element);\n\n        if (node === this.currentNode) {\n            // Cannot move inside current item\n            this.addPosition(node, Position.None, top);\n        } else {\n            this.addPosition(node, Position.Inside, top);\n        }\n\n        if (nextNode === this.currentNode || node === this.currentNode) {\n            // Cannot move before or after current item\n            this.addPosition(node, Position.None, top);\n        } else {\n            this.addPosition(node, Position.After, top);\n        }\n    }\n\n    private getTop($element: JQuery<HTMLElement>): number {\n        const offset = $element.offset();\n\n        return offset ? offset.top : 0;\n    }\n\n    private addPosition(node: Node, position: number, top: number): void {\n        const area = {\n            top,\n            bottom: 0,\n            node,\n            position,\n        };\n\n        this.positions.push(area);\n        this.lastTop = top;\n    }\n\n    private generateHitAreasForGroup(\n        hitAreas: HitArea[],\n        positionsInGroup: HitArea[],\n        top: number,\n        bottom: number\n    ): void {\n        // limit positions in group\n        const positionCount = Math.min(positionsInGroup.length, 4);\n\n        const areaHeight = Math.round((bottom - top) / positionCount);\n        let areaTop = top;\n\n        let i = 0;\n        while (i < positionCount) {\n            const position = positionsInGroup[i];\n\n            if (position) {\n                hitAreas.push({\n                    top: areaTop,\n                    bottom: areaTop + areaHeight,\n                    node: position.node,\n                    position: position.position,\n                });\n            }\n\n            areaTop += areaHeight;\n            i += 1;\n        }\n    }\n}\n\nclass DragElement {\n    private offsetX: number;\n    private offsetY: number;\n    private $element: JQuery;\n\n    constructor(\n        nodeName: string,\n        offsetX: number,\n        offsetY: number,\n        $tree: JQuery,\n        autoEscape: boolean\n    ) {\n        this.offsetX = offsetX;\n        this.offsetY = offsetY;\n\n        this.$element = jQuery(\"<span>\").addClass(\n            \"jqtree-title jqtree-dragging\"\n        );\n\n        if (autoEscape) {\n            this.$element.text(nodeName);\n        } else {\n            this.$element.html(nodeName);\n        }\n\n        this.$element.css(\"position\", \"absolute\");\n        $tree.append(this.$element);\n    }\n\n    public move(pageX: number, pageY: number): void {\n        this.$element.offset({\n            left: pageX - this.offsetX,\n            top: pageY - this.offsetY,\n        });\n    }\n\n    public remove(): void {\n        this.$element.remove();\n    }\n}\n","export const isInt = (n: unknown): boolean =>\n    typeof n === \"number\" && n % 1 === 0;\n\nexport const isFunction = (v: unknown): boolean => typeof v === \"function\";\n\nexport const getBoolString = (value: unknown): string =>\n    value ? \"true\" : \"false\";\n","import { getBoolString } from \"./util\";\nimport { Node } from \"./node\";\nimport { JqTreeWidget } from \"./tree.jquery\";\n\ntype IconElement = string | HTMLElement | JQuery<HTMLElement>;\n\nexport default class ElementsRenderer {\n    public openedIconElement?: HTMLElement | Text;\n    public closedIconElement?: HTMLElement | Text;\n    private treeWidget: JqTreeWidget;\n\n    constructor(treeWidget: JqTreeWidget) {\n        this.treeWidget = treeWidget;\n\n        this.openedIconElement = this.createButtonElement(\n            treeWidget.options.openedIcon || \"+\",\n        );\n        this.closedIconElement = this.createButtonElement(\n            treeWidget.options.closedIcon || \"-\",\n        );\n    }\n\n    public render(fromNode: Node | null): void {\n        if (fromNode && fromNode.parent) {\n            this.renderFromNode(fromNode);\n        } else {\n            this.renderFromRoot();\n        }\n    }\n\n    public renderFromRoot(): void {\n        const $element = this.treeWidget.element;\n        $element.empty();\n\n        if ($element[0]) {\n            this.createDomElements(\n                $element[0],\n                this.treeWidget.tree.children,\n                true,\n                1,\n            );\n        }\n    }\n\n    public renderFromNode(node: Node): void {\n        // remember current li\n        const $previousLi = jQuery(node.element);\n\n        // create element\n        const li = this.createLi(node, node.getLevel());\n        this.attachNodeData(node, li);\n\n        // add element to dom\n        $previousLi.after(li);\n\n        // remove previous li\n        $previousLi.remove();\n\n        // create children\n        if (node.children) {\n            this.createDomElements(\n                li,\n                node.children,\n                false,\n                node.getLevel() + 1,\n            );\n        }\n    }\n\n    private createDomElements(\n        element: Element,\n        children: Node[],\n        isRootNode: boolean,\n        level: number,\n    ): void {\n        const ul = this.createUl(isRootNode);\n        element.appendChild(ul);\n\n        for (const child of children) {\n            const li = this.createLi(child, level);\n            ul.appendChild(li);\n\n            this.attachNodeData(child, li);\n\n            if (child.hasChildren()) {\n                this.createDomElements(li, child.children, false, level + 1);\n            }\n        }\n    }\n\n    private attachNodeData(node: Node, li: HTMLElement): void {\n        node.element = li;\n        jQuery(li).data(\"node\", node);\n    }\n\n    private createUl(isRootNode: boolean): HTMLUListElement {\n        let classString;\n        let role;\n\n        if (!isRootNode) {\n            classString = \"\";\n            role = \"group\";\n        } else {\n            classString = \"jqtree-tree\";\n            role = \"tree\";\n\n            if (this.treeWidget.options.rtl) {\n                classString += \" jqtree-rtl\";\n            }\n        }\n\n        if (this.treeWidget.options.dragAndDrop) {\n            classString += \" jqtree-dnd\";\n        }\n\n        const ul = document.createElement(\"ul\");\n        ul.className = `jqtree_common ${classString}`;\n\n        ul.setAttribute(\"role\", role);\n\n        return ul;\n    }\n\n    private createLi(node: Node, level: number): HTMLLIElement {\n        const isSelected = Boolean(\n            this.treeWidget.selectNodeHandler.isNodeSelected(node),\n        );\n\n        const mustShowFolder =\n            node.isFolder() ||\n            (node.isEmptyFolder && this.treeWidget.options.showEmptyFolder);\n\n        const li = mustShowFolder\n            ? this.createFolderLi(node, level, isSelected)\n            : this.createNodeLi(node, level, isSelected);\n\n        if (this.treeWidget.options.onCreateLi) {\n            this.treeWidget.options.onCreateLi(node, jQuery(li), isSelected);\n        }\n\n        return li;\n    }\n\n    private setTreeItemAriaAttributes(\n        element: HTMLElement,\n        name: string,\n        level: number,\n        isSelected: boolean,\n    ) {\n        element.setAttribute(\"aria-label\", name);\n        element.setAttribute(\"aria-level\", `${level}`);\n        element.setAttribute(\"aria-selected\", getBoolString(isSelected));\n        element.setAttribute(\"role\", \"treeitem\");\n    }\n\n    private createFolderLi(\n        node: Node,\n        level: number,\n        isSelected: boolean,\n    ): HTMLLIElement {\n        const buttonClasses = this.getButtonClasses(node);\n        const folderClasses = this.getFolderClasses(node, isSelected);\n\n        const iconElement = node.is_open\n            ? this.openedIconElement\n            : this.closedIconElement;\n\n        // li\n        const li = document.createElement(\"li\");\n        li.className = `jqtree_common ${folderClasses}`;\n        li.setAttribute(\"role\", \"none\");\n\n        // div\n        const div = document.createElement(\"div\");\n        div.className = \"jqtree-element jqtree_common\";\n        div.setAttribute(\"role\", \"none\");\n\n        li.appendChild(div);\n\n        // button link\n        const buttonLink = document.createElement(\"a\");\n        buttonLink.className = buttonClasses;\n\n        if (iconElement) {\n            buttonLink.appendChild(iconElement.cloneNode(true));\n        }\n\n        if (this.treeWidget.options.buttonLeft) {\n            div.appendChild(buttonLink);\n        }\n\n        // title span\n        const titleSpan = this.createTitleSpan(\n            node.name,\n            isSelected,\n            true,\n            level,\n        );\n        titleSpan.setAttribute(\"aria-expanded\", getBoolString(node.is_open));\n        div.appendChild(titleSpan);\n\n        if (!this.treeWidget.options.buttonLeft) {\n            div.appendChild(buttonLink);\n        }\n\n        return li;\n    }\n\n    private createNodeLi(\n        node: Node,\n        level: number,\n        isSelected: boolean,\n    ): HTMLLIElement {\n        const liClasses = [\"jqtree_common\"];\n\n        if (isSelected) {\n            liClasses.push(\"jqtree-selected\");\n        }\n\n        const classString = liClasses.join(\" \");\n\n        // li\n        const li = document.createElement(\"li\");\n        li.className = classString;\n        li.setAttribute(\"role\", \"none\");\n\n        // div\n        const div = document.createElement(\"div\");\n        div.className = \"jqtree-element jqtree_common\";\n        div.setAttribute(\"role\", \"none\");\n\n        li.appendChild(div);\n\n        // title span\n        const titleSpan = this.createTitleSpan(\n            node.name,\n            isSelected,\n            false,\n            level,\n        );\n        div.appendChild(titleSpan);\n\n        return li;\n    }\n\n    private createTitleSpan(\n        nodeName: string,\n        isSelected: boolean,\n        isFolder: boolean,\n        level: number,\n    ): HTMLSpanElement {\n        const titleSpan = document.createElement(\"span\");\n\n        let classes = \"jqtree-title jqtree_common\";\n\n        if (isFolder) {\n            classes += \" jqtree-title-folder\";\n        }\n\n        classes += ` jqtree-title-button-${\n            this.treeWidget.options.buttonLeft ? \"left\" : \"right\"\n        }`;\n\n        titleSpan.className = classes;\n\n        if (isSelected) {\n            const tabIndex = this.treeWidget.options.tabIndex;\n\n            if (tabIndex !== undefined) {\n                titleSpan.setAttribute(\"tabindex\", `${tabIndex}`);\n            }\n        }\n\n        this.setTreeItemAriaAttributes(titleSpan, nodeName, level, isSelected);\n\n        if (this.treeWidget.options.autoEscape) {\n            titleSpan.textContent = nodeName;\n        } else {\n            titleSpan.innerHTML = nodeName;\n        }\n\n        return titleSpan;\n    }\n\n    private getButtonClasses(node: Node): string {\n        const classes = [\"jqtree-toggler\", \"jqtree_common\"];\n\n        if (!node.is_open) {\n            classes.push(\"jqtree-closed\");\n        }\n\n        if (this.treeWidget.options.buttonLeft) {\n            classes.push(\"jqtree-toggler-left\");\n        } else {\n            classes.push(\"jqtree-toggler-right\");\n        }\n\n        return classes.join(\" \");\n    }\n\n    private getFolderClasses(node: Node, isSelected: boolean): string {\n        const classes = [\"jqtree-folder\"];\n\n        if (!node.is_open) {\n            classes.push(\"jqtree-closed\");\n        }\n\n        if (isSelected) {\n            classes.push(\"jqtree-selected\");\n        }\n\n        if (node.is_loading) {\n            classes.push(\"jqtree-loading\");\n        }\n\n        return classes.join(\" \");\n    }\n\n    private createButtonElement(\n        value: IconElement,\n    ): HTMLElement | Text | undefined {\n        if (typeof value === \"string\") {\n            // convert value to html\n            const div = document.createElement(\"div\");\n            div.innerHTML = value;\n\n            return document.createTextNode(div.innerHTML);\n        } else {\n            return jQuery(value)[0];\n        }\n    }\n}\n","import { Node } from \"./node\";\nimport { JqTreeWidget } from \"./tree.jquery\";\n\nexport type HandleFinishedLoading = () => void;\n\nexport default class DataLoader {\n    private treeWidget: JqTreeWidget;\n\n    constructor(treeWidget: JqTreeWidget) {\n        this.treeWidget = treeWidget;\n    }\n\n    public loadFromUrl(\n        urlInfo: string | JQuery.AjaxSettings | null,\n        parentNode: Node | null,\n        onFinished: HandleFinishedLoading | null\n    ): void {\n        if (!urlInfo) {\n            return;\n        }\n\n        const $el = this.getDomElement(parentNode);\n        this.addLoadingClass($el);\n        this.notifyLoading(true, parentNode, $el);\n\n        const stopLoading = (): void => {\n            this.removeLoadingClass($el);\n            this.notifyLoading(false, parentNode, $el);\n        };\n\n        const handleSuccess = (data: string | NodeData[]): void => {\n            stopLoading();\n            this.treeWidget.loadData(this.parseData(data), parentNode);\n\n            if (onFinished && typeof onFinished === \"function\") {\n                onFinished();\n            }\n        };\n\n        const handleError = (jqXHR: JQuery.jqXHR): void => {\n            stopLoading();\n\n            if (this.treeWidget.options.onLoadFailed) {\n                this.treeWidget.options.onLoadFailed(jqXHR);\n            }\n        };\n\n        this.submitRequest(urlInfo, handleSuccess, handleError);\n    }\n\n    private addLoadingClass($el: JQuery<HTMLElement>): void {\n        if ($el) {\n            $el.addClass(\"jqtree-loading\");\n        }\n    }\n\n    private removeLoadingClass($el: JQuery<HTMLElement>): void {\n        if ($el) {\n            $el.removeClass(\"jqtree-loading\");\n        }\n    }\n\n    private getDomElement(parentNode: Node | null): JQuery<HTMLElement> {\n        if (parentNode) {\n            return jQuery(parentNode.element);\n        } else {\n            return this.treeWidget.element;\n        }\n    }\n\n    private notifyLoading(\n        isLoading: boolean,\n        node: Node | null,\n        $el: JQuery\n    ): void {\n        if (this.treeWidget.options.onLoading) {\n            this.treeWidget.options.onLoading(isLoading, node, $el);\n        }\n\n        this.treeWidget._triggerEvent(\"tree.loading_data\", {\n            isLoading,\n            node,\n            $el,\n        });\n    }\n\n    private submitRequest(\n        urlInfoInput: string | JQuery.AjaxSettings,\n        handleSuccess: JQuery.Ajax.SuccessCallback<any>,\n        handleError: JQuery.Ajax.ErrorCallback<any>\n    ): void {\n        const urlInfo =\n            typeof urlInfoInput === \"string\"\n                ? { url: urlInfoInput }\n                : urlInfoInput;\n\n        const ajaxSettings: JQuery.AjaxSettings = {\n            method: \"GET\",\n            cache: false,\n            dataType: \"json\",\n            success: handleSuccess,\n            error: handleError,\n            ...urlInfo,\n        };\n\n        ajaxSettings.method = ajaxSettings.method?.toUpperCase() || \"GET\";\n\n        void jQuery.ajax(ajaxSettings);\n    }\n\n    private parseData(data: string | NodeData[]): NodeData[] {\n        const { dataFilter } = this.treeWidget.options;\n\n        const getParsedData = () => {\n            if (typeof data === \"string\") {\n                return JSON.parse(data) as NodeData[];\n            } else {\n                return data;\n            }\n        };\n\n        const parsedData = getParsedData();\n\n        if (dataFilter) {\n            return dataFilter(parsedData);\n        } else {\n            return parsedData;\n        }\n    }\n}\n","import { Node } from \"./node\";\nimport { JqTreeWidget } from \"./tree.jquery\";\n\nexport default class KeyHandler {\n    private static LEFT = 37;\n    private static UP = 38;\n    private static RIGHT = 39;\n    private static DOWN = 40;\n\n    private treeWidget: JqTreeWidget;\n\n    constructor(treeWidget: JqTreeWidget) {\n        this.treeWidget = treeWidget;\n\n        if (treeWidget.options.keyboardSupport) {\n            jQuery(document).on(\"keydown.jqtree\", this.handleKeyDown);\n        }\n    }\n\n    public deinit(): void {\n        jQuery(document).off(\"keydown.jqtree\");\n    }\n\n    public moveDown(selectedNode: Node): boolean {\n        return this.selectNode(selectedNode.getNextVisibleNode());\n    }\n\n    public moveUp(selectedNode: Node): boolean {\n        return this.selectNode(selectedNode.getPreviousVisibleNode());\n    }\n\n    public moveRight(selectedNode: Node): boolean {\n        if (!selectedNode.isFolder()) {\n            return true;\n        } else {\n            // folder node\n            if (selectedNode.is_open) {\n                // Right moves to the first child of an open node\n                return this.selectNode(selectedNode.getNextVisibleNode());\n            } else {\n                // Right expands a closed node\n                this.treeWidget.openNode(selectedNode);\n                return false;\n            }\n        }\n    }\n\n    public moveLeft(selectedNode: Node): boolean {\n        if (selectedNode.isFolder() && selectedNode.is_open) {\n            // Left on an open node closes the node\n            this.treeWidget.closeNode(selectedNode);\n            return false;\n        } else {\n            // Left on a closed or end node moves focus to the node's parent\n            return this.selectNode(selectedNode.getParent());\n        }\n    }\n\n    public selectNode(node: Node | null): boolean {\n        if (!node) {\n            return true;\n        } else {\n            this.treeWidget.selectNode(node);\n\n            if (\n                !this.treeWidget.scrollHandler.isScrolledIntoView(\n                    jQuery(node.element).find(\".jqtree-element\")\n                )\n            ) {\n                this.treeWidget.scrollToNode(node);\n            }\n\n            return false;\n        }\n    }\n\n    private handleKeyDown = (e: JQuery.Event): boolean => {\n        if (!this.canHandleKeyboard()) {\n            return true;\n        }\n\n        const selectedNode = this.treeWidget.getSelectedNode();\n        if (!selectedNode) {\n            return true;\n        }\n\n        const key = e.which;\n\n        switch (key) {\n            case KeyHandler.DOWN:\n                return this.moveDown(selectedNode);\n\n            case KeyHandler.UP:\n                return this.moveUp(selectedNode);\n\n            case KeyHandler.RIGHT:\n                return this.moveRight(selectedNode);\n\n            case KeyHandler.LEFT:\n                return this.moveLeft(selectedNode);\n\n            default:\n                return true;\n        }\n    };\n\n    private canHandleKeyboard(): boolean {\n        return (\n            (this.treeWidget.options.keyboardSupport || false) &&\n            this.treeWidget.selectNodeHandler.isFocusOnTree()\n        );\n    }\n}\n","const register = (widgetClass: unknown, widgetName: string): void => {\n    const getDataKey = (): string => `simple_widget_${widgetName}`;\n\n    const getWidgetData = (\n        el: HTMLElement,\n        dataKey: string\n    ): SimpleWidget<unknown> | null => {\n        const widget = jQuery.data(el, dataKey) as unknown;\n\n        if (widget && widget instanceof SimpleWidget) {\n            return widget;\n        } else {\n            return null;\n        }\n    };\n\n    const createWidget = ($el: JQuery, options: unknown): JQuery => {\n        const dataKey = getDataKey();\n\n        for (const el of $el.get()) {\n            const existingWidget = getWidgetData(el, dataKey);\n\n            if (!existingWidget) {\n                const simpleWidgetClass = widgetClass as typeof SimpleWidget;\n                const widget = new simpleWidgetClass(el, options);\n\n                if (!jQuery.data(el, dataKey)) {\n                    jQuery.data(el, dataKey, widget);\n                }\n\n                // Call init after setting data, so we can call methods\n                widget.init();\n            }\n        }\n\n        return $el;\n    };\n\n    const destroyWidget = ($el: JQuery): void => {\n        const dataKey = getDataKey();\n\n        for (const el of $el.get()) {\n            const widget = getWidgetData(el, dataKey);\n\n            if (widget) {\n                widget.destroy();\n            }\n\n            jQuery.removeData(el, dataKey);\n        }\n    };\n\n    const callFunction = (\n        $el: JQuery,\n        functionName: string,\n        args: unknown[]\n    ): unknown => {\n        let result = null;\n\n        for (const el of $el.get()) {\n            const widget = jQuery.data(el, getDataKey()) as unknown;\n\n            if (widget && widget instanceof SimpleWidget) {\n                const simpleWidget = widget as SimpleWidget<unknown>;\n                const widgetFunction = simpleWidget[functionName];\n\n                if (widgetFunction && typeof widgetFunction === \"function\") {\n                    result = widgetFunction.apply(widget, args) as unknown;\n                }\n            }\n        }\n\n        return result;\n    };\n\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    (jQuery.fn as any)[widgetName] = function (\n        this: JQuery,\n        argument1: unknown,\n        ...args: unknown[]\n    ) {\n        if (!argument1) {\n            return createWidget(this, null);\n        } else if (typeof argument1 === \"object\") {\n            const options = argument1 as unknown;\n            return createWidget(this, options);\n        } else if (typeof argument1 === \"string\" && argument1[0] !== \"_\") {\n            const functionName = argument1;\n\n            if (functionName === \"destroy\") {\n                return destroyWidget(this);\n            } else if (functionName === \"get_widget_class\") {\n                return widgetClass;\n            } else {\n                return callFunction(this, functionName, args);\n            }\n        } else {\n            return undefined;\n        }\n    };\n};\n\nexport default class SimpleWidget<WidgetOptions> {\n    public static register(widgetClass: unknown, widgetName: string): void {\n        register(widgetClass, widgetName);\n    }\n\n    [key: string]: unknown;\n\n    protected static defaults: unknown = {};\n\n    public options: WidgetOptions;\n\n    public $el: JQuery<HTMLElement>;\n\n    constructor(el: HTMLElement, options: WidgetOptions) {\n        this.$el = jQuery(el);\n\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        const defaults = (this.constructor as any)[\"defaults\"] as WidgetOptions;\n        this.options = { ...defaults, ...options };\n    }\n\n    public destroy(): void {\n        this.deinit();\n    }\n\n    public init(): void {\n        //\n    }\n\n    public deinit(): void {\n        //\n    }\n}\n","/*\nThis widget does the same a the mouse widget in jqueryui.\n*/\nimport SimpleWidget from \"./simple.widget\";\nimport { PositionInfo } from \"./types\";\n\nconst getPositionInfoFromMouseEvent = (e: MouseEvent): PositionInfo => ({\n    pageX: e.pageX,\n    pageY: e.pageY,\n    target: e.target as HTMLElement,\n    originalEvent: e,\n});\n\nconst getPositionInfoFromTouch = (\n    touch: Touch,\n    e: TouchEvent\n): PositionInfo => ({\n    pageX: touch.pageX,\n    pageY: touch.pageY,\n    target: touch.target as HTMLElement,\n    originalEvent: e,\n});\n\nabstract class MouseWidget<WidgetOptions> extends SimpleWidget<WidgetOptions> {\n    protected isMouseStarted: boolean;\n    protected mouseDownInfo: PositionInfo | null;\n    private mouseDelayTimer: number | null;\n    private isMouseDelayMet: boolean;\n\n    public init(): void {\n        const element = this.$el.get(0);\n\n        if (element) {\n            element.addEventListener(\"mousedown\", this.mouseDown, {\n                passive: false,\n            });\n            element.addEventListener(\"touchstart\", this.touchStart, {\n                passive: false,\n            });\n        }\n\n        this.isMouseStarted = false;\n        this.mouseDelayTimer = null;\n        this.isMouseDelayMet = false;\n        this.mouseDownInfo = null;\n    }\n\n    public deinit(): void {\n        const el = this.$el.get(0);\n\n        if (el) {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-call, @typescript-eslint/no-unsafe-member-access\n            (el as any).removeEventListener(\"mousedown\", this.mouseDown, {\n                passive: false,\n            });\n\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-call, @typescript-eslint/no-unsafe-member-access\n            (el as any).removeEventListener(\"touchstart\", this.touchStart, {\n                passive: false,\n            });\n        }\n\n        this.removeMouseMoveEventListeners();\n    }\n\n    protected abstract mouseCapture(positionInfo: PositionInfo): boolean | null;\n\n    protected abstract mouseStart(positionInfo: PositionInfo): boolean;\n\n    protected abstract mouseDrag(positionInfo: PositionInfo): void;\n\n    protected abstract mouseStop(positionInfo: PositionInfo): void;\n\n    protected abstract getMouseDelay(): number;\n\n    private mouseDown = (e: MouseEvent): void => {\n        // Left mouse button?\n        if (e.button !== 0) {\n            return;\n        }\n\n        const result = this.handleMouseDown(getPositionInfoFromMouseEvent(e));\n\n        if (result && e.cancelable) {\n            e.preventDefault();\n        }\n    };\n\n    private handleMouseDown(positionInfo: PositionInfo): boolean {\n        // We may have missed mouseup (out of window)\n        if (this.isMouseStarted) {\n            this.handleMouseUp(positionInfo);\n        }\n\n        this.mouseDownInfo = positionInfo;\n\n        if (!this.mouseCapture(positionInfo)) {\n            return false;\n        }\n\n        this.handleStartMouse();\n\n        return true;\n    }\n\n    private handleStartMouse(): void {\n        document.addEventListener(\"mousemove\", this.mouseMove, {\n            passive: false,\n        });\n        document.addEventListener(\"touchmove\", this.touchMove, {\n            passive: false,\n        });\n        document.addEventListener(\"mouseup\", this.mouseUp, { passive: false });\n        document.addEventListener(\"touchend\", this.touchEnd, {\n            passive: false,\n        });\n\n        const mouseDelay = this.getMouseDelay();\n\n        if (mouseDelay) {\n            this.startMouseDelayTimer(mouseDelay);\n        } else {\n            this.isMouseDelayMet = true;\n        }\n    }\n\n    private startMouseDelayTimer(mouseDelay: number): void {\n        if (this.mouseDelayTimer) {\n            clearTimeout(this.mouseDelayTimer);\n        }\n\n        this.mouseDelayTimer = window.setTimeout(() => {\n            if (this.mouseDownInfo) {\n                this.isMouseDelayMet = true;\n            }\n        }, mouseDelay);\n\n        this.isMouseDelayMet = false;\n    }\n\n    private mouseMove = (e: MouseEvent): void => {\n        this.handleMouseMove(e, getPositionInfoFromMouseEvent(e));\n    };\n\n    private handleMouseMove(\n        e: MouseEvent | TouchEvent,\n        positionInfo: PositionInfo\n    ): void {\n        if (this.isMouseStarted) {\n            this.mouseDrag(positionInfo);\n\n            if (e.cancelable) {\n                e.preventDefault();\n            }\n            return;\n        }\n\n        if (!this.isMouseDelayMet) {\n            return;\n        }\n\n        if (this.mouseDownInfo) {\n            this.isMouseStarted = this.mouseStart(this.mouseDownInfo) !== false;\n        }\n\n        if (this.isMouseStarted) {\n            this.mouseDrag(positionInfo);\n\n            if (e.cancelable) {\n                e.preventDefault();\n            }\n        } else {\n            this.handleMouseUp(positionInfo);\n        }\n    }\n\n    private mouseUp = (e: MouseEvent): void => {\n        this.handleMouseUp(getPositionInfoFromMouseEvent(e));\n    };\n\n    private handleMouseUp(positionInfo: PositionInfo): void {\n        this.removeMouseMoveEventListeners();\n        this.isMouseDelayMet = false;\n        this.mouseDownInfo = null;\n\n        if (this.isMouseStarted) {\n            this.isMouseStarted = false;\n            this.mouseStop(positionInfo);\n        }\n    }\n\n    private removeMouseMoveEventListeners() {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-call, @typescript-eslint/no-unsafe-member-access\n        (document as any).removeEventListener(\"mousemove\", this.mouseMove, {\n            passive: false,\n        });\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-call, @typescript-eslint/no-unsafe-member-access\n        (document as any).removeEventListener(\"touchmove\", this.touchMove, {\n            passive: false,\n        });\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-call, @typescript-eslint/no-unsafe-member-access\n        (document as any).removeEventListener(\"mouseup\", this.mouseUp, {\n            passive: false,\n        });\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-call, @typescript-eslint/no-unsafe-member-access\n        (document as any).removeEventListener(\"touchend\", this.touchEnd, {\n            passive: false,\n        });\n    }\n\n    private touchStart = (e: TouchEvent): void => {\n        if (!e) {\n            return;\n        }\n\n        if (e.touches.length > 1) {\n            return;\n        }\n\n        const touch = e.changedTouches[0];\n\n        if (!touch) {\n            return;\n        }\n\n        this.handleMouseDown(getPositionInfoFromTouch(touch, e));\n    };\n\n    private touchMove = (e: TouchEvent): void => {\n        if (!e) {\n            return;\n        }\n\n        if (e.touches.length > 1) {\n            return;\n        }\n\n        const touch = e.changedTouches[0];\n\n        if (!touch) {\n            return;\n        }\n\n        this.handleMouseMove(e, getPositionInfoFromTouch(touch, e));\n    };\n\n    private touchEnd = (e: TouchEvent): void => {\n        if (!e) {\n            return;\n        }\n\n        if (e.touches.length > 1) {\n            return;\n        }\n\n        const touch = e.changedTouches[0];\n\n        if (!touch) {\n            return;\n        }\n\n        this.handleMouseUp(getPositionInfoFromTouch(touch, e));\n    };\n}\n\nexport default MouseWidget;\n","import { isInt } from \"./util\";\nimport { JqTreeWidget } from \"./tree.jquery\";\nimport { Node } from \"./node\";\n\nexport interface SavedState {\n    open_nodes: NodeId[];\n    selected_node: NodeId[];\n}\n\nexport default class SaveStateHandler {\n    private treeWidget: JqTreeWidget;\n    private _supportsLocalStorage: boolean | null;\n\n    constructor(treeWidget: JqTreeWidget) {\n        this.treeWidget = treeWidget;\n    }\n\n    public saveState(): void {\n        const state = JSON.stringify(this.getState());\n\n        if (this.treeWidget.options.onSetStateFromStorage) {\n            this.treeWidget.options.onSetStateFromStorage(state);\n        } else if (this.supportsLocalStorage()) {\n            localStorage.setItem(this.getKeyName(), state);\n        }\n    }\n\n    public getStateFromStorage(): SavedState | null {\n        const jsonData = this.loadFromStorage();\n\n        if (jsonData) {\n            return this.parseState(jsonData) as unknown as SavedState;\n        } else {\n            return null;\n        }\n    }\n\n    public getState(): SavedState {\n        const getOpenNodeIds = (): NodeId[] => {\n            const openNodes: NodeId[] = [];\n\n            this.treeWidget.tree.iterate((node: Node) => {\n                if (node.is_open && node.id && node.hasChildren()) {\n                    openNodes.push(node.id);\n                }\n                return true;\n            });\n\n            return openNodes;\n        };\n\n        const getSelectedNodeIds = (): NodeId[] => {\n            const selectedNodeIds: NodeId[] = [];\n\n            this.treeWidget.getSelectedNodes().forEach((node) => {\n                if (node.id != null) {\n                    selectedNodeIds.push(node.id);\n                }\n            });\n\n            return selectedNodeIds;\n        };\n\n        return {\n            open_nodes: getOpenNodeIds(),\n            selected_node: getSelectedNodeIds(),\n        };\n    }\n\n    /*\n    Set initial state\n    Don't handle nodes that are loaded on demand\n\n    result: must load on demand\n    */\n    public setInitialState(state: SavedState): boolean {\n        if (!state) {\n            return false;\n        } else {\n            let mustLoadOnDemand = false;\n\n            if (state.open_nodes) {\n                mustLoadOnDemand = this.openInitialNodes(state.open_nodes);\n            }\n\n            if (state.selected_node) {\n                this.resetSelection();\n                this.selectInitialNodes(state.selected_node);\n            }\n\n            return mustLoadOnDemand;\n        }\n    }\n\n    public setInitialStateOnDemand(\n        state: SavedState,\n        cbFinished: () => void\n    ): void {\n        if (state) {\n            this.doSetInitialStateOnDemand(\n                state.open_nodes,\n                state.selected_node,\n                cbFinished\n            );\n        } else {\n            cbFinished();\n        }\n    }\n\n    public getNodeIdToBeSelected(): NodeId | null {\n        const state = this.getStateFromStorage();\n\n        if (state && state.selected_node) {\n            return state.selected_node[0] || null;\n        } else {\n            return null;\n        }\n    }\n\n    private parseState(jsonData: string): SavedState {\n        const state = JSON.parse(jsonData) as Record<string, unknown>;\n\n        // Check if selected_node is an int (instead of an array)\n        if (state && state.selected_node && isInt(state.selected_node)) {\n            // Convert to array\n            state.selected_node = [state.selected_node];\n        }\n\n        return state as unknown as SavedState;\n    }\n\n    private loadFromStorage(): string | null {\n        if (this.treeWidget.options.onGetStateFromStorage) {\n            return this.treeWidget.options.onGetStateFromStorage();\n        } else if (this.supportsLocalStorage()) {\n            return localStorage.getItem(this.getKeyName());\n        } else {\n            return null;\n        }\n    }\n\n    private openInitialNodes(nodeIds: NodeId[]): boolean {\n        let mustLoadOnDemand = false;\n\n        for (const nodeId of nodeIds) {\n            const node = this.treeWidget.getNodeById(nodeId);\n\n            if (node) {\n                if (!node.load_on_demand) {\n                    node.is_open = true;\n                } else {\n                    mustLoadOnDemand = true;\n                }\n            }\n        }\n\n        return mustLoadOnDemand;\n    }\n\n    private selectInitialNodes(nodeIds: NodeId[]): boolean {\n        let selectCount = 0;\n\n        for (const nodeId of nodeIds) {\n            const node = this.treeWidget.getNodeById(nodeId);\n\n            if (node) {\n                selectCount += 1;\n\n                this.treeWidget.selectNodeHandler.addToSelection(node);\n            }\n        }\n\n        return selectCount !== 0;\n    }\n\n    private resetSelection(): void {\n        const selectNodeHandler = this.treeWidget.selectNodeHandler;\n\n        const selectedNodes = selectNodeHandler.getSelectedNodes();\n\n        selectedNodes.forEach((node) => {\n            selectNodeHandler.removeFromSelection(node);\n        });\n    }\n\n    private doSetInitialStateOnDemand(\n        nodeIdsParam: NodeId[],\n        selectedNodes: NodeId[],\n        cbFinished: () => void\n    ): void {\n        let loadingCount = 0;\n        let nodeIds = nodeIdsParam;\n\n        const openNodes = (): void => {\n            const newNodesIds = [];\n\n            for (const nodeId of nodeIds) {\n                const node = this.treeWidget.getNodeById(nodeId);\n\n                if (!node) {\n                    newNodesIds.push(nodeId);\n                } else {\n                    if (!node.is_loading) {\n                        if (node.load_on_demand) {\n                            loadAndOpenNode(node);\n                        } else {\n                            this.treeWidget._openNode(node, false, null);\n                        }\n                    }\n                }\n            }\n\n            nodeIds = newNodesIds;\n\n            if (this.selectInitialNodes(selectedNodes)) {\n                this.treeWidget._refreshElements(null);\n            }\n\n            if (loadingCount === 0) {\n                cbFinished();\n            }\n        };\n\n        const loadAndOpenNode = (node: Node): void => {\n            loadingCount += 1;\n            this.treeWidget._openNode(node, false, () => {\n                loadingCount -= 1;\n                openNodes();\n            });\n        };\n\n        openNodes();\n    }\n\n    private getKeyName(): string {\n        if (typeof this.treeWidget.options.saveState === \"string\") {\n            return this.treeWidget.options.saveState;\n        } else {\n            return \"tree\";\n        }\n    }\n\n    private supportsLocalStorage(): boolean {\n        const testSupport = (): boolean => {\n            // Is local storage supported?\n            if (localStorage == null) {\n                return false;\n            } else {\n                // Check if it's possible to store an item. Safari does not allow this in private browsing mode.\n                try {\n                    const key = \"_storage_test\";\n                    sessionStorage.setItem(key, \"value\");\n                    sessionStorage.removeItem(key);\n                } catch (error) {\n                    return false;\n                }\n\n                return true;\n            }\n        };\n\n        if (this._supportsLocalStorage == null) {\n            this._supportsLocalStorage = testSupport();\n        }\n\n        return this._supportsLocalStorage;\n    }\n}\n","import { JqTreeWidget } from \"./tree.jquery\";\nimport { HitArea, PositionInfo } from \"./types\";\n\nexport default class ScrollHandler {\n    private treeWidget: JqTreeWidget;\n    private previousTop: number;\n    private isInitialized: boolean;\n    private $scrollParent: JQuery | null;\n    private scrollParentTop: number;\n\n    constructor(treeWidget: JqTreeWidget) {\n        this.treeWidget = treeWidget;\n        this.previousTop = -1;\n        this.isInitialized = false;\n    }\n\n    public checkScrolling(): void {\n        this.ensureInit();\n        this.checkVerticalScrolling();\n        this.checkHorizontalScrolling();\n    }\n\n    public scrollToY(top: number): void {\n        this.ensureInit();\n\n        if (this.$scrollParent && this.$scrollParent[0]) {\n            this.$scrollParent[0].scrollTop = top;\n        } else {\n            const offset = this.treeWidget.$el.offset();\n            const treeTop = offset ? offset.top : 0;\n\n            jQuery(document).scrollTop(top + treeTop);\n        }\n    }\n\n    public isScrolledIntoView($element: JQuery): boolean {\n        this.ensureInit();\n\n        let elementBottom: number;\n        let viewBottom: number;\n        let elementTop: number;\n        let viewTop: number;\n\n        const elHeight = $element.height() || 0;\n\n        if (this.$scrollParent) {\n            viewTop = 0;\n            viewBottom = this.$scrollParent.height() || 0;\n\n            const offset = $element.offset();\n            const originalTop = offset ? offset.top : 0;\n\n            elementTop = originalTop - this.scrollParentTop;\n            elementBottom = elementTop + elHeight;\n        } else {\n            viewTop = jQuery(window).scrollTop() || 0;\n\n            const windowHeight = jQuery(window).height() || 0;\n            viewBottom = viewTop + windowHeight;\n\n            const offset = $element.offset();\n\n            elementTop = offset ? offset.top : 0;\n            elementBottom = elementTop + elHeight;\n        }\n\n        return elementBottom <= viewBottom && elementTop >= viewTop;\n    }\n\n    public getScrollLeft(): number {\n        if (!this.$scrollParent) {\n            return 0;\n        } else {\n            return this.$scrollParent.scrollLeft() || 0;\n        }\n    }\n\n    private initScrollParent(): void {\n        const getParentWithOverflow = (): JQuery | null => {\n            const cssAttributes = [\"overflow\", \"overflow-y\"];\n\n            const hasOverFlow = ($el: JQuery): boolean => {\n                for (const attr of cssAttributes) {\n                    const overflowValue = $el.css(attr);\n                    if (\n                        overflowValue === \"auto\" ||\n                        overflowValue === \"scroll\"\n                    ) {\n                        return true;\n                    }\n                }\n\n                return false;\n            };\n\n            if (hasOverFlow(this.treeWidget.$el)) {\n                return this.treeWidget.$el;\n            }\n\n            for (const el of this.treeWidget.$el.parents().get()) {\n                const $el = jQuery(el);\n                if (hasOverFlow($el)) {\n                    return $el;\n                }\n            }\n\n            return null;\n        };\n\n        const setDocumentAsScrollParent = (): void => {\n            this.scrollParentTop = 0;\n            this.$scrollParent = null;\n        };\n\n        if (this.treeWidget.$el.css(\"position\") === \"fixed\") {\n            setDocumentAsScrollParent();\n        }\n\n        const $scrollParent = getParentWithOverflow();\n\n        if (\n            $scrollParent &&\n            $scrollParent.length &&\n            $scrollParent[0]?.tagName !== \"HTML\"\n        ) {\n            this.$scrollParent = $scrollParent;\n\n            const offset = this.$scrollParent.offset();\n            this.scrollParentTop = offset ? offset.top : 0;\n        } else {\n            setDocumentAsScrollParent();\n        }\n\n        this.isInitialized = true;\n    }\n\n    private ensureInit(): void {\n        if (!this.isInitialized) {\n            this.initScrollParent();\n        }\n    }\n\n    private handleVerticalScrollingWithScrollParent(area: HitArea): void {\n        const scrollParent = this.$scrollParent && this.$scrollParent[0];\n\n        if (!scrollParent) {\n            return;\n        }\n\n        const distanceBottom =\n            this.scrollParentTop + scrollParent.offsetHeight - area.bottom;\n\n        if (distanceBottom < 20) {\n            scrollParent.scrollTop += 20;\n            this.treeWidget.refreshHitAreas();\n            this.previousTop = -1;\n        } else if (area.top - this.scrollParentTop < 20) {\n            scrollParent.scrollTop -= 20;\n            this.treeWidget.refreshHitAreas();\n            this.previousTop = -1;\n        }\n    }\n\n    private handleVerticalScrollingWithDocument(area: HitArea): void {\n        const scrollTop = jQuery(document).scrollTop() || 0;\n        const distanceTop = area.top - scrollTop;\n\n        if (distanceTop < 20) {\n            jQuery(document).scrollTop(scrollTop - 20);\n        } else {\n            const windowHeight = jQuery(window).height() || 0;\n\n            if (windowHeight - (area.bottom - scrollTop) < 20) {\n                jQuery(document).scrollTop(scrollTop + 20);\n            }\n        }\n    }\n\n    private checkVerticalScrolling(): void {\n        const hoveredArea = this.treeWidget.dndHandler.hoveredArea;\n\n        if (hoveredArea && hoveredArea.top !== this.previousTop) {\n            this.previousTop = hoveredArea.top;\n\n            if (this.$scrollParent) {\n                this.handleVerticalScrollingWithScrollParent(hoveredArea);\n            } else {\n                this.handleVerticalScrollingWithDocument(hoveredArea);\n            }\n        }\n    }\n\n    private checkHorizontalScrolling(): void {\n        const positionInfo = this.treeWidget.dndHandler.positionInfo;\n\n        if (!positionInfo) {\n            return;\n        }\n\n        if (this.$scrollParent) {\n            this.handleHorizontalScrollingWithParent(positionInfo);\n        } else {\n            this.handleHorizontalScrollingWithDocument(positionInfo);\n        }\n    }\n\n    private handleHorizontalScrollingWithParent(\n        positionInfo: PositionInfo\n    ): void {\n        if (\n            positionInfo.pageX === undefined ||\n            positionInfo.pageY === undefined\n        ) {\n            return;\n        }\n\n        const $scrollParent = this.$scrollParent;\n        const scrollParentOffset = $scrollParent && $scrollParent.offset();\n\n        if (!($scrollParent && scrollParentOffset)) {\n            return;\n        }\n\n        const scrollParent = $scrollParent[0];\n\n        if (!scrollParent) {\n            return;\n        }\n\n        const canScrollRight =\n            scrollParent.scrollLeft + scrollParent.clientWidth <\n            scrollParent.scrollWidth;\n        const canScrollLeft = scrollParent.scrollLeft > 0;\n\n        const rightEdge = scrollParentOffset.left + scrollParent.clientWidth;\n        const leftEdge = scrollParentOffset.left;\n        const isNearRightEdge = positionInfo.pageX > rightEdge - 20;\n        const isNearLeftEdge = positionInfo.pageX < leftEdge + 20;\n\n        if (isNearRightEdge && canScrollRight) {\n            scrollParent.scrollLeft = Math.min(\n                scrollParent.scrollLeft + 20,\n                scrollParent.scrollWidth\n            );\n        } else if (isNearLeftEdge && canScrollLeft) {\n            scrollParent.scrollLeft = Math.max(scrollParent.scrollLeft - 20, 0);\n        }\n    }\n\n    private handleHorizontalScrollingWithDocument(\n        positionInfo: PositionInfo\n    ): void {\n        if (\n            positionInfo.pageX === undefined ||\n            positionInfo.pageY === undefined\n        ) {\n            return;\n        }\n\n        const $document = jQuery(document);\n\n        const scrollLeft = $document.scrollLeft() || 0;\n        const windowWidth = jQuery(window).width() || 0;\n\n        const canScrollLeft = scrollLeft > 0;\n\n        const isNearRightEdge = positionInfo.pageX > windowWidth - 20;\n        const isNearLeftEdge = positionInfo.pageX - scrollLeft < 20;\n\n        if (isNearRightEdge) {\n            $document.scrollLeft(scrollLeft + 20);\n        } else if (isNearLeftEdge && canScrollLeft) {\n            $document.scrollLeft(Math.max(scrollLeft - 20, 0));\n        }\n    }\n}\n","import { Node } from \"./node\";\nimport { JqTreeWidget } from \"./tree.jquery\";\n\nexport default class SelectNodeHandler {\n    private treeWidget: JqTreeWidget;\n    private selectedNodes: Set<NodeId>;\n    private selectedSingleNode: Node | null;\n\n    constructor(treeWidget: JqTreeWidget) {\n        this.treeWidget = treeWidget;\n        this.selectedNodes = new Set<NodeId>();\n        this.clear();\n    }\n\n    public getSelectedNode(): Node | false {\n        const selectedNodes = this.getSelectedNodes();\n\n        if (selectedNodes.length) {\n            return selectedNodes[0] || false;\n        } else {\n            return false;\n        }\n    }\n\n    public getSelectedNodes(): Node[] {\n        if (this.selectedSingleNode) {\n            return [this.selectedSingleNode];\n        } else {\n            const selectedNodes: Node[] = [];\n\n            this.selectedNodes.forEach((id) => {\n                const node = this.treeWidget.getNodeById(id);\n                if (node) {\n                    selectedNodes.push(node);\n                }\n            });\n\n            return selectedNodes;\n        }\n    }\n\n    public getSelectedNodesUnder(parent: Node): Node[] {\n        if (this.selectedSingleNode) {\n            if (parent.isParentOf(this.selectedSingleNode)) {\n                return [this.selectedSingleNode];\n            } else {\n                return [];\n            }\n        } else {\n            const selectedNodes = [];\n\n            for (const id in this.selectedNodes) {\n                if (\n                    Object.prototype.hasOwnProperty.call(this.selectedNodes, id)\n                ) {\n                    const node = this.treeWidget.getNodeById(id);\n                    if (node && parent.isParentOf(node)) {\n                        selectedNodes.push(node);\n                    }\n                }\n            }\n\n            return selectedNodes;\n        }\n    }\n\n    public isNodeSelected(node: Node): boolean {\n        if (node.id != null) {\n            return this.selectedNodes.has(node.id);\n        } else if (this.selectedSingleNode) {\n            return this.selectedSingleNode.element === node.element;\n        } else {\n            return false;\n        }\n    }\n\n    public clear(): void {\n        this.selectedNodes.clear();\n        this.selectedSingleNode = null;\n    }\n\n    public removeFromSelection(node: Node, includeChildren = false): void {\n        if (node.id == null) {\n            if (\n                this.selectedSingleNode &&\n                node.element === this.selectedSingleNode.element\n            ) {\n                this.selectedSingleNode = null;\n            }\n        } else {\n            this.selectedNodes.delete(node.id);\n\n            if (includeChildren) {\n                node.iterate(() => {\n                    if (node.id != null) {\n                        this.selectedNodes.delete(node.id);\n                    }\n                    return true;\n                });\n            }\n        }\n    }\n\n    public addToSelection(node: Node): void {\n        if (node.id != null) {\n            this.selectedNodes.add(node.id);\n        } else {\n            this.selectedSingleNode = node;\n        }\n    }\n\n    public isFocusOnTree(): boolean {\n        const activeElement = document.activeElement;\n\n        return Boolean(\n            activeElement &&\n                activeElement.tagName === \"SPAN\" &&\n                this.treeWidget._containsElement(activeElement as HTMLElement)\n        );\n    }\n}\n","import { Position, Node } from \"./node\";\nimport { JqTreeWidget } from \"./tree.jquery\";\nimport { DropHint } from \"./types\";\n\nexport type OnFinishOpenNode = (node: Node) => void;\n\nexport class NodeElement {\n    public node: Node;\n    public $element: JQuery<HTMLElement>;\n    protected treeWidget: JqTreeWidget;\n\n    constructor(node: Node, treeWidget: JqTreeWidget) {\n        this.init(node, treeWidget);\n    }\n\n    public init(node: Node, treeWidget: JqTreeWidget): void {\n        this.node = node;\n        this.treeWidget = treeWidget;\n\n        if (!node.element) {\n            const element = this.treeWidget.element.get(0);\n\n            if (element) {\n                node.element = element;\n            }\n        }\n\n        if (node.element) {\n            this.$element = jQuery(node.element);\n        }\n    }\n\n    public addDropHint(position: number): DropHint {\n        if (this.mustShowBorderDropHint(position)) {\n            return new BorderDropHint(\n                this.$element,\n                this.treeWidget._getScrollLeft(),\n            );\n        } else {\n            return new GhostDropHint(this.node, this.$element, position);\n        }\n    }\n\n    public select(mustSetFocus: boolean): void {\n        const $li = this.getLi();\n\n        $li.addClass(\"jqtree-selected\");\n\n        const $span = this.getSpan();\n        $span.attr(\"tabindex\", this.treeWidget.options.tabIndex ?? null);\n        $span.attr(\"aria-selected\", \"true\");\n\n        if (mustSetFocus) {\n            $span.trigger(\"focus\");\n        }\n    }\n\n    public deselect(): void {\n        const $li = this.getLi();\n\n        $li.removeClass(\"jqtree-selected\");\n\n        const $span = this.getSpan();\n        $span.removeAttr(\"tabindex\");\n        $span.attr(\"aria-selected\", \"false\");\n\n        $span.trigger(\"blur\");\n    }\n\n    protected getUl(): JQuery<HTMLElement> {\n        return this.$element.children(\"ul:first\");\n    }\n\n    protected getSpan(): JQuery<HTMLElement> {\n        return this.$element\n            .children(\".jqtree-element\")\n            .find(\"span.jqtree-title\");\n    }\n\n    protected getLi(): JQuery<HTMLElement> {\n        return this.$element;\n    }\n\n    protected mustShowBorderDropHint(position: Position): boolean {\n        return position === Position.Inside;\n    }\n}\n\nexport class FolderElement extends NodeElement {\n    public open(\n        onFinished: OnFinishOpenNode | null,\n        slide = true,\n        animationSpeed: JQuery.Duration = \"fast\",\n    ): void {\n        if (this.node.is_open) {\n            return;\n        }\n\n        this.node.is_open = true;\n\n        const $button = this.getButton();\n        $button.removeClass(\"jqtree-closed\");\n        $button.html(\"\");\n\n        const buttonEl = $button.get(0);\n\n        if (buttonEl) {\n            const openedIconElement =\n                this.treeWidget.renderer.openedIconElement;\n\n            if (openedIconElement) {\n                const icon = openedIconElement.cloneNode(true);\n                buttonEl.appendChild(icon);\n            }\n        }\n\n        const doOpen = (): void => {\n            const $li = this.getLi();\n            $li.removeClass(\"jqtree-closed\");\n\n            const $titleSpan = this.getSpan();\n            $titleSpan.attr(\"aria-expanded\", \"true\");\n\n            if (onFinished) {\n                onFinished(this.node);\n            }\n\n            this.treeWidget._triggerEvent(\"tree.open\", {\n                node: this.node,\n            });\n        };\n\n        if (slide) {\n            this.getUl().slideDown(animationSpeed, doOpen);\n        } else {\n            this.getUl().show();\n            doOpen();\n        }\n    }\n\n    public close(\n        slide = true,\n        animationSpeed: JQuery.Duration | undefined = \"fast\",\n    ): void {\n        if (!this.node.is_open) {\n            return;\n        }\n\n        this.node.is_open = false;\n\n        const $button = this.getButton();\n        $button.addClass(\"jqtree-closed\");\n        $button.html(\"\");\n\n        const buttonEl = $button.get(0);\n\n        if (buttonEl) {\n            const closedIconElement =\n                this.treeWidget.renderer.closedIconElement;\n\n            if (closedIconElement) {\n                const icon = closedIconElement.cloneNode(true);\n                buttonEl.appendChild(icon);\n            }\n        }\n\n        const doClose = (): void => {\n            const $li = this.getLi();\n            $li.addClass(\"jqtree-closed\");\n\n            const $titleSpan = this.getSpan();\n            $titleSpan.attr(\"aria-expanded\", \"false\");\n\n            this.treeWidget._triggerEvent(\"tree.close\", {\n                node: this.node,\n            });\n        };\n\n        if (slide) {\n            this.getUl().slideUp(animationSpeed, doClose);\n        } else {\n            this.getUl().hide();\n            doClose();\n        }\n    }\n\n    protected mustShowBorderDropHint(position: Position): boolean {\n        return !this.node.is_open && position === Position.Inside;\n    }\n\n    private getButton(): JQuery {\n        return this.$element\n            .children(\".jqtree-element\")\n            .find(\"a.jqtree-toggler\");\n    }\n}\n\nexport class BorderDropHint implements DropHint {\n    private $hint: JQuery<Element>;\n\n    constructor($element: JQuery<Element>, scrollLeft: number) {\n        const $div = $element.children(\".jqtree-element\");\n\n        const elWidth = $element.width() || 0;\n        const width = Math.max(elWidth + scrollLeft - 4, 0);\n\n        const elHeight = $div.outerHeight() || 0;\n        const height = Math.max(elHeight - 4, 0);\n\n        this.$hint = jQuery('<span class=\"jqtree-border\"></span>');\n        $div.append(this.$hint);\n\n        this.$hint.css({ width, height });\n    }\n\n    public remove(): void {\n        this.$hint.remove();\n    }\n}\n\nclass GhostDropHint implements DropHint {\n    private $element: JQuery<Element>;\n    private node: Node;\n    private $ghost: JQuery;\n\n    constructor(node: Node, $element: JQuery<Element>, position: Position) {\n        this.$element = $element;\n\n        this.node = node;\n        this.$ghost = jQuery(\n            `<li class=\"jqtree_common jqtree-ghost\"><span class=\"jqtree_common jqtree-circle\"></span>\n            <span class=\"jqtree_common jqtree-line\"></span></li>`,\n        );\n\n        if (position === Position.After) {\n            this.moveAfter();\n        } else if (position === Position.Before) {\n            this.moveBefore();\n        } else if (position === Position.Inside) {\n            if (node.isFolder() && node.is_open) {\n                this.moveInsideOpenFolder();\n            } else {\n                this.moveInside();\n            }\n        }\n    }\n\n    public remove(): void {\n        this.$ghost.remove();\n    }\n\n    public moveAfter(): void {\n        this.$element.after(this.$ghost);\n    }\n\n    public moveBefore(): void {\n        this.$element.before(this.$ghost);\n    }\n\n    public moveInsideOpenFolder(): void {\n        const childElement = this.node.children[0]?.element;\n\n        if (childElement) {\n            jQuery(childElement).before(this.$ghost);\n        }\n    }\n\n    public moveInside(): void {\n        this.$element.after(this.$ghost);\n        this.$ghost.addClass(\"jqtree-inside\");\n    }\n}\n","import __version__ from \"./version\";\nimport { DragAndDropHandler } from \"./dragAndDropHandler\";\nimport ElementsRenderer from \"./elementsRenderer\";\nimport DataLoader, { HandleFinishedLoading } from \"./dataLoader\";\nimport KeyHandler from \"./keyHandler\";\nimport MouseWidget from \"./mouse.widget\";\nimport { PositionInfo } from \"./types\";\nimport SaveStateHandler, { SavedState } from \"./saveStateHandler\";\nimport ScrollHandler from \"./scrollHandler\";\nimport SelectNodeHandler from \"./selectNodeHandler\";\nimport SimpleWidget from \"./simple.widget\";\nimport { Node, getPosition } from \"./node\";\nimport { isFunction } from \"./util\";\nimport { FolderElement, NodeElement, OnFinishOpenNode } from \"./nodeElement\";\nimport { JQTreeOptions } from \"./jqtreeOptions\";\n\ninterface ClickTarget {\n    node: Node;\n    type: \"button\" | \"label\";\n}\n\ninterface SelectNodeOptions {\n    mustToggle?: boolean;\n    mustSetFocus?: boolean;\n}\n\nconst NODE_PARAM_IS_EMPTY = \"Node parameter is empty\";\nconst PARAM_IS_EMPTY = \"Parameter is empty: \";\n\nexport class JqTreeWidget extends MouseWidget<JQTreeOptions> {\n    protected static defaults: JQTreeOptions = {\n        animationSpeed: \"fast\",\n        autoEscape: true,\n        autoOpen: false, // true / false / int (open n levels starting at 0)\n        buttonLeft: true,\n        // The symbol to use for a closed node - ► BLACK RIGHT-POINTING POINTER\n        // http://www.fileformat.info/info/unicode/char/25ba/index.htm\n        closedIcon: undefined,\n        data: undefined,\n        dataFilter: undefined,\n        dataUrl: undefined,\n        dragAndDrop: false,\n        keyboardSupport: true,\n        nodeClass: Node,\n        onCanMove: undefined, // Can this node be moved?\n        onCanMoveTo: undefined, // Can this node be moved to this position? function(moved_node, target_node, position)\n        onCanSelectNode: undefined,\n        onCreateLi: undefined,\n        onDragMove: undefined,\n        onDragStop: undefined,\n        onGetStateFromStorage: undefined,\n        onIsMoveHandle: undefined,\n        onLoadFailed: undefined,\n        onLoading: undefined,\n        onSetStateFromStorage: undefined,\n        openedIcon: \"&#x25bc;\",\n        openFolderDelay: 500, // The delay for opening a folder during drag and drop; the value is in milliseconds\n        // The symbol to use for an open node - ▼ BLACK DOWN-POINTING TRIANGLE\n        // http://www.fileformat.info/info/unicode/char/25bc/index.htm\n        rtl: undefined, // right-to-left support; true / false (default)\n        saveState: false, // true / false / string (cookie name)\n        selectable: true,\n        showEmptyFolder: false,\n        slide: true, // must display slide animation?\n        startDndDelay: 300, // The delay for starting dnd (in milliseconds)\n        tabIndex: 0,\n        useContextMenu: true,\n    };\n\n    public element: JQuery;\n    public tree: Node;\n    public dndHandler: DragAndDropHandler;\n    public renderer: ElementsRenderer;\n    public dataLoader: DataLoader;\n    public scrollHandler: ScrollHandler;\n    public selectNodeHandler: SelectNodeHandler;\n\n    private isInitialized: boolean;\n    private saveStateHandler: SaveStateHandler;\n    private keyHandler: KeyHandler;\n\n    public toggle(node: Node, slideParam: null | boolean = null): JQuery {\n        if (!node) {\n            throw Error(NODE_PARAM_IS_EMPTY);\n        }\n\n        const slide = slideParam ?? this.options.slide;\n\n        if (node.is_open) {\n            this.closeNode(node, slide);\n        } else {\n            this.openNode(node, slide);\n        }\n\n        return this.element;\n    }\n\n    public getTree(): Node {\n        return this.tree;\n    }\n\n    public selectNode(\n        node: Node | null,\n        optionsParam?: SelectNodeOptions\n    ): JQuery {\n        this.doSelectNode(node, optionsParam);\n        return this.element;\n    }\n\n    public getSelectedNode(): Node | false {\n        return this.selectNodeHandler.getSelectedNode();\n    }\n\n    public toJson(): string {\n        return JSON.stringify(this.tree.getData());\n    }\n\n    public loadData(data: NodeData[], parentNode: Node | null): JQuery {\n        this.doLoadData(data, parentNode);\n        return this.element;\n    }\n\n    /*\n    signatures:\n    - loadDataFromUrl(url, parent_node=null, on_finished=null)\n        loadDataFromUrl('/my_data');\n        loadDataFromUrl('/my_data', node1);\n        loadDataFromUrl('/my_data', node1, function() { console.log('finished'); });\n        loadDataFromUrl('/my_data', null, function() { console.log('finished'); });\n\n    - loadDataFromUrl(parent_node=null, on_finished=null)\n        loadDataFromUrl();\n        loadDataFromUrl(node1);\n        loadDataFromUrl(null, function() { console.log('finished'); });\n        loadDataFromUrl(node1, function() { console.log('finished'); });\n    */\n    public loadDataFromUrl(\n        param1: string | null | Node,\n        param2?: Node | null | HandleFinishedLoading,\n        param3?: HandleFinishedLoading\n    ): JQuery {\n        if (typeof param1 === \"string\") {\n            // first parameter is url\n            this.doLoadDataFromUrl(\n                param1,\n                param2 as Node | null,\n                param3 ?? null\n            );\n        } else {\n            // first parameter is not url\n            this.doLoadDataFromUrl(\n                null,\n                param1,\n                param2 as HandleFinishedLoading | null\n            );\n        }\n\n        return this.element;\n    }\n\n    public reload(onFinished: HandleFinishedLoading | null): JQuery {\n        this.doLoadDataFromUrl(null, null, onFinished);\n        return this.element;\n    }\n\n    public refresh(): JQuery {\n        this._refreshElements(null);\n        return this.element;\n    }\n\n    public getNodeById(nodeId: NodeId): Node | null {\n        return this.tree.getNodeById(nodeId);\n    }\n\n    public getNodeByName(name: string): Node | null {\n        return this.tree.getNodeByName(name);\n    }\n\n    public getNodeByNameMustExist(name: string): Node {\n        return this.tree.getNodeByNameMustExist(name);\n    }\n\n    public getNodesByProperty(key: string, value: unknown): Node[] {\n        return this.tree.getNodesByProperty(key, value);\n    }\n\n    public getNodeByHtmlElement(\n        element: HTMLElement | JQuery<HTMLElement>\n    ): Node | null {\n        return this.getNode(jQuery(element));\n    }\n\n    public getNodeByCallback(callback: (node: Node) => boolean): Node | null {\n        return this.tree.getNodeByCallback(callback);\n    }\n\n    public openNode(\n        node: Node,\n        param1?: boolean | OnFinishOpenNode,\n        param2?: OnFinishOpenNode\n    ): JQuery {\n        if (!node) {\n            throw Error(NODE_PARAM_IS_EMPTY);\n        }\n\n        const parseParams = (): [boolean, OnFinishOpenNode | null] => {\n            let onFinished: OnFinishOpenNode | null;\n            let slide: boolean | null;\n\n            if (isFunction(param1)) {\n                onFinished = param1 as OnFinishOpenNode | null;\n                slide = null;\n            } else {\n                slide = param1 as boolean;\n                onFinished = param2 as OnFinishOpenNode;\n            }\n\n            if (slide == null) {\n                slide = this.options.slide ?? false;\n            }\n\n            return [slide, onFinished];\n        };\n\n        const [slide, onFinished] = parseParams();\n\n        this._openNode(node, slide, onFinished);\n        return this.element;\n    }\n\n    public closeNode(node: Node, slideParam?: null | boolean): JQuery {\n        if (!node) {\n            throw Error(NODE_PARAM_IS_EMPTY);\n        }\n\n        const slide = slideParam ?? this.options.slide;\n\n        if (node.isFolder() || node.isEmptyFolder) {\n            new FolderElement(node, this).close(\n                slide,\n                this.options.animationSpeed\n            );\n\n            this.saveState();\n        }\n\n        return this.element;\n    }\n\n    public isDragging(): boolean {\n        return this.dndHandler.isDragging;\n    }\n\n    public refreshHitAreas(): JQuery {\n        this.dndHandler.refresh();\n        return this.element;\n    }\n\n    public addNodeAfter(\n        newNodeInfo: NodeData,\n        existingNode: Node\n    ): Node | null {\n        const newNode = existingNode.addAfter(newNodeInfo);\n\n        if (newNode) {\n            this._refreshElements(existingNode.parent);\n        }\n\n        return newNode;\n    }\n\n    public addNodeBefore(\n        newNodeInfo: NodeData,\n        existingNode: Node\n    ): Node | null {\n        if (!existingNode) {\n            throw Error(PARAM_IS_EMPTY + \"existingNode\");\n        }\n\n        const newNode = existingNode.addBefore(newNodeInfo);\n\n        if (newNode) {\n            this._refreshElements(existingNode.parent);\n        }\n\n        return newNode;\n    }\n\n    public addParentNode(\n        newNodeInfo: NodeData,\n        existingNode: Node\n    ): Node | null {\n        if (!existingNode) {\n            throw Error(PARAM_IS_EMPTY + \"existingNode\");\n        }\n\n        const newNode = existingNode.addParent(newNodeInfo);\n\n        if (newNode) {\n            this._refreshElements(newNode.parent);\n        }\n\n        return newNode;\n    }\n\n    public removeNode(node: Node): JQuery {\n        if (!node) {\n            throw Error(NODE_PARAM_IS_EMPTY);\n        }\n\n        if (!node.parent) {\n            throw Error(\"Node has no parent\");\n        }\n\n        this.selectNodeHandler.removeFromSelection(node, true); // including children\n\n        const parent = node.parent;\n        node.remove();\n        this._refreshElements(parent);\n\n        return this.element;\n    }\n\n    public appendNode(newNodeInfo: NodeData, parentNodeParam?: Node): Node {\n        const parentNode = parentNodeParam || this.tree;\n\n        const node = parentNode.append(newNodeInfo);\n\n        this._refreshElements(parentNode);\n\n        return node;\n    }\n\n    public prependNode(newNodeInfo: NodeData, parentNodeParam?: Node): Node {\n        const parentNode = parentNodeParam ?? this.tree;\n\n        const node = parentNode.prepend(newNodeInfo);\n\n        this._refreshElements(parentNode);\n\n        return node;\n    }\n\n    public updateNode(node: Node, data: NodeData): JQuery {\n        if (!node) {\n            throw Error(NODE_PARAM_IS_EMPTY);\n        }\n\n        const idIsChanged =\n            typeof data === \"object\" && data.id && data.id !== node.id;\n\n        if (idIsChanged) {\n            this.tree.removeNodeFromIndex(node);\n        }\n\n        node.setData(data);\n\n        if (idIsChanged) {\n            this.tree.addNodeToIndex(node);\n        }\n\n        if (\n            typeof data === \"object\" &&\n            data[\"children\"] &&\n            data[\"children\"] instanceof Array\n        ) {\n            node.removeChildren();\n\n            if (data.children.length) {\n                node.loadFromData(data.children as Node[]);\n            }\n        }\n\n        this._refreshElements(node);\n\n        return this.element;\n    }\n\n    private isSelectedNodeInSubtree(subtree: Node): boolean {\n        const selectedNode = this.getSelectedNode();\n\n        if (!selectedNode) {\n            return false;\n        } else {\n            return subtree === selectedNode || subtree.isParentOf(selectedNode);\n        }\n    }\n\n    public moveNode(node: Node, targetNode: Node, position: string): JQuery {\n        if (!node) {\n            throw Error(NODE_PARAM_IS_EMPTY);\n        }\n\n        if (!targetNode) {\n            throw Error(PARAM_IS_EMPTY + \"targetNode\");\n        }\n\n        const positionIndex = getPosition(position);\n\n        if (positionIndex !== undefined) {\n            this.tree.moveNode(node, targetNode, positionIndex);\n            this._refreshElements(null);\n        }\n\n        return this.element;\n    }\n\n    public getStateFromStorage(): SavedState | null {\n        return this.saveStateHandler.getStateFromStorage();\n    }\n\n    public addToSelection(node: Node, mustSetFocus?: boolean): JQuery {\n        if (!node) {\n            throw Error(NODE_PARAM_IS_EMPTY);\n        }\n\n        this.selectNodeHandler.addToSelection(node);\n\n        this._getNodeElementForNode(node).select(\n            mustSetFocus === undefined ? true : mustSetFocus\n        );\n\n        this.saveState();\n\n        return this.element;\n    }\n\n    public getSelectedNodes(): Node[] {\n        return this.selectNodeHandler.getSelectedNodes();\n    }\n\n    public isNodeSelected(node: Node): boolean {\n        if (!node) {\n            throw Error(NODE_PARAM_IS_EMPTY);\n        }\n\n        return this.selectNodeHandler.isNodeSelected(node);\n    }\n\n    public removeFromSelection(node: Node): JQuery {\n        if (!node) {\n            throw Error(NODE_PARAM_IS_EMPTY);\n        }\n\n        this.selectNodeHandler.removeFromSelection(node);\n\n        this._getNodeElementForNode(node).deselect();\n        this.saveState();\n\n        return this.element;\n    }\n\n    public scrollToNode(node: Node): JQuery {\n        if (!node) {\n            throw Error(NODE_PARAM_IS_EMPTY);\n        }\n\n        const nodeOffset = jQuery(node.element).offset();\n        const nodeTop = nodeOffset ? nodeOffset.top : 0;\n\n        const treeOffset = this.$el.offset();\n        const treeTop = treeOffset ? treeOffset.top : 0;\n\n        const top = nodeTop - treeTop;\n\n        this.scrollHandler.scrollToY(top);\n\n        return this.element;\n    }\n\n    public getState(): SavedState | null {\n        return this.saveStateHandler.getState();\n    }\n\n    public setState(state: SavedState): JQuery {\n        this.saveStateHandler.setInitialState(state);\n        this._refreshElements(null);\n\n        return this.element;\n    }\n\n    public setOption(option: string, value: unknown): JQuery {\n        (this.options as unknown as Record<string, unknown>)[option] = value;\n        return this.element;\n    }\n\n    public moveDown(): JQuery {\n        const selectedNode = this.getSelectedNode();\n        if (selectedNode) {\n            this.keyHandler.moveDown(selectedNode);\n        }\n\n        return this.element;\n    }\n\n    public moveUp(): JQuery {\n        const selectedNode = this.getSelectedNode();\n        if (selectedNode) {\n            this.keyHandler.moveUp(selectedNode);\n        }\n\n        return this.element;\n    }\n\n    public getVersion(): string {\n        return __version__;\n    }\n\n    public _triggerEvent(\n        eventName: string,\n        values?: Record<string, unknown>\n    ): JQuery.Event {\n        const event = jQuery.Event(eventName, values);\n        this.element.trigger(event);\n        return event;\n    }\n\n    public _openNode(\n        node: Node,\n        slide = true,\n        onFinished: OnFinishOpenNode | null\n    ): void {\n        const doOpenNode = (\n            _node: Node,\n            _slide: boolean,\n            _onFinished: OnFinishOpenNode | null\n        ): void => {\n            const folderElement = new FolderElement(_node, this);\n            folderElement.open(\n                _onFinished,\n                _slide,\n                this.options.animationSpeed\n            );\n        };\n\n        if (node.isFolder() || node.isEmptyFolder) {\n            if (node.load_on_demand) {\n                this.loadFolderOnDemand(node, slide, onFinished);\n            } else {\n                let parent = node.parent;\n\n                while (parent) {\n                    // nb: do not open root element\n                    if (parent.parent) {\n                        doOpenNode(parent, false, null);\n                    }\n                    parent = parent.parent;\n                }\n\n                doOpenNode(node, slide, onFinished);\n                this.saveState();\n            }\n        }\n    }\n\n    /*\n    Redraw the tree or part of the tree.\n     from_node: redraw this subtree\n    */\n    public _refreshElements(fromNode: Node | null): void {\n        const mustSetFocus = this.selectNodeHandler.isFocusOnTree();\n        const mustSelect = fromNode\n            ? this.isSelectedNodeInSubtree(fromNode)\n            : false;\n\n        this.renderer.render(fromNode);\n\n        if (mustSelect) {\n            this.selectCurrentNode(mustSetFocus);\n        }\n\n        this._triggerEvent(\"tree.refresh\");\n    }\n\n    public _getNodeElementForNode(node: Node): NodeElement {\n        if (node.isFolder()) {\n            return new FolderElement(node, this);\n        } else {\n            return new NodeElement(node, this);\n        }\n    }\n\n    public _getNodeElement($element: JQuery<HTMLElement>): NodeElement | null {\n        const node = this.getNode($element);\n        if (node) {\n            return this._getNodeElementForNode(node);\n        } else {\n            return null;\n        }\n    }\n\n    public _containsElement(element: HTMLElement): boolean {\n        const node = this.getNode(jQuery(element));\n\n        return node != null && node.tree === this.tree;\n    }\n\n    public _getScrollLeft(): number {\n        return this.scrollHandler.getScrollLeft();\n    }\n\n    public init(): void {\n        super.init();\n\n        this.element = this.$el;\n        this.isInitialized = false;\n\n        this.options.rtl = this.getRtlOption();\n\n        if (this.options.closedIcon == null) {\n            this.options.closedIcon = this.getDefaultClosedIcon();\n        }\n\n        this.renderer = new ElementsRenderer(this);\n        this.dataLoader = new DataLoader(this);\n        this.saveStateHandler = new SaveStateHandler(this);\n        this.selectNodeHandler = new SelectNodeHandler(this);\n        this.dndHandler = new DragAndDropHandler(this);\n        this.scrollHandler = new ScrollHandler(this);\n        this.keyHandler = new KeyHandler(this);\n\n        this.initData();\n\n        this.element.on(\"click\", this.handleClick);\n        this.element.on(\"dblclick\", this.handleDblclick);\n\n        if (this.options.useContextMenu) {\n            this.element.on(\"contextmenu\", this.handleContextmenu);\n        }\n    }\n\n    public deinit(): void {\n        this.element.empty();\n        this.element.off();\n\n        this.keyHandler.deinit();\n\n        this.tree = new Node({}, true);\n\n        super.deinit();\n    }\n\n    protected mouseCapture(positionInfo: PositionInfo): boolean | null {\n        if (this.options.dragAndDrop) {\n            return this.dndHandler.mouseCapture(positionInfo);\n        } else {\n            return false;\n        }\n    }\n\n    protected mouseStart(positionInfo: PositionInfo): boolean {\n        if (this.options.dragAndDrop) {\n            return this.dndHandler.mouseStart(positionInfo);\n        } else {\n            return false;\n        }\n    }\n\n    protected mouseDrag(positionInfo: PositionInfo): boolean {\n        if (this.options.dragAndDrop) {\n            const result = this.dndHandler.mouseDrag(positionInfo);\n\n            this.scrollHandler.checkScrolling();\n            return result;\n        } else {\n            return false;\n        }\n    }\n\n    protected mouseStop(positionInfo: PositionInfo): boolean {\n        if (this.options.dragAndDrop) {\n            return this.dndHandler.mouseStop(positionInfo);\n        } else {\n            return false;\n        }\n    }\n\n    protected getMouseDelay(): number {\n        return this.options.startDndDelay ?? 0;\n    }\n\n    private initData(): void {\n        if (this.options.data) {\n            this.doLoadData(this.options.data, null);\n        } else {\n            const dataUrl = this.getDataUrlInfo(null);\n\n            if (dataUrl) {\n                this.doLoadDataFromUrl(null, null, null);\n            } else {\n                this.doLoadData([], null);\n            }\n        }\n    }\n\n    private getDataUrlInfo(node: Node | null): JQuery.AjaxSettings | null {\n        const dataUrl =\n            this.options.dataUrl || (this.element.data(\"url\") as string | null);\n\n        const getUrlFromString = (url: string): JQuery.AjaxSettings => {\n            const urlInfo: JQuery.AjaxSettings = { url };\n\n            setUrlInfoData(urlInfo);\n\n            return urlInfo;\n        };\n\n        const setUrlInfoData = (urlInfo: JQuery.AjaxSettings): void => {\n            if (node?.id) {\n                // Load on demand of a subtree; add node parameter\n                const data = { node: node.id };\n                urlInfo[\"data\"] = data;\n            } else {\n                // Add selected_node parameter\n                const selectedNodeId = this.getNodeIdToBeSelected();\n                if (selectedNodeId) {\n                    const data = { selected_node: selectedNodeId };\n                    urlInfo[\"data\"] = data;\n                }\n            }\n        };\n\n        if (typeof dataUrl === \"function\") {\n            return dataUrl(node);\n        } else if (typeof dataUrl === \"string\") {\n            return getUrlFromString(dataUrl);\n        } else if (dataUrl && typeof dataUrl === \"object\") {\n            setUrlInfoData(dataUrl);\n            return dataUrl;\n        } else {\n            return null;\n        }\n    }\n\n    private getNodeIdToBeSelected(): NodeId | null {\n        if (this.options.saveState) {\n            return this.saveStateHandler.getNodeIdToBeSelected();\n        } else {\n            return null;\n        }\n    }\n\n    private initTree(data: NodeData[]): void {\n        const doInit = (): void => {\n            if (!this.isInitialized) {\n                this.isInitialized = true;\n                this._triggerEvent(\"tree.init\");\n            }\n        };\n\n        if (!this.options.nodeClass) {\n            return;\n        }\n\n        this.tree = new this.options.nodeClass(\n            null,\n            true,\n            this.options.nodeClass\n        );\n\n        this.selectNodeHandler.clear();\n\n        this.tree.loadFromData(data);\n\n        const mustLoadOnDemand = this.setInitialState();\n\n        this._refreshElements(null);\n\n        if (!mustLoadOnDemand) {\n            doInit();\n        } else {\n            // Load data on demand and then init the tree\n            this.setInitialStateOnDemand(doInit);\n        }\n    }\n\n    // Set initial state, either by restoring the state or auto-opening nodes\n    // result: must load nodes on demand?\n    private setInitialState(): boolean {\n        const restoreState = (): [boolean, boolean] => {\n            // result: is state restored, must load on demand?\n            if (!this.options.saveState) {\n                return [false, false];\n            } else {\n                const state = this.saveStateHandler.getStateFromStorage();\n\n                if (!state) {\n                    return [false, false];\n                } else {\n                    const mustLoadOnDemand =\n                        this.saveStateHandler.setInitialState(state);\n\n                    // return true: the state is restored\n                    return [true, mustLoadOnDemand];\n                }\n            }\n        };\n\n        const autoOpenNodes = (): boolean => {\n            // result: must load on demand?\n            if (this.options.autoOpen === false) {\n                return false;\n            }\n\n            const maxLevel = this.getAutoOpenMaxLevel();\n            let mustLoadOnDemand = false;\n\n            this.tree.iterate((node: Node, level: number) => {\n                if (node.load_on_demand) {\n                    mustLoadOnDemand = true;\n                    return false;\n                } else if (!node.hasChildren()) {\n                    return false;\n                } else {\n                    node.is_open = true;\n                    return level !== maxLevel;\n                }\n            });\n\n            return mustLoadOnDemand;\n        };\n\n        let [isRestored, mustLoadOnDemand] = restoreState(); // eslint-disable-line prefer-const\n\n        if (!isRestored) {\n            mustLoadOnDemand = autoOpenNodes();\n        }\n\n        return mustLoadOnDemand;\n    }\n\n    // Set the initial state for nodes that are loaded on demand\n    // Call cb_finished when done\n    private setInitialStateOnDemand(cbFinished: () => void): void {\n        const restoreState = (): boolean => {\n            if (!this.options.saveState) {\n                return false;\n            } else {\n                const state = this.saveStateHandler.getStateFromStorage();\n\n                if (!state) {\n                    return false;\n                } else {\n                    this.saveStateHandler.setInitialStateOnDemand(\n                        state,\n                        cbFinished\n                    );\n\n                    return true;\n                }\n            }\n        };\n\n        const autoOpenNodes = (): void => {\n            const maxLevel = this.getAutoOpenMaxLevel();\n            let loadingCount = 0;\n\n            const loadAndOpenNode = (node: Node): void => {\n                loadingCount += 1;\n                this._openNode(node, false, () => {\n                    loadingCount -= 1;\n                    openNodes();\n                });\n            };\n\n            const openNodes = (): void => {\n                this.tree.iterate((node: Node, level: number) => {\n                    if (node.load_on_demand) {\n                        if (!node.is_loading) {\n                            loadAndOpenNode(node);\n                        }\n\n                        return false;\n                    } else {\n                        this._openNode(node, false, null);\n\n                        return level !== maxLevel;\n                    }\n                });\n\n                if (loadingCount === 0) {\n                    cbFinished();\n                }\n            };\n\n            openNodes();\n        };\n\n        if (!restoreState()) {\n            autoOpenNodes();\n        }\n    }\n\n    private getAutoOpenMaxLevel(): number {\n        if (this.options.autoOpen === true) {\n            return -1;\n        } else if (typeof this.options.autoOpen === \"number\") {\n            return this.options.autoOpen;\n        } else if (typeof this.options.autoOpen === \"string\") {\n            return parseInt(this.options.autoOpen, 10);\n        } else {\n            return 0;\n        }\n    }\n\n    private handleClick = (\n        e: JQuery.ClickEvent<HTMLElement, any, HTMLElement, HTMLElement>\n    ): void => {\n        const clickTarget = this.getClickTarget(e.target);\n\n        if (clickTarget) {\n            if (clickTarget.type === \"button\") {\n                this.toggle(clickTarget.node, this.options.slide);\n\n                e.preventDefault();\n                e.stopPropagation();\n            } else if (clickTarget.type === \"label\") {\n                const node = clickTarget.node;\n                const event = this._triggerEvent(\"tree.click\", {\n                    node,\n                    click_event: e,\n                });\n\n                if (!event.isDefaultPrevented()) {\n                    this.doSelectNode(node);\n                }\n            }\n        }\n    };\n\n    private handleDblclick = (\n        e: JQuery.DoubleClickEvent<HTMLElement, any, HTMLElement, HTMLElement>\n    ): void => {\n        const clickTarget = this.getClickTarget(e.target);\n\n        if (clickTarget?.type === \"label\") {\n            this._triggerEvent(\"tree.dblclick\", {\n                node: clickTarget.node,\n                click_event: e,\n            });\n        }\n    };\n\n    private getClickTarget(element: EventTarget): ClickTarget | null {\n        const $target = jQuery(element);\n\n        const $button = $target.closest(\".jqtree-toggler\");\n\n        if ($button.length) {\n            const node = this.getNode($button as JQuery<HTMLElement>);\n\n            if (node) {\n                return {\n                    type: \"button\",\n                    node,\n                };\n            }\n        } else {\n            const $el = $target.closest(\".jqtree-element\");\n            if ($el.length) {\n                const node = this.getNode($el as JQuery<HTMLElement>);\n                if (node) {\n                    return {\n                        type: \"label\",\n                        node,\n                    };\n                }\n            }\n        }\n\n        return null;\n    }\n\n    private getNode($element: JQuery<HTMLElement>): null | Node {\n        const $li = $element.closest(\"li.jqtree_common\");\n        if ($li.length === 0) {\n            return null;\n        } else {\n            return $li.data(\"node\") as Node;\n        }\n    }\n\n    private handleContextmenu = (\n        e: JQuery.ContextMenuEvent<HTMLElement, any, HTMLElement, HTMLElement>\n    ) => {\n        const $div = jQuery(e.target).closest(\"ul.jqtree-tree .jqtree-element\");\n        if ($div.length) {\n            const node = this.getNode($div);\n            if (node) {\n                e.preventDefault();\n                e.stopPropagation();\n\n                this._triggerEvent(\"tree.contextmenu\", {\n                    node,\n                    click_event: e,\n                });\n                return false;\n            }\n        }\n\n        return null;\n    };\n\n    private saveState(): void {\n        if (this.options.saveState) {\n            this.saveStateHandler.saveState();\n        }\n    }\n\n    private selectCurrentNode(mustSetFocus: boolean): void {\n        const node = this.getSelectedNode();\n        if (node) {\n            const nodeElement = this._getNodeElementForNode(node);\n            if (nodeElement) {\n                nodeElement.select(mustSetFocus);\n            }\n        }\n    }\n\n    private deselectCurrentNode(): void {\n        const node = this.getSelectedNode();\n        if (node) {\n            this.removeFromSelection(node);\n        }\n    }\n\n    private getDefaultClosedIcon(): string {\n        if (this.options.rtl) {\n            // triangle to the left\n            return \"&#x25c0;\";\n        } else {\n            // triangle to the right\n            return \"&#x25ba;\";\n        }\n    }\n\n    private getRtlOption(): boolean {\n        if (this.options.rtl != null) {\n            return this.options.rtl;\n        } else {\n            const dataRtl = this.element.data(\"rtl\") as unknown;\n\n            if (\n                dataRtl !== null &&\n                dataRtl !== false &&\n                dataRtl !== undefined\n            ) {\n                return true;\n            } else {\n                return false;\n            }\n        }\n    }\n\n    private doSelectNode(\n        node: Node | null,\n        optionsParam?: SelectNodeOptions\n    ): void {\n        const saveState = (): void => {\n            if (this.options.saveState) {\n                this.saveStateHandler.saveState();\n            }\n        };\n\n        if (!node) {\n            // Called with empty node -> deselect current node\n            this.deselectCurrentNode();\n            saveState();\n            return;\n        }\n        const defaultOptions = { mustSetFocus: true, mustToggle: true };\n        const selectOptions = { ...defaultOptions, ...(optionsParam || {}) };\n\n        const canSelect = (): boolean => {\n            if (this.options.onCanSelectNode) {\n                return (\n                    this.options.selectable === true &&\n                    this.options.onCanSelectNode(node)\n                );\n            } else {\n                return this.options.selectable === true;\n            }\n        };\n\n        const openParents = (): void => {\n            const parent = node.parent;\n\n            if (parent && parent.parent && !parent.is_open) {\n                this.openNode(parent, false);\n            }\n        };\n\n        if (!canSelect()) {\n            return;\n        }\n\n        if (this.selectNodeHandler.isNodeSelected(node)) {\n            if (selectOptions.mustToggle) {\n                this.deselectCurrentNode();\n                this._triggerEvent(\"tree.select\", {\n                    node: null,\n                    previous_node: node,\n                });\n            }\n        } else {\n            const deselectedNode = this.getSelectedNode() || null;\n            this.deselectCurrentNode();\n            this.addToSelection(node, selectOptions.mustSetFocus);\n\n            this._triggerEvent(\"tree.select\", {\n                node,\n                deselected_node: deselectedNode,\n            });\n            openParents();\n        }\n\n        saveState();\n    }\n\n    private doLoadData(data: NodeData[] | null, parentNode: Node | null): void {\n        if (data) {\n            if (parentNode) {\n                this.deselectNodes(parentNode);\n                this.loadSubtree(data, parentNode);\n            } else {\n                this.initTree(data);\n            }\n\n            if (this.isDragging()) {\n                this.dndHandler.refresh();\n            }\n        }\n\n        this._triggerEvent(\"tree.load_data\", {\n            tree_data: data,\n            parent_node: parentNode,\n        });\n    }\n\n    private deselectNodes(parentNode: Node): void {\n        const selectedNodesUnderParent =\n            this.selectNodeHandler.getSelectedNodesUnder(parentNode);\n        for (const n of selectedNodesUnderParent) {\n            this.selectNodeHandler.removeFromSelection(n);\n        }\n    }\n\n    private loadSubtree(data: NodeData[], parentNode: Node): void {\n        parentNode.loadFromData(data);\n\n        parentNode.load_on_demand = false;\n        parentNode.is_loading = false;\n\n        this._refreshElements(parentNode);\n    }\n\n    private doLoadDataFromUrl(\n        urlInfoParam: string | JQuery.AjaxSettings | null,\n        parentNode: Node | null,\n        onFinished: HandleFinishedLoading | null\n    ): void {\n        const urlInfo = urlInfoParam || this.getDataUrlInfo(parentNode);\n\n        this.dataLoader.loadFromUrl(urlInfo, parentNode, onFinished);\n    }\n\n    private loadFolderOnDemand(\n        node: Node,\n        slide = true,\n        onFinished: OnFinishOpenNode | null\n    ): void {\n        node.is_loading = true;\n\n        this.doLoadDataFromUrl(null, node, () => {\n            this._openNode(node, slide, onFinished);\n        });\n    }\n}\n\nSimpleWidget.register(JqTreeWidget, \"tree\");\n"],"names":["version","Position","positionNames","before","Before","after","After","inside","Inside","none","None","getPositionName","position","name","Object","prototype","hasOwnProperty","call","getPosition","isNodeRecordWithChildren","data","Array","Node","constructor","o","arguments","length","undefined","isRoot","nodeClass","isEmptyFolder","load_on_demand","setData","children","parent","idMapping","Map","tree","key","value","loadFromData","removeChildren","node","createNode","addChild","push","setParent","addChildAtPosition","index","splice","removeChild","doRemoveChild","getChildIndex","indexOf","hasChildren","isFolder","iterate","callback","_iterate","level","child","result","moveNode","movedNode","targetNode","isParentOf","getData","includeParent","getDataFromNodes","nodes","map","tmpNode","k","v","getNodeByName","getNodeByCallback","getNodeByNameMustExist","n","addAfter","nodeInfo","childIndex","addBefore","addParent","newParent","originalParent","remove","append","prepend","getLevel","getNodeById","nodeId","get","addNodeToIndex","id","set","removeNodeFromIndex","delete","getPreviousSibling","previousIndex","getNextSibling","nextIndex","getNodesByProperty","filter","f","getNextNode","includeChildren","nextSibling","getNextVisibleNode","is_open","getPreviousNode","previousSibling","getParent","getLastChild","getPreviousVisibleNode","lastChild","initFromData","addNode","nodeData","addChildren","childrenData","getNodeClass","DragAndDropHandler","treeWidget","hoveredArea","hitAreas","isDragging","currentItem","positionInfo","mouseCapture","$element","jQuery","target","mustCaptureElement","options","onIsMoveHandle","nodeElement","_getNodeElement","onCanMove","mouseStart","pageX","pageY","refresh","offset","left","top","dragElement","DragElement","element","autoEscape","addClass","mouseDrag","move","area","findHoveredArea","canMoveToArea","stopOpenFolderTimer","mustOpenFolderTimer","startOpenFolderTimer","updateDropHint","removeDropHint","onDragMove","originalEvent","mouseStop","moveItem","clear","removeHover","removeHitAreas","removeClass","onDragStop","generateHitAreas","_getNodeElementForNode","hitAreasGenerator","HitAreasGenerator","getTreeDimensions","bottom","generate","is","onCanMoveTo","positionName","previousGhost","x","y","dimensions","right","low","high","mid","addDropHint","folder","openFolder","_openNode","slide","openFolderDelay","openFolderTimer","window","setTimeout","clearTimeout","previousParent","doMove","empty","_refreshElements","event","_triggerEvent","move_info","moved_node","target_node","previous_parent","do_move","original_event","isDefaultPrevented","el","width","height","_getScrollLeft","VisibleNodeIterator","isFirstNode","_iterateNode","nextNode","mustIterateInside","handleFirstNode","handleNode","handleOpenFolder","handleClosedFolder","childrenLength","forEach","_","i","nextChild","handleAfterOpenFolder","currentNode","treeBottom","positions","lastTop","previousTop","group","generateHitAreasForGroup","addPosition","getTop","positionsInGroup","positionCount","Math","min","areaHeight","round","areaTop","nodeName","offsetX","offsetY","$tree","text","html","css","isInt","isFunction","getBoolString","ElementsRenderer","openedIconElement","createButtonElement","openedIcon","closedIconElement","closedIcon","render","fromNode","renderFromNode","renderFromRoot","createDomElements","$previousLi","li","createLi","attachNodeData","isRootNode","ul","createUl","appendChild","classString","role","rtl","dragAndDrop","document","createElement","className","setAttribute","isSelected","Boolean","selectNodeHandler","isNodeSelected","mustShowFolder","showEmptyFolder","createFolderLi","createNodeLi","onCreateLi","setTreeItemAriaAttributes","buttonClasses","getButtonClasses","folderClasses","getFolderClasses","iconElement","div","buttonLink","cloneNode","buttonLeft","titleSpan","createTitleSpan","liClasses","join","classes","tabIndex","textContent","innerHTML","is_loading","createTextNode","DataLoader","loadFromUrl","urlInfo","parentNode","onFinished","$el","getDomElement","addLoadingClass","notifyLoading","stopLoading","removeLoadingClass","handleSuccess","loadData","parseData","handleError","jqXHR","onLoadFailed","submitRequest","isLoading","onLoading","urlInfoInput","url","ajaxSettings","method","cache","dataType","success","error","toUpperCase","ajax","dataFilter","getParsedData","JSON","parse","parsedData","KeyHandler","LEFT","UP","RIGHT","DOWN","keyboardSupport","on","handleKeyDown","deinit","off","moveDown","selectedNode","selectNode","moveUp","moveRight","openNode","moveLeft","closeNode","scrollHandler","isScrolledIntoView","find","scrollToNode","e","canHandleKeyboard","getSelectedNode","which","isFocusOnTree","register","widgetClass","widgetName","getDataKey","getWidgetData","dataKey","widget","SimpleWidget","createWidget","existingWidget","simpleWidgetClass","init","destroyWidget","destroy","removeData","callFunction","functionName","args","simpleWidget","widgetFunction","apply","fn","argument1","_len","_key","defaults","getPositionInfoFromMouseEvent","getPositionInfoFromTouch","touch","MouseWidget","addEventListener","mouseDown","passive","touchStart","isMouseStarted","mouseDelayTimer","isMouseDelayMet","mouseDownInfo","removeEventListener","removeMouseMoveEventListeners","button","handleMouseDown","cancelable","preventDefault","handleMouseUp","handleStartMouse","mouseMove","touchMove","mouseUp","touchEnd","mouseDelay","getMouseDelay","startMouseDelayTimer","handleMouseMove","touches","changedTouches","SaveStateHandler","saveState","state","stringify","getState","onSetStateFromStorage","supportsLocalStorage","localStorage","setItem","getKeyName","getStateFromStorage","jsonData","loadFromStorage","parseState","getOpenNodeIds","openNodes","getSelectedNodeIds","selectedNodeIds","getSelectedNodes","open_nodes","selected_node","setInitialState","mustLoadOnDemand","openInitialNodes","resetSelection","selectInitialNodes","setInitialStateOnDemand","cbFinished","doSetInitialStateOnDemand","getNodeIdToBeSelected","onGetStateFromStorage","getItem","nodeIds","selectCount","addToSelection","selectedNodes","removeFromSelection","nodeIdsParam","loadingCount","newNodesIds","loadAndOpenNode","testSupport","sessionStorage","removeItem","_supportsLocalStorage","ScrollHandler","isInitialized","checkScrolling","ensureInit","checkVerticalScrolling","checkHorizontalScrolling","scrollToY","$scrollParent","scrollTop","treeTop","elementBottom","viewBottom","elementTop","viewTop","elHeight","originalTop","scrollParentTop","windowHeight","getScrollLeft","scrollLeft","initScrollParent","getParentWithOverflow","cssAttributes","hasOverFlow","attr","overflowValue","parents","setDocumentAsScrollParent","tagName","handleVerticalScrollingWithScrollParent","scrollParent","distanceBottom","offsetHeight","refreshHitAreas","handleVerticalScrollingWithDocument","distanceTop","dndHandler","handleHorizontalScrollingWithParent","handleHorizontalScrollingWithDocument","scrollParentOffset","canScrollRight","clientWidth","scrollWidth","canScrollLeft","rightEdge","leftEdge","isNearRightEdge","isNearLeftEdge","max","$document","windowWidth","SelectNodeHandler","Set","selectedSingleNode","getSelectedNodesUnder","has","add","activeElement","_containsElement","NodeElement","mustShowBorderDropHint","BorderDropHint","GhostDropHint","select","mustSetFocus","$li","getLi","$span","getSpan","trigger","deselect","removeAttr","getUl","FolderElement","open","animationSpeed","$button","getButton","buttonEl","renderer","icon","doOpen","$titleSpan","slideDown","show","close","doClose","slideUp","hide","$div","elWidth","outerHeight","$hint","$ghost","moveAfter","moveBefore","moveInsideOpenFolder","moveInside","childElement","NODE_PARAM_IS_EMPTY","PARAM_IS_EMPTY","JqTreeWidget","autoOpen","dataUrl","onCanSelectNode","selectable","startDndDelay","useContextMenu","toggle","slideParam","Error","getTree","optionsParam","doSelectNode","toJson","doLoadData","loadDataFromUrl","param1","param2","param3","doLoadDataFromUrl","reload","getNodeByHtmlElement","getNode","parseParams","addNodeAfter","newNodeInfo","existingNode","newNode","addNodeBefore","addParentNode","removeNode","appendNode","parentNodeParam","prependNode","updateNode","idIsChanged","isSelectedNodeInSubtree","subtree","positionIndex","saveStateHandler","nodeOffset","nodeTop","treeOffset","setState","setOption","option","keyHandler","getVersion","__version__","eventName","values","Event","doOpenNode","_node","_slide","_onFinished","folderElement","loadFolderOnDemand","mustSelect","selectCurrentNode","getRtlOption","getDefaultClosedIcon","dataLoader","initData","handleClick","handleDblclick","handleContextmenu","getDataUrlInfo","getUrlFromString","setUrlInfoData","selectedNodeId","initTree","doInit","restoreState","autoOpenNodes","maxLevel","getAutoOpenMaxLevel","isRestored","parseInt","clickTarget","getClickTarget","type","stopPropagation","click_event","$target","closest","deselectCurrentNode","dataRtl","defaultOptions","mustToggle","selectOptions","canSelect","openParents","previous_node","deselectedNode","deselected_node","deselectNodes","loadSubtree","tree_data","parent_node","selectedNodesUnderParent","urlInfoParam"],"mappings":";;;;;;;;;;;;;;;;;;;;;;IAAA,MAAMA,OAAO,GAAG,OAAO;;ICIXC,IAAAA,QAAQ,0BAARA,QAAQ,EAAA;IAARA,EAAAA,QAAQ,CAARA,QAAQ,CAAA,QAAA,CAAA,GAAA,CAAA,CAAA,GAAA,QAAA,CAAA;IAARA,EAAAA,QAAQ,CAARA,QAAQ,CAAA,OAAA,CAAA,GAAA,CAAA,CAAA,GAAA,OAAA,CAAA;IAARA,EAAAA,QAAQ,CAARA,QAAQ,CAAA,QAAA,CAAA,GAAA,CAAA,CAAA,GAAA,QAAA,CAAA;IAARA,EAAAA,QAAQ,CAARA,QAAQ,CAAA,MAAA,CAAA,GAAA,CAAA,CAAA,GAAA,MAAA,CAAA;IAAA,EAAA,OAARA,QAAQ,CAAA;IAAA,CAAA,CAAA,EAAA,CAAA,CAAA;IAOpB,MAAMC,aAAuC,GAAG;MAC5CC,MAAM,EAAEF,QAAQ,CAACG,MAAM;MACvBC,KAAK,EAAEJ,QAAQ,CAACK,KAAK;MACrBC,MAAM,EAAEN,QAAQ,CAACO,MAAM;MACvBC,IAAI,EAAER,QAAQ,CAACS,IAAAA;IACnB,CAAC,CAAA;IAIM,MAAMC,eAAe,GAAIC,QAAkB,IAAa;IAC3D,EAAA,KAAK,MAAMC,IAAI,IAAIX,aAAa,EAAE;IAC9B,IAAA,IAAIY,MAAM,CAACC,SAAS,CAACC,cAAc,CAACC,IAAI,CAACf,aAAa,EAAEW,IAAI,CAAC,EAAE;IAC3D,MAAA,IAAIX,aAAa,CAACW,IAAI,CAAC,KAAKD,QAAQ,EAAE;IAClC,QAAA,OAAOC,IAAI,CAAA;IACf,OAAA;IACJ,KAAA;IACJ,GAAA;IAEA,EAAA,OAAO,EAAE,CAAA;IACb,CAAC,CAAA;IAEM,MAAMK,WAAW,GAAIL,IAAY,IACpCX,aAAa,CAACW,IAAI,CAAC,CAAA;IAEvB,MAAMM,wBAAwB,GAC1BC,IAAc,IAEd,OAAOA,IAAI,KAAK,QAAQ,IACxB,UAAU,IAAIA,IAAI,IAClBA,IAAI,CAAC,UAAU,CAAC,YAAYC,KAAK,CAAA;IAE9B,MAAMC,IAAI,CAAkB;IAgB/BC,EAAAA,WAAWA,GAA8D;IAAA,IAAA,IAA7DC,CAAkB,GAAAC,SAAA,CAAAC,MAAA,GAAA,CAAA,IAAAD,SAAA,CAAA,CAAA,CAAA,KAAAE,SAAA,GAAAF,SAAA,CAAA,CAAA,CAAA,GAAG,IAAI,CAAA;IAAA,IAAA,IAAEG,MAAM,GAAAH,SAAA,CAAAC,MAAA,GAAA,CAAA,IAAAD,SAAA,CAAA,CAAA,CAAA,KAAAE,SAAA,GAAAF,SAAA,CAAA,CAAA,CAAA,GAAG,KAAK,CAAA;IAAA,IAAA,IAAEI,SAAS,GAAAJ,SAAA,CAAAC,MAAA,GAAA,CAAA,IAAAD,SAAA,CAAA,CAAA,CAAA,KAAAE,SAAA,GAAAF,SAAA,CAAA,CAAA,CAAA,GAAGH,IAAI,CAAA;QACnE,IAAI,CAACT,IAAI,GAAG,EAAE,CAAA;QACd,IAAI,CAACiB,aAAa,GAAG,KAAK,CAAA;QAC1B,IAAI,CAACC,cAAc,GAAG,KAAK,CAAA;IAE3B,IAAA,IAAI,CAACC,OAAO,CAACR,CAAC,CAAC,CAAA;QAEf,IAAI,CAACS,QAAQ,GAAG,EAAE,CAAA;QAClB,IAAI,CAACC,MAAM,GAAG,IAAI,CAAA;IAElB,IAAA,IAAIN,MAAM,EAAE;IACR,MAAA,IAAI,CAACO,SAAS,GAAG,IAAIC,GAAG,EAAgB,CAAA;UACxC,IAAI,CAACC,IAAI,GAAG,IAAI,CAAA;UAChB,IAAI,CAACR,SAAS,GAAGA,SAAS,CAAA;IAC9B,KAAA;IACJ,GAAA;;IAEA;IACJ;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;MAMWG,OAAOA,CAACR,CAAkB,EAAQ;QACrC,IAAI,CAACA,CAAC,EAAE;IACJ,MAAA,OAAA;IACJ,KAAC,MAAM,IAAI,OAAOA,CAAC,KAAK,QAAQ,EAAE;UAC9B,IAAI,CAACX,IAAI,GAAGW,CAAC,CAAA;IACjB,KAAC,MAAM,IAAI,OAAOA,CAAC,KAAK,QAAQ,EAAE;IAC9B,MAAA,KAAK,MAAMc,GAAG,IAAId,CAAC,EAAE;IACjB,QAAA,IAAIV,MAAM,CAACC,SAAS,CAACC,cAAc,CAACC,IAAI,CAACO,CAAC,EAAEc,GAAG,CAAC,EAAE;IAC9C,UAAA,MAAMC,KAAK,GAAGf,CAAC,CAACc,GAAG,CAAC,CAAA;IAEpB,UAAA,IAAIA,GAAG,KAAK,OAAO,IAAIA,GAAG,KAAK,MAAM,EAAE;IACnC;IACA,YAAA,IAAI,OAAOC,KAAK,KAAK,QAAQ,EAAE;kBAC3B,IAAI,CAAC1B,IAAI,GAAG0B,KAAK,CAAA;IACrB,aAAA;eACH,MAAM,IAAID,GAAG,KAAK,UAAU,IAAIA,GAAG,KAAK,QAAQ,EAAE;IAC/C;IACA,YAAA,IAAI,CAACA,GAAG,CAAC,GAAGC,KAAK,CAAA;IACrB,WAAA;IACJ,SAAA;IACJ,OAAA;IACJ,KAAA;IACJ,GAAA;;IAEA;IACJ;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;MAEWC,YAAYA,CAACpB,IAAgB,EAAQ;QACxC,IAAI,CAACqB,cAAc,EAAE,CAAA;IAErB,IAAA,KAAK,MAAMjB,CAAC,IAAIJ,IAAI,EAAE;IAClB,MAAA,MAAMsB,IAAI,GAAG,IAAI,CAACC,UAAU,CAACnB,CAAC,CAAC,CAAA;IAC/B,MAAA,IAAI,CAACoB,QAAQ,CAACF,IAAI,CAAC,CAAA;IAEnB,MAAA,IAAIvB,wBAAwB,CAACK,CAAC,CAAC,EAAE;IAC7B,QAAA,IAAIA,CAAC,CAACS,QAAQ,CAACP,MAAM,KAAK,CAAC,EAAE;cACzBgB,IAAI,CAACZ,aAAa,GAAG,IAAI,CAAA;IAC7B,SAAC,MAAM;IACHY,UAAAA,IAAI,CAACF,YAAY,CAAChB,CAAC,CAACS,QAAQ,CAAC,CAAA;IACjC,SAAA;IACJ,OAAA;IACJ,KAAA;IAEA,IAAA,OAAO,IAAI,CAAA;IACf,GAAA;;IAEA;IACJ;IACA;IACA;IACA;IACA;MAEWW,QAAQA,CAACF,IAAU,EAAQ;IAC9B,IAAA,IAAI,CAACT,QAAQ,CAACY,IAAI,CAACH,IAAI,CAAC,CAAA;IACxBA,IAAAA,IAAI,CAACI,SAAS,CAAC,IAAI,CAAC,CAAA;IACxB,GAAA;;IAEA;IACJ;IACA;IACA;IACA;IACA;IACA;IAEWC,EAAAA,kBAAkBA,CAACL,IAAU,EAAEM,KAAa,EAAQ;QACvD,IAAI,CAACf,QAAQ,CAACgB,MAAM,CAACD,KAAK,EAAE,CAAC,EAAEN,IAAI,CAAC,CAAA;IACpCA,IAAAA,IAAI,CAACI,SAAS,CAAC,IAAI,CAAC,CAAA;IACxB,GAAA;;IAEA;IACJ;IACA;IACA;MAEWI,WAAWA,CAACR,IAAU,EAAQ;IACjC;QACAA,IAAI,CAACD,cAAc,EAAE,CAAA;IAErB,IAAA,IAAI,CAACU,aAAa,CAACT,IAAI,CAAC,CAAA;IAC5B,GAAA;;IAEA;IACJ;IACA;IACA;MAEWU,aAAaA,CAACV,IAAU,EAAU;IACrC,IAAA,OAAO,IAAI,CAACT,QAAQ,CAACoB,OAAO,CAACX,IAAI,CAAC,CAAA;IACtC,GAAA;;IAEA;IACJ;IACA;IACA;IACA;IACA;IAEWY,EAAAA,WAAWA,GAAY;IAC1B,IAAA,OAAO,IAAI,CAACrB,QAAQ,CAACP,MAAM,KAAK,CAAC,CAAA;IACrC,GAAA;IAEO6B,EAAAA,QAAQA,GAAY;QACvB,OAAO,IAAI,CAACD,WAAW,EAAE,IAAI,IAAI,CAACvB,cAAc,CAAA;IACpD,GAAA;;IAEA;IACJ;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;MAMWyB,OAAOA,CAACC,QAAyB,EAAQ;IAC5C,IAAA,MAAMC,QAAQ,GAAGA,CAAChB,IAAU,EAAEiB,KAAa,KAAW;UAClD,IAAIjB,IAAI,CAACT,QAAQ,EAAE;IACf,QAAA,KAAK,MAAM2B,KAAK,IAAIlB,IAAI,CAACT,QAAQ,EAAE;IAC/B,UAAA,MAAM4B,MAAM,GAAGJ,QAAQ,CAACG,KAAK,EAAED,KAAK,CAAC,CAAA;IAErC,UAAA,IAAIE,MAAM,IAAID,KAAK,CAACN,WAAW,EAAE,EAAE;IAC/BI,YAAAA,QAAQ,CAACE,KAAK,EAAED,KAAK,GAAG,CAAC,CAAC,CAAA;IAC9B,WAAA;IACJ,SAAA;IACJ,OAAA;SACH,CAAA;IAEDD,IAAAA,QAAQ,CAAC,IAAI,EAAE,CAAC,CAAC,CAAA;IACrB,GAAA;;IAEA;IACJ;IACA;IACA;IACA;IACA;IAGWI,EAAAA,QAAQA,CACXC,SAAe,EACfC,UAAgB,EAChBpD,QAAkB,EACX;QACP,IAAI,CAACmD,SAAS,CAAC7B,MAAM,IAAI6B,SAAS,CAACE,UAAU,CAACD,UAAU,CAAC,EAAE;IACvD;IACA;IACA,MAAA,OAAO,KAAK,CAAA;IAChB,KAAC,MAAM;IACHD,MAAAA,SAAS,CAAC7B,MAAM,CAACiB,aAAa,CAACY,SAAS,CAAC,CAAA;IAEzC,MAAA,QAAQnD,QAAQ;YACZ,KAAKX,QAAQ,CAACK,KAAK;IAAE,UAAA;gBACjB,IAAI0D,UAAU,CAAC9B,MAAM,EAAE;IACnB8B,cAAAA,UAAU,CAAC9B,MAAM,CAACa,kBAAkB,CAChCgB,SAAS,EACTC,UAAU,CAAC9B,MAAM,CAACkB,aAAa,CAACY,UAAU,CAAC,GAAG,CAClD,CAAC,CAAA;IACD,cAAA,OAAO,IAAI,CAAA;IACf,aAAA;IACA,YAAA,OAAO,KAAK,CAAA;IAChB,WAAA;YAEA,KAAK/D,QAAQ,CAACG,MAAM;IAAE,UAAA;gBAClB,IAAI4D,UAAU,CAAC9B,MAAM,EAAE;IACnB8B,cAAAA,UAAU,CAAC9B,MAAM,CAACa,kBAAkB,CAChCgB,SAAS,EACTC,UAAU,CAAC9B,MAAM,CAACkB,aAAa,CAACY,UAAU,CAC9C,CAAC,CAAA;IACD,cAAA,OAAO,IAAI,CAAA;IACf,aAAA;IACA,YAAA,OAAO,KAAK,CAAA;IAChB,WAAA;YAEA,KAAK/D,QAAQ,CAACO,MAAM;IAAE,UAAA;IAClB;IACAwD,YAAAA,UAAU,CAACjB,kBAAkB,CAACgB,SAAS,EAAE,CAAC,CAAC,CAAA;IAC3C,YAAA,OAAO,IAAI,CAAA;IACf,WAAA;IAEA,QAAA;IACI,UAAA,OAAO,KAAK,CAAA;IACpB,OAAA;IACJ,KAAA;IACJ,GAAA;;IAEA;IACJ;IACA;IACWG,EAAAA,OAAOA,GAAsC;IAAA,IAAA,IAArCC,aAAa,GAAA1C,SAAA,CAAAC,MAAA,GAAA,CAAA,IAAAD,SAAA,CAAA,CAAA,CAAA,KAAAE,SAAA,GAAAF,SAAA,CAAA,CAAA,CAAA,GAAG,KAAK,CAAA;QAChC,MAAM2C,gBAAgB,GAAIC,KAAa,IAAgC;IACnE,MAAA,OAAOA,KAAK,CAACC,GAAG,CAAE5B,IAAI,IAAK;YACvB,MAAM6B,OAAgC,GAAG,EAAE,CAAA;IAE3C,QAAA,KAAK,MAAMC,CAAC,IAAI9B,IAAI,EAAE;IAClB,UAAA,IACI,CACI,QAAQ,EACR,UAAU,EACV,SAAS,EACT,WAAW,EACX,gBAAgB,EAChB,WAAW,EACX,MAAM,EACN,eAAe,CAClB,CAACW,OAAO,CAACmB,CAAC,CAAC,KAAK,CAAC,CAAC,IACnB1D,MAAM,CAACC,SAAS,CAACC,cAAc,CAACC,IAAI,CAACyB,IAAI,EAAE8B,CAAC,CAAC,EAC/C;IACE,YAAA,MAAMC,CAAC,GAAG/B,IAAI,CAAC8B,CAAC,CAAC,CAAA;IACjBD,YAAAA,OAAO,CAACC,CAAC,CAAC,GAAGC,CAAC,CAAA;IAClB,WAAA;IACJ,SAAA;IAEA,QAAA,IAAI/B,IAAI,CAACY,WAAW,EAAE,EAAE;cACpBiB,OAAO,CAAC,UAAU,CAAC,GAAGH,gBAAgB,CAAC1B,IAAI,CAACT,QAAQ,CAAC,CAAA;IACzD,SAAA;IAEA,QAAA,OAAOsC,OAAO,CAAA;IAClB,OAAC,CAAC,CAAA;SACL,CAAA;IAED,IAAA,IAAIJ,aAAa,EAAE;IACf,MAAA,OAAOC,gBAAgB,CAAC,CAAC,IAAI,CAAC,CAAC,CAAA;IACnC,KAAC,MAAM;IACH,MAAA,OAAOA,gBAAgB,CAAC,IAAI,CAACnC,QAAQ,CAAC,CAAA;IAC1C,KAAA;IACJ,GAAA;MAEOyC,aAAaA,CAAC7D,IAAY,EAAe;QAC5C,OAAO,IAAI,CAAC8D,iBAAiB,CAAEjC,IAAU,IAAKA,IAAI,CAAC7B,IAAI,KAAKA,IAAI,CAAC,CAAA;IACrE,GAAA;MAEO+D,sBAAsBA,CAAC/D,IAAY,EAAQ;IAC9C,IAAA,MAAM6B,IAAI,GAAG,IAAI,CAACiC,iBAAiB,CAAEE,CAAO,IAAKA,CAAC,CAAChE,IAAI,KAAKA,IAAI,CAAC,CAAA;QAEjE,IAAI,CAAC6B,IAAI,EAAE;UACP,MAAO,CAAA,eAAA,EAAiB7B,IAAK,CAAW,UAAA,CAAA,CAAA;IAC5C,KAAA;IAEA,IAAA,OAAO6B,IAAI,CAAA;IACf,GAAA;MAEOiC,iBAAiBA,CAAClB,QAAiC,EAAe;QACrE,IAAII,MAAmB,GAAG,IAAI,CAAA;IAE9B,IAAA,IAAI,CAACL,OAAO,CAAEd,IAAU,IAAK;IACzB,MAAA,IAAImB,MAAM,EAAE;IACR,QAAA,OAAO,KAAK,CAAA;IAChB,OAAC,MAAM,IAAIJ,QAAQ,CAACf,IAAI,CAAC,EAAE;IACvBmB,QAAAA,MAAM,GAAGnB,IAAI,CAAA;IACb,QAAA,OAAO,KAAK,CAAA;IAChB,OAAC,MAAM;IACH,QAAA,OAAO,IAAI,CAAA;IACf,OAAA;IACJ,KAAC,CAAC,CAAA;IAEF,IAAA,OAAOmB,MAAM,CAAA;IACjB,GAAA;MAEOiB,QAAQA,CAACC,QAAkB,EAAe;IAC7C,IAAA,IAAI,CAAC,IAAI,CAAC7C,MAAM,EAAE;IACd,MAAA,OAAO,IAAI,CAAA;IACf,KAAC,MAAM;IACH,MAAA,MAAMQ,IAAI,GAAG,IAAI,CAACC,UAAU,CAACoC,QAAQ,CAAC,CAAA;UAEtC,MAAMC,UAAU,GAAG,IAAI,CAAC9C,MAAM,CAACkB,aAAa,CAAC,IAAI,CAAC,CAAA;UAClD,IAAI,CAAClB,MAAM,CAACa,kBAAkB,CAACL,IAAI,EAAEsC,UAAU,GAAG,CAAC,CAAC,CAAA;UAEpD,IACI7D,wBAAwB,CAAC4D,QAAQ,CAAC,IAClCA,QAAQ,CAAC9C,QAAQ,CAACP,MAAM,EAC1B;IACEgB,QAAAA,IAAI,CAACF,YAAY,CAACuC,QAAQ,CAAC9C,QAAQ,CAAC,CAAA;IACxC,OAAA;IAEA,MAAA,OAAOS,IAAI,CAAA;IACf,KAAA;IACJ,GAAA;MAEOuC,SAASA,CAACF,QAAkB,EAAe;IAC9C,IAAA,IAAI,CAAC,IAAI,CAAC7C,MAAM,EAAE;IACd,MAAA,OAAO,IAAI,CAAA;IACf,KAAC,MAAM;IACH,MAAA,MAAMQ,IAAI,GAAG,IAAI,CAACC,UAAU,CAACoC,QAAQ,CAAC,CAAA;UAEtC,MAAMC,UAAU,GAAG,IAAI,CAAC9C,MAAM,CAACkB,aAAa,CAAC,IAAI,CAAC,CAAA;UAClD,IAAI,CAAClB,MAAM,CAACa,kBAAkB,CAACL,IAAI,EAAEsC,UAAU,CAAC,CAAA;UAEhD,IACI7D,wBAAwB,CAAC4D,QAAQ,CAAC,IAClCA,QAAQ,CAAC9C,QAAQ,CAACP,MAAM,EAC1B;IACEgB,QAAAA,IAAI,CAACF,YAAY,CAACuC,QAAQ,CAAC9C,QAAQ,CAAC,CAAA;IACxC,OAAA;IAEA,MAAA,OAAOS,IAAI,CAAA;IACf,KAAA;IACJ,GAAA;MAEOwC,SAASA,CAACH,QAAkB,EAAe;IAC9C,IAAA,IAAI,CAAC,IAAI,CAAC7C,MAAM,EAAE;IACd,MAAA,OAAO,IAAI,CAAA;IACf,KAAC,MAAM;IACH,MAAA,MAAMiD,SAAS,GAAG,IAAI,CAACxC,UAAU,CAACoC,QAAQ,CAAC,CAAA;UAE3C,IAAI,IAAI,CAAC1C,IAAI,EAAE;IACX8C,QAAAA,SAAS,CAACrC,SAAS,CAAC,IAAI,CAACT,IAAI,CAAC,CAAA;IAClC,OAAA;IACA,MAAA,MAAM+C,cAAc,GAAG,IAAI,CAAClD,MAAM,CAAA;IAElC,MAAA,KAAK,MAAM0B,KAAK,IAAIwB,cAAc,CAACnD,QAAQ,EAAE;IACzCkD,QAAAA,SAAS,CAACvC,QAAQ,CAACgB,KAAK,CAAC,CAAA;IAC7B,OAAA;UAEAwB,cAAc,CAACnD,QAAQ,GAAG,EAAE,CAAA;IAC5BmD,MAAAA,cAAc,CAACxC,QAAQ,CAACuC,SAAS,CAAC,CAAA;IAClC,MAAA,OAAOA,SAAS,CAAA;IACpB,KAAA;IACJ,GAAA;IAEOE,EAAAA,MAAMA,GAAS;QAClB,IAAI,IAAI,CAACnD,MAAM,EAAE;IACb,MAAA,IAAI,CAACA,MAAM,CAACgB,WAAW,CAAC,IAAI,CAAC,CAAA;UAC7B,IAAI,CAAChB,MAAM,GAAG,IAAI,CAAA;IACtB,KAAA;IACJ,GAAA;MAEOoD,MAAMA,CAACP,QAAkB,EAAQ;IACpC,IAAA,MAAMrC,IAAI,GAAG,IAAI,CAACC,UAAU,CAACoC,QAAQ,CAAC,CAAA;IACtC,IAAA,IAAI,CAACnC,QAAQ,CAACF,IAAI,CAAC,CAAA;QAEnB,IAAIvB,wBAAwB,CAAC4D,QAAQ,CAAC,IAAIA,QAAQ,CAAC9C,QAAQ,CAACP,MAAM,EAAE;IAChEgB,MAAAA,IAAI,CAACF,YAAY,CAACuC,QAAQ,CAAC9C,QAAQ,CAAC,CAAA;IACxC,KAAA;IAEA,IAAA,OAAOS,IAAI,CAAA;IACf,GAAA;MAEO6C,OAAOA,CAACR,QAAkB,EAAQ;IACrC,IAAA,MAAMrC,IAAI,GAAG,IAAI,CAACC,UAAU,CAACoC,QAAQ,CAAC,CAAA;IACtC,IAAA,IAAI,CAAChC,kBAAkB,CAACL,IAAI,EAAE,CAAC,CAAC,CAAA;QAEhC,IAAIvB,wBAAwB,CAAC4D,QAAQ,CAAC,IAAIA,QAAQ,CAAC9C,QAAQ,CAACP,MAAM,EAAE;IAChEgB,MAAAA,IAAI,CAACF,YAAY,CAACuC,QAAQ,CAAC9C,QAAQ,CAAC,CAAA;IACxC,KAAA;IAEA,IAAA,OAAOS,IAAI,CAAA;IACf,GAAA;MAEOuB,UAAUA,CAACvB,IAAU,EAAW;IACnC,IAAA,IAAIR,MAAM,GAAGQ,IAAI,CAACR,MAAM,CAAA;IAExB,IAAA,OAAOA,MAAM,EAAE;UACX,IAAIA,MAAM,KAAK,IAAI,EAAE;IACjB,QAAA,OAAO,IAAI,CAAA;IACf,OAAA;UAEAA,MAAM,GAAGA,MAAM,CAACA,MAAM,CAAA;IAC1B,KAAA;IAEA,IAAA,OAAO,KAAK,CAAA;IAChB,GAAA;IAEOsD,EAAAA,QAAQA,GAAW;QACtB,IAAI7B,KAAK,GAAG,CAAC,CAAA;IACb,IAAA,IAAIjB,IAAU,GAAG,IAAI,CAAC;;QAEtB,OAAOA,IAAI,CAACR,MAAM,EAAE;IAChByB,MAAAA,KAAK,IAAI,CAAC,CAAA;UACVjB,IAAI,GAAGA,IAAI,CAACR,MAAM,CAAA;IACtB,KAAA;IAEA,IAAA,OAAOyB,KAAK,CAAA;IAChB,GAAA;MAEO8B,WAAWA,CAACC,MAAc,EAAe;QAC5C,OAAO,IAAI,CAACvD,SAAS,CAACwD,GAAG,CAACD,MAAM,CAAC,IAAI,IAAI,CAAA;IAC7C,GAAA;MAEOE,cAAcA,CAAClD,IAAU,EAAQ;IACpC,IAAA,IAAIA,IAAI,CAACmD,EAAE,IAAI,IAAI,EAAE;UACjB,IAAI,CAAC1D,SAAS,CAAC2D,GAAG,CAACpD,IAAI,CAACmD,EAAE,EAAEnD,IAAI,CAAC,CAAA;IACrC,KAAA;IACJ,GAAA;MAEOqD,mBAAmBA,CAACrD,IAAU,EAAQ;IACzC,IAAA,IAAIA,IAAI,CAACmD,EAAE,IAAI,IAAI,EAAE;UACjB,IAAI,CAAC1D,SAAS,CAAC6D,MAAM,CAACtD,IAAI,CAACmD,EAAE,CAAC,CAAA;IAClC,KAAA;IACJ,GAAA;IAEOpD,EAAAA,cAAcA,GAAS;IAC1B,IAAA,IAAI,CAACe,OAAO,CAAEI,KAAW,IAAK;IAC1B,MAAA,IAAI,CAACvB,IAAI,EAAE0D,mBAAmB,CAACnC,KAAK,CAAC,CAAA;IACrC,MAAA,OAAO,IAAI,CAAA;IACf,KAAC,CAAC,CAAA;QAEF,IAAI,CAAC3B,QAAQ,GAAG,EAAE,CAAA;IACtB,GAAA;IAEOgE,EAAAA,kBAAkBA,GAAgB;IACrC,IAAA,IAAI,CAAC,IAAI,CAAC/D,MAAM,EAAE;IACd,MAAA,OAAO,IAAI,CAAA;IACf,KAAC,MAAM;UACH,MAAMgE,aAAa,GAAG,IAAI,CAAChE,MAAM,CAACkB,aAAa,CAAC,IAAI,CAAC,GAAG,CAAC,CAAA;UACzD,IAAI8C,aAAa,IAAI,CAAC,EAAE;YACpB,OAAO,IAAI,CAAChE,MAAM,CAACD,QAAQ,CAACiE,aAAa,CAAC,IAAI,IAAI,CAAA;IACtD,OAAC,MAAM;IACH,QAAA,OAAO,IAAI,CAAA;IACf,OAAA;IACJ,KAAA;IACJ,GAAA;IAEOC,EAAAA,cAAcA,GAAgB;IACjC,IAAA,IAAI,CAAC,IAAI,CAACjE,MAAM,EAAE;IACd,MAAA,OAAO,IAAI,CAAA;IACf,KAAC,MAAM;UACH,MAAMkE,SAAS,GAAG,IAAI,CAAClE,MAAM,CAACkB,aAAa,CAAC,IAAI,CAAC,GAAG,CAAC,CAAA;UACrD,IAAIgD,SAAS,GAAG,IAAI,CAAClE,MAAM,CAACD,QAAQ,CAACP,MAAM,EAAE;YACzC,OAAO,IAAI,CAACQ,MAAM,CAACD,QAAQ,CAACmE,SAAS,CAAC,IAAI,IAAI,CAAA;IAClD,OAAC,MAAM;IACH,QAAA,OAAO,IAAI,CAAA;IACf,OAAA;IACJ,KAAA;IACJ,GAAA;IAEOC,EAAAA,kBAAkBA,CAAC/D,GAAW,EAAEC,KAAc,EAAU;IAC3D,IAAA,OAAO,IAAI,CAAC+D,MAAM,CAAE5D,IAAU,IAAKA,IAAI,CAACJ,GAAG,CAAC,KAAKC,KAAK,CAAC,CAAA;IAC3D,GAAA;MAEO+D,MAAMA,CAACC,CAA0B,EAAU;QAC9C,MAAM1C,MAAc,GAAG,EAAE,CAAA;IAEzB,IAAA,IAAI,CAACL,OAAO,CAAEd,IAAU,IAAK;IACzB,MAAA,IAAI6D,CAAC,CAAC7D,IAAI,CAAC,EAAE;IACTmB,QAAAA,MAAM,CAAChB,IAAI,CAACH,IAAI,CAAC,CAAA;IACrB,OAAA;IAEA,MAAA,OAAO,IAAI,CAAA;IACf,KAAC,CAAC,CAAA;IAEF,IAAA,OAAOmB,MAAM,CAAA;IACjB,GAAA;IAEO2C,EAAAA,WAAWA,GAAsC;IAAA,IAAA,IAArCC,eAAe,GAAAhF,SAAA,CAAAC,MAAA,GAAA,CAAA,IAAAD,SAAA,CAAA,CAAA,CAAA,KAAAE,SAAA,GAAAF,SAAA,CAAA,CAAA,CAAA,GAAG,IAAI,CAAA;IACrC,IAAA,IAAIgF,eAAe,IAAI,IAAI,CAACnD,WAAW,EAAE,EAAE;IACvC,MAAA,OAAO,IAAI,CAACrB,QAAQ,CAAC,CAAC,CAAC,IAAI,IAAI,CAAA;IACnC,KAAC,MAAM,IAAI,CAAC,IAAI,CAACC,MAAM,EAAE;IACrB,MAAA,OAAO,IAAI,CAAA;IACf,KAAC,MAAM;IACH,MAAA,MAAMwE,WAAW,GAAG,IAAI,CAACP,cAAc,EAAE,CAAA;IAEzC,MAAA,IAAIO,WAAW,EAAE;IACb,QAAA,OAAOA,WAAW,CAAA;IACtB,OAAC,MAAM;IACH,QAAA,OAAO,IAAI,CAACxE,MAAM,CAACsE,WAAW,CAAC,KAAK,CAAC,CAAA;IACzC,OAAA;IACJ,KAAA;IACJ,GAAA;IAEOG,EAAAA,kBAAkBA,GAAgB;QACrC,IAAI,IAAI,CAACrD,WAAW,EAAE,IAAI,IAAI,CAACsD,OAAO,EAAE;IACpC;IACA,MAAA,OAAO,IAAI,CAAC3E,QAAQ,CAAC,CAAC,CAAC,IAAI,IAAI,CAAA;IACnC,KAAC,MAAM;IACH,MAAA,IAAI,CAAC,IAAI,CAACC,MAAM,EAAE;IACd,QAAA,OAAO,IAAI,CAAA;IACf,OAAC,MAAM;IACH,QAAA,MAAMwE,WAAW,GAAG,IAAI,CAACP,cAAc,EAAE,CAAA;IACzC,QAAA,IAAIO,WAAW,EAAE;IACb;IACA,UAAA,OAAOA,WAAW,CAAA;IACtB,SAAC,MAAM;IACH;IACA,UAAA,OAAO,IAAI,CAACxE,MAAM,CAACsE,WAAW,CAAC,KAAK,CAAC,CAAA;IACzC,SAAA;IACJ,OAAA;IACJ,KAAA;IACJ,GAAA;IAEOK,EAAAA,eAAeA,GAAgB;IAClC,IAAA,IAAI,CAAC,IAAI,CAAC3E,MAAM,EAAE;IACd,MAAA,OAAO,IAAI,CAAA;IACf,KAAC,MAAM;IACH,MAAA,MAAM4E,eAAe,GAAG,IAAI,CAACb,kBAAkB,EAAE,CAAA;UAEjD,IAAI,CAACa,eAAe,EAAE;IAClB,QAAA,OAAO,IAAI,CAACC,SAAS,EAAE,CAAA;IAC3B,OAAC,MAAM,IAAID,eAAe,CAACxD,WAAW,EAAE,EAAE;IACtC,QAAA,OAAOwD,eAAe,CAACE,YAAY,EAAE,CAAA;IACzC,OAAC,MAAM;IACH,QAAA,OAAOF,eAAe,CAAA;IAC1B,OAAA;IACJ,KAAA;IACJ,GAAA;IAEOG,EAAAA,sBAAsBA,GAAgB;IACzC,IAAA,IAAI,CAAC,IAAI,CAAC/E,MAAM,EAAE;IACd,MAAA,OAAO,IAAI,CAAA;IACf,KAAC,MAAM;IACH,MAAA,MAAM4E,eAAe,GAAG,IAAI,CAACb,kBAAkB,EAAE,CAAA;UAEjD,IAAI,CAACa,eAAe,EAAE;IAClB,QAAA,OAAO,IAAI,CAACC,SAAS,EAAE,CAAA;IAC3B,OAAC,MAAM,IACH,CAACD,eAAe,CAACxD,WAAW,EAAE,IAC9B,CAACwD,eAAe,CAACF,OAAO,EAC1B;IACE;IACA,QAAA,OAAOE,eAAe,CAAA;IAC1B,OAAC,MAAM;IACH;IACA,QAAA,OAAOA,eAAe,CAACE,YAAY,EAAE,CAAA;IACzC,OAAA;IACJ,KAAA;IACJ,GAAA;IAEOD,EAAAA,SAASA,GAAgB;IAC5B;IACA,IAAA,IAAI,CAAC,IAAI,CAAC7E,MAAM,EAAE;IACd,MAAA,OAAO,IAAI,CAAA;SACd,MAAM,IAAI,CAAC,IAAI,CAACA,MAAM,CAACA,MAAM,EAAE;IAC5B;IACA,MAAA,OAAO,IAAI,CAAA;IACf,KAAC,MAAM;UACH,OAAO,IAAI,CAACA,MAAM,CAAA;IACtB,KAAA;IACJ,GAAA;IAEO8E,EAAAA,YAAYA,GAAgB;IAC/B,IAAA,IAAI,CAAC,IAAI,CAAC1D,WAAW,EAAE,EAAE;IACrB,MAAA,OAAO,IAAI,CAAA;IACf,KAAC,MAAM;IACH,MAAA,MAAM4D,SAAS,GAAG,IAAI,CAACjF,QAAQ,CAAC,IAAI,CAACA,QAAQ,CAACP,MAAM,GAAG,CAAC,CAAC,CAAA;UAEzD,IAAI,CAACwF,SAAS,EAAE;IACZ,QAAA,OAAO,IAAI,CAAA;IACf,OAAA;UAEA,IAAI,EAAEA,SAAS,CAAC5D,WAAW,EAAE,IAAI4D,SAAS,CAACN,OAAO,CAAC,EAAE;IACjD,QAAA,OAAOM,SAAS,CAAA;IACpB,OAAC,MAAM;IACH,QAAA,OAAOA,SAAS,EAAEF,YAAY,EAAE,CAAA;IACpC,OAAA;IACJ,KAAA;IACJ,GAAA;;IAEA;MACOG,YAAYA,CAAC/F,IAAc,EAAQ;QACtC,MAAMgG,OAAO,GAAIC,QAAkB,IAAW;IAC1C,MAAA,IAAI,CAACrF,OAAO,CAACqF,QAAQ,CAAC,CAAA;UAEtB,IACIlG,wBAAwB,CAACkG,QAAQ,CAAC,IAClCA,QAAQ,CAACpF,QAAQ,CAACP,MAAM,EAC1B;IACE4F,QAAAA,WAAW,CAACD,QAAQ,CAACpF,QAAQ,CAAC,CAAA;IAClC,OAAA;SACH,CAAA;QAED,MAAMqF,WAAW,GAAIC,YAAwB,IAAW;IACpD,MAAA,KAAK,MAAM3D,KAAK,IAAI2D,YAAY,EAAE;IAC9B,QAAA,MAAM7E,IAAI,GAAG,IAAI,CAACC,UAAU,EAAE,CAAA;IAC9BD,QAAAA,IAAI,CAACyE,YAAY,CAACvD,KAAK,CAAC,CAAA;IACxB,QAAA,IAAI,CAAChB,QAAQ,CAACF,IAAI,CAAC,CAAA;IACvB,OAAA;SACH,CAAA;QAED0E,OAAO,CAAChG,IAAI,CAAC,CAAA;IACjB,GAAA;MAEQ0B,SAASA,CAACZ,MAAY,EAAQ;QAClC,IAAI,CAACA,MAAM,GAAGA,MAAM,CAAA;IACpB,IAAA,IAAI,CAACG,IAAI,GAAGH,MAAM,CAACG,IAAI,CAAA;IACvB,IAAA,IAAI,CAACA,IAAI,EAAEuD,cAAc,CAAC,IAAI,CAAC,CAAA;IACnC,GAAA;MAEQzC,aAAaA,CAACT,IAAU,EAAQ;IACpC,IAAA,IAAI,CAACT,QAAQ,CAACgB,MAAM,CAAC,IAAI,CAACG,aAAa,CAACV,IAAI,CAAC,EAAE,CAAC,CAAC,CAAA;IACjD,IAAA,IAAI,CAACL,IAAI,EAAE0D,mBAAmB,CAACrD,IAAI,CAAC,CAAA;IACxC,GAAA;IAEQ8E,EAAAA,YAAYA,GAAgB;QAChC,OAAO,IAAI,CAAC3F,SAAS,IAAI,IAAI,EAAEQ,IAAI,EAAER,SAAS,IAAIP,IAAI,CAAA;IAC1D,GAAA;MAEQqB,UAAUA,CAAC0E,QAAmB,EAAQ;IAC1C,IAAA,MAAMxF,SAAS,GAAG,IAAI,CAAC2F,YAAY,EAAE,CAAA;IACrC,IAAA,OAAO,IAAI3F,SAAS,CAACwF,QAAQ,CAAC,CAAA;IAClC,GAAA;IACJ;;ICprBO,MAAMI,kBAAkB,CAAC;MAY5BlG,WAAWA,CAACmG,UAAwB,EAAE;QAClC,IAAI,CAACA,UAAU,GAAGA,UAAU,CAAA;QAE5B,IAAI,CAACC,WAAW,GAAG,IAAI,CAAA;QACvB,IAAI,CAACC,QAAQ,GAAG,EAAE,CAAA;QAClB,IAAI,CAACC,UAAU,GAAG,KAAK,CAAA;QACvB,IAAI,CAACC,WAAW,GAAG,IAAI,CAAA;QACvB,IAAI,CAACC,YAAY,GAAG,IAAI,CAAA;IAC5B,GAAA;MAEOC,YAAYA,CAACD,YAA0B,EAAkB;IAC5D,IAAA,MAAME,QAAQ,GAAGC,MAAM,CAACH,YAAY,CAACI,MAAM,CAAC,CAAA;IAE5C,IAAA,IAAI,CAAC,IAAI,CAACC,kBAAkB,CAACH,QAAQ,CAAC,EAAE;IACpC,MAAA,OAAO,IAAI,CAAA;IACf,KAAA;IAEA,IAAA,IACI,IAAI,CAACP,UAAU,CAACW,OAAO,CAACC,cAAc,IACtC,CAAC,IAAI,CAACZ,UAAU,CAACW,OAAO,CAACC,cAAc,CAACL,QAAQ,CAAC,EACnD;IACE,MAAA,OAAO,IAAI,CAAA;IACf,KAAA;QAEA,IAAIM,WAAW,GAAG,IAAI,CAACb,UAAU,CAACc,eAAe,CAACP,QAAQ,CAAC,CAAA;QAE3D,IAAIM,WAAW,IAAI,IAAI,CAACb,UAAU,CAACW,OAAO,CAACI,SAAS,EAAE;IAClD,MAAA,IAAI,CAAC,IAAI,CAACf,UAAU,CAACW,OAAO,CAACI,SAAS,CAACF,WAAW,CAAC7F,IAAI,CAAC,EAAE;IACtD6F,QAAAA,WAAW,GAAG,IAAI,CAAA;IACtB,OAAA;IACJ,KAAA;QAEA,IAAI,CAACT,WAAW,GAAGS,WAAW,CAAA;IAC9B,IAAA,OAAO,IAAI,CAACT,WAAW,IAAI,IAAI,CAAA;IACnC,GAAA;MAEOY,UAAUA,CAACX,YAA0B,EAAW;IACnD,IAAA,IACI,CAAC,IAAI,CAACD,WAAW,IACjBC,YAAY,CAACY,KAAK,KAAKhH,SAAS,IAChCoG,YAAY,CAACa,KAAK,KAAKjH,SAAS,EAClC;IACE,MAAA,OAAO,KAAK,CAAA;IAChB,KAAA;QAEA,IAAI,CAACkH,OAAO,EAAE,CAAA;QAEd,MAAMC,MAAM,GAAGZ,MAAM,CAACH,YAAY,CAACI,MAAM,CAAC,CAACW,MAAM,EAAE,CAAA;QACnD,MAAMC,IAAI,GAAGD,MAAM,GAAGA,MAAM,CAACC,IAAI,GAAG,CAAC,CAAA;QACrC,MAAMC,GAAG,GAAGF,MAAM,GAAGA,MAAM,CAACE,GAAG,GAAG,CAAC,CAAA;IAEnC,IAAA,MAAMtG,IAAI,GAAG,IAAI,CAACoF,WAAW,CAACpF,IAAI,CAAA;IAElC,IAAA,IAAI,CAACuG,WAAW,GAAG,IAAIC,WAAW,CAC9BxG,IAAI,CAAC7B,IAAI,EACTkH,YAAY,CAACY,KAAK,GAAGI,IAAI,EACzBhB,YAAY,CAACa,KAAK,GAAGI,GAAG,EACxB,IAAI,CAACtB,UAAU,CAACyB,OAAO,EACvB,IAAI,CAACzB,UAAU,CAACW,OAAO,CAACe,UAAU,IAAI,IAC1C,CAAC,CAAA;QAED,IAAI,CAACvB,UAAU,GAAG,IAAI,CAAA;QACtB,IAAI,CAACE,YAAY,GAAGA,YAAY,CAAA;QAChC,IAAI,CAACD,WAAW,CAACG,QAAQ,CAACoB,QAAQ,CAAC,eAAe,CAAC,CAAA;IACnD,IAAA,OAAO,IAAI,CAAA;IACf,GAAA;MAEOC,SAASA,CAACvB,YAA0B,EAAW;QAClD,IACI,CAAC,IAAI,CAACD,WAAW,IACjB,CAAC,IAAI,CAACmB,WAAW,IACjBlB,YAAY,CAACY,KAAK,KAAKhH,SAAS,IAChCoG,YAAY,CAACa,KAAK,KAAKjH,SAAS,EAClC;IACE,MAAA,OAAO,KAAK,CAAA;IAChB,KAAA;IAEA,IAAA,IAAI,CAACsH,WAAW,CAACM,IAAI,CAACxB,YAAY,CAACY,KAAK,EAAEZ,YAAY,CAACa,KAAK,CAAC,CAAA;QAC7D,IAAI,CAACb,YAAY,GAAGA,YAAY,CAAA;IAEhC,IAAA,MAAMyB,IAAI,GAAG,IAAI,CAACC,eAAe,CAC7B1B,YAAY,CAACY,KAAK,EAClBZ,YAAY,CAACa,KACjB,CAAC,CAAA;QAED,IAAIY,IAAI,IAAI,IAAI,CAACE,aAAa,CAACF,IAAI,CAAC,EAAE;UAClC,IAAI,CAACA,IAAI,CAAC9G,IAAI,CAACa,QAAQ,EAAE,EAAE;YACvB,IAAI,CAACoG,mBAAmB,EAAE,CAAA;IAC9B,OAAA;IAEA,MAAA,IAAI,IAAI,CAAChC,WAAW,KAAK6B,IAAI,EAAE;YAC3B,IAAI,CAAC7B,WAAW,GAAG6B,IAAI,CAAA;;IAEvB;IACA,QAAA,IAAI,IAAI,CAACI,mBAAmB,CAACJ,IAAI,CAAC,EAAE;IAChC,UAAA,IAAI,CAACK,oBAAoB,CAACL,IAAI,CAAC9G,IAAI,CAAC,CAAA;IACxC,SAAC,MAAM;cACH,IAAI,CAACiH,mBAAmB,EAAE,CAAA;IAC9B,SAAA;YAEA,IAAI,CAACG,cAAc,EAAE,CAAA;IACzB,OAAA;IACJ,KAAC,MAAM;UACH,IAAI,CAACC,cAAc,EAAE,CAAA;UACrB,IAAI,CAACJ,mBAAmB,EAAE,CAAA;UAC1B,IAAI,CAAChC,WAAW,GAAG6B,IAAI,CAAA;IAC3B,KAAA;QAEA,IAAI,CAACA,IAAI,EAAE;IACP,MAAA,IAAI,IAAI,CAAC9B,UAAU,CAACW,OAAO,CAAC2B,UAAU,EAAE;IACpC,QAAA,IAAI,CAACtC,UAAU,CAACW,OAAO,CAAC2B,UAAU,CAC9B,IAAI,CAAClC,WAAW,CAACpF,IAAI,EACrBqF,YAAY,CAACkC,aACjB,CAAC,CAAA;IACL,OAAA;IACJ,KAAA;IAEA,IAAA,OAAO,IAAI,CAAA;IACf,GAAA;MAEOC,SAASA,CAACnC,YAA0B,EAAW;IAClD,IAAA,IAAI,CAACoC,QAAQ,CAACpC,YAAY,CAAC,CAAA;QAC3B,IAAI,CAACqC,KAAK,EAAE,CAAA;QACZ,IAAI,CAACC,WAAW,EAAE,CAAA;QAClB,IAAI,CAACN,cAAc,EAAE,CAAA;QACrB,IAAI,CAACO,cAAc,EAAE,CAAA;IAErB,IAAA,MAAMxC,WAAW,GAAG,IAAI,CAACA,WAAW,CAAA;QAEpC,IAAI,IAAI,CAACA,WAAW,EAAE;UAClB,IAAI,CAACA,WAAW,CAACG,QAAQ,CAACsC,WAAW,CAAC,eAAe,CAAC,CAAA;UACtD,IAAI,CAACzC,WAAW,GAAG,IAAI,CAAA;IAC3B,KAAA;QAEA,IAAI,CAACD,UAAU,GAAG,KAAK,CAAA;QACvB,IAAI,CAACE,YAAY,GAAG,IAAI,CAAA;IAExB,IAAA,IAAI,CAAC,IAAI,CAACJ,WAAW,IAAIG,WAAW,EAAE;IAClC,MAAA,IAAI,IAAI,CAACJ,UAAU,CAACW,OAAO,CAACmC,UAAU,EAAE;IACpC,QAAA,IAAI,CAAC9C,UAAU,CAACW,OAAO,CAACmC,UAAU,CAC9B1C,WAAW,CAACpF,IAAI,EAChBqF,YAAY,CAACkC,aACjB,CAAC,CAAA;IACL,OAAA;IACJ,KAAA;IAEA,IAAA,OAAO,KAAK,CAAA;IAChB,GAAA;IAEOpB,EAAAA,OAAOA,GAAS;QACnB,IAAI,CAACyB,cAAc,EAAE,CAAA;QAErB,IAAI,IAAI,CAACxC,WAAW,EAAE;UAClB,IAAI,CAAC2C,gBAAgB,EAAE,CAAA;IAEvB,MAAA,IAAI,CAAC3C,WAAW,GAAG,IAAI,CAACJ,UAAU,CAACgD,sBAAsB,CACrD,IAAI,CAAC5C,WAAW,CAACpF,IACrB,CAAC,CAAA;UAED,IAAI,IAAI,CAACmF,UAAU,EAAE;YACjB,IAAI,CAACC,WAAW,CAACG,QAAQ,CAACoB,QAAQ,CAAC,eAAe,CAAC,CAAA;IACvD,OAAA;IACJ,KAAA;IACJ,GAAA;IAEQoB,EAAAA,gBAAgBA,GAAS;IAC7B,IAAA,IAAI,CAAC,IAAI,CAAC3C,WAAW,EAAE;UACnB,IAAI,CAACF,QAAQ,GAAG,EAAE,CAAA;IACtB,KAAC,MAAM;UACH,MAAM+C,iBAAiB,GAAG,IAAIC,iBAAiB,CAC3C,IAAI,CAAClD,UAAU,CAACrF,IAAI,EACpB,IAAI,CAACyF,WAAW,CAACpF,IAAI,EACrB,IAAI,CAACmI,iBAAiB,EAAE,CAACC,MAC7B,CAAC,CAAA;IACD,MAAA,IAAI,CAAClD,QAAQ,GAAG+C,iBAAiB,CAACI,QAAQ,EAAE,CAAA;IAChD,KAAA;IACJ,GAAA;MAEQ3C,kBAAkBA,CAACH,QAA6B,EAAW;IAC/D,IAAA,OAAO,CAACA,QAAQ,CAAC+C,EAAE,CAAC,uBAAuB,CAAC,CAAA;IAChD,GAAA;MAEQtB,aAAaA,CAACF,IAAa,EAAW;QAC1C,IAAI,CAAC,IAAI,CAAC9B,UAAU,CAACW,OAAO,CAAC4C,WAAW,EAAE;IACtC,MAAA,OAAO,IAAI,CAAA;IACf,KAAA;IAEA,IAAA,IAAI,CAAC,IAAI,CAACnD,WAAW,EAAE;IACnB,MAAA,OAAO,KAAK,CAAA;IAChB,KAAA;IAEA,IAAA,MAAMoD,YAAY,GAAGvK,eAAe,CAAC6I,IAAI,CAAC5I,QAAQ,CAAC,CAAA;IAEnD,IAAA,OAAO,IAAI,CAAC8G,UAAU,CAACW,OAAO,CAAC4C,WAAW,CACtC,IAAI,CAACnD,WAAW,CAACpF,IAAI,EACrB8G,IAAI,CAAC9G,IAAI,EACTwI,YACJ,CAAC,CAAA;IACL,GAAA;IAEQZ,EAAAA,cAAcA,GAAS;QAC3B,IAAI,CAAC1C,QAAQ,GAAG,EAAE,CAAA;IACtB,GAAA;IAEQwC,EAAAA,KAAKA,GAAS;QAClB,IAAI,IAAI,CAACnB,WAAW,EAAE;IAClB,MAAA,IAAI,CAACA,WAAW,CAAC5D,MAAM,EAAE,CAAA;UACzB,IAAI,CAAC4D,WAAW,GAAG,IAAI,CAAA;IAC3B,KAAA;IACJ,GAAA;IAEQc,EAAAA,cAAcA,GAAS;QAC3B,IAAI,IAAI,CAACoB,aAAa,EAAE;IACpB,MAAA,IAAI,CAACA,aAAa,CAAC9F,MAAM,EAAE,CAAA;IAC/B,KAAA;IACJ,GAAA;IAEQgF,EAAAA,WAAWA,GAAS;QACxB,IAAI,CAAC1C,WAAW,GAAG,IAAI,CAAA;IAC3B,GAAA;IAEQ8B,EAAAA,eAAeA,CAAC2B,CAAS,EAAEC,CAAS,EAAkB;IAC1D,IAAA,MAAMC,UAAU,GAAG,IAAI,CAACT,iBAAiB,EAAE,CAAA;QAE3C,IACIO,CAAC,GAAGE,UAAU,CAACvC,IAAI,IACnBsC,CAAC,GAAGC,UAAU,CAACtC,GAAG,IAClBoC,CAAC,GAAGE,UAAU,CAACC,KAAK,IACpBF,CAAC,GAAGC,UAAU,CAACR,MAAM,EACvB;IACE,MAAA,OAAO,IAAI,CAAA;IACf,KAAA;QAEA,IAAIU,GAAG,GAAG,CAAC,CAAA;IACX,IAAA,IAAIC,IAAI,GAAG,IAAI,CAAC7D,QAAQ,CAAClG,MAAM,CAAA;QAC/B,OAAO8J,GAAG,GAAGC,IAAI,EAAE;IACf,MAAA,MAAMC,GAAG,GAAIF,GAAG,GAAGC,IAAI,IAAK,CAAC,CAAA;IAC7B,MAAA,MAAMjC,IAAI,GAAG,IAAI,CAAC5B,QAAQ,CAAC8D,GAAG,CAAC,CAAA;UAE/B,IAAI,CAAClC,IAAI,EAAE;IACP,QAAA,OAAO,IAAI,CAAA;IACf,OAAA;IAEA,MAAA,IAAI6B,CAAC,GAAG7B,IAAI,CAACR,GAAG,EAAE;IACdyC,QAAAA,IAAI,GAAGC,GAAG,CAAA;IACd,OAAC,MAAM,IAAIL,CAAC,GAAG7B,IAAI,CAACsB,MAAM,EAAE;YACxBU,GAAG,GAAGE,GAAG,GAAG,CAAC,CAAA;IACjB,OAAC,MAAM;IACH,QAAA,OAAOlC,IAAI,CAAA;IACf,OAAA;IACJ,KAAA;IAEA,IAAA,OAAO,IAAI,CAAA;IACf,GAAA;MAEQI,mBAAmBA,CAACJ,IAAa,EAAW;IAChD,IAAA,MAAM9G,IAAI,GAAG8G,IAAI,CAAC9G,IAAI,CAAA;IAEtB,IAAA,OACIA,IAAI,CAACa,QAAQ,EAAE,IACf,CAACb,IAAI,CAACkE,OAAO,IACb4C,IAAI,CAAC5I,QAAQ,KAAKX,QAAQ,CAACO,MAAM,CAAA;IAEzC,GAAA;IAEQsJ,EAAAA,cAAcA,GAAS;IAC3B,IAAA,IAAI,CAAC,IAAI,CAACnC,WAAW,EAAE;IACnB,MAAA,OAAA;IACJ,KAAA;;IAEA;QACA,IAAI,CAACoC,cAAc,EAAE,CAAA;;IAErB;IACA,IAAA,MAAMxB,WAAW,GAAG,IAAI,CAACb,UAAU,CAACgD,sBAAsB,CACtD,IAAI,CAAC/C,WAAW,CAACjF,IACrB,CAAC,CAAA;IACD,IAAA,IAAI,CAACyI,aAAa,GAAG5C,WAAW,CAACoD,WAAW,CAAC,IAAI,CAAChE,WAAW,CAAC/G,QAAQ,CAAC,CAAA;IAC3E,GAAA;MAEQiJ,oBAAoBA,CAAC+B,MAAY,EAAQ;QAC7C,MAAMC,UAAU,GAAGA,MAAY;IAC3B,MAAA,IAAI,CAACnE,UAAU,CAACoE,SAAS,CACrBF,MAAM,EACN,IAAI,CAAClE,UAAU,CAACW,OAAO,CAAC0D,KAAK,EAC7B,MAAM;YACF,IAAI,CAAClD,OAAO,EAAE,CAAA;YACd,IAAI,CAACiB,cAAc,EAAE,CAAA;IACzB,OACJ,CAAC,CAAA;SACJ,CAAA;QAED,IAAI,CAACH,mBAAmB,EAAE,CAAA;QAE1B,MAAMqC,eAAe,GAAG,IAAI,CAACtE,UAAU,CAACW,OAAO,CAAC2D,eAAe,CAAA;QAE/D,IAAIA,eAAe,KAAK,KAAK,EAAE;UAC3B,IAAI,CAACC,eAAe,GAAGC,MAAM,CAACC,UAAU,CACpCN,UAAU,EACVG,eACJ,CAAC,CAAA;IACL,KAAA;IACJ,GAAA;IAEQrC,EAAAA,mBAAmBA,GAAS;QAChC,IAAI,IAAI,CAACsC,eAAe,EAAE;IACtBG,MAAAA,YAAY,CAAC,IAAI,CAACH,eAAe,CAAC,CAAA;UAClC,IAAI,CAACA,eAAe,GAAG,IAAI,CAAA;IAC/B,KAAA;IACJ,GAAA;MAEQ9B,QAAQA,CAACpC,YAA0B,EAAQ;QAC/C,IACI,IAAI,CAACD,WAAW,IAChB,IAAI,CAACH,WAAW,IAChB,IAAI,CAACA,WAAW,CAAC/G,QAAQ,KAAKX,QAAQ,CAACS,IAAI,IAC3C,IAAI,CAACgJ,aAAa,CAAC,IAAI,CAAC/B,WAAW,CAAC,EACtC;IACE,MAAA,MAAM5D,SAAS,GAAG,IAAI,CAAC+D,WAAW,CAACpF,IAAI,CAAA;IACvC,MAAA,MAAMsB,UAAU,GAAG,IAAI,CAAC2D,WAAW,CAACjF,IAAI,CAAA;IACxC,MAAA,MAAM9B,QAAQ,GAAG,IAAI,CAAC+G,WAAW,CAAC/G,QAAQ,CAAA;IAC1C,MAAA,MAAMyL,cAAc,GAAGtI,SAAS,CAAC7B,MAAM,CAAA;IAEvC,MAAA,IAAItB,QAAQ,KAAKX,QAAQ,CAACO,MAAM,EAAE;IAC9B,QAAA,IAAI,CAACmH,WAAW,CAACjF,IAAI,CAACkE,OAAO,GAAG,IAAI,CAAA;IACxC,OAAA;UAEA,MAAM0F,MAAM,GAAGA,MAAY;IACvB,QAAA,IAAI,CAAC5E,UAAU,CAACrF,IAAI,CAACyB,QAAQ,CAACC,SAAS,EAAEC,UAAU,EAAEpD,QAAQ,CAAC,CAAA;IAC9D,QAAA,IAAI,CAAC8G,UAAU,CAACyB,OAAO,CAACoD,KAAK,EAAE,CAAA;IAC/B,QAAA,IAAI,CAAC7E,UAAU,CAAC8E,gBAAgB,CAAC,IAAI,CAAC,CAAA;WACzC,CAAA;UAED,MAAMC,KAAK,GAAG,IAAI,CAAC/E,UAAU,CAACgF,aAAa,CAAC,WAAW,EAAE;IACrDC,QAAAA,SAAS,EAAE;IACPC,UAAAA,UAAU,EAAE7I,SAAS;IACrB8I,UAAAA,WAAW,EAAE7I,UAAU;IACvBpD,UAAAA,QAAQ,EAAED,eAAe,CAACC,QAAQ,CAAC;IACnCkM,UAAAA,eAAe,EAAET,cAAc;IAC/BU,UAAAA,OAAO,EAAET,MAAM;cACfU,cAAc,EAAEjF,YAAY,CAACkC,aAAAA;IACjC,SAAA;IACJ,OAAC,CAAC,CAAA;IAEF,MAAA,IAAI,CAACwC,KAAK,CAACQ,kBAAkB,EAAE,EAAE;IAC7BX,QAAAA,MAAM,EAAE,CAAA;IACZ,OAAA;IACJ,KAAA;IACJ,GAAA;IAEQzB,EAAAA,iBAAiBA,GAAe;IACpC;IACA;QACA,MAAM/B,MAAM,GAAG,IAAI,CAACpB,UAAU,CAACyB,OAAO,CAACL,MAAM,EAAE,CAAA;QAE/C,IAAI,CAACA,MAAM,EAAE;UACT,OAAO;IAAEC,QAAAA,IAAI,EAAE,CAAC;IAAEC,QAAAA,GAAG,EAAE,CAAC;IAAEuC,QAAAA,KAAK,EAAE,CAAC;IAAET,QAAAA,MAAM,EAAE,CAAA;WAAG,CAAA;IACnD,KAAC,MAAM;IACH,MAAA,MAAMoC,EAAE,GAAG,IAAI,CAACxF,UAAU,CAACyB,OAAO,CAAA;UAClC,MAAMgE,KAAK,GAAGD,EAAE,CAACC,KAAK,EAAE,IAAI,CAAC,CAAA;UAC7B,MAAMC,MAAM,GAAGF,EAAE,CAACE,MAAM,EAAE,IAAI,CAAC,CAAA;IAC/B,MAAA,MAAMrE,IAAI,GAAGD,MAAM,CAACC,IAAI,GAAG,IAAI,CAACrB,UAAU,CAAC2F,cAAc,EAAE,CAAA;UAE3D,OAAO;YACHtE,IAAI;YACJC,GAAG,EAAEF,MAAM,CAACE,GAAG;YACfuC,KAAK,EAAExC,IAAI,GAAGoE,KAAK;IACnBrC,QAAAA,MAAM,EAAEhC,MAAM,CAACE,GAAG,GAAGoE,MAAM,GAAG,EAAA;WACjC,CAAA;IACL,KAAA;IACJ,GAAA;IACJ,CAAA;IAEA,MAAeE,mBAAmB,CAAC;MAG/B/L,WAAWA,CAACc,IAAU,EAAE;QACpB,IAAI,CAACA,IAAI,GAAGA,IAAI,CAAA;IACpB,GAAA;IAEUmB,EAAAA,OAAOA,GAAS;QACtB,IAAI+J,WAAW,GAAG,IAAI,CAAA;IAEtB,IAAA,MAAMC,YAAY,GAAGA,CAAC9K,IAAU,EAAE+K,QAAqB,KAAW;IAC9D,MAAA,IAAIC,iBAAiB,GACjB,CAAChL,IAAI,CAACkE,OAAO,IAAI,CAAClE,IAAI,CAACyG,OAAO,KAAKzG,IAAI,CAACY,WAAW,EAAE,CAAA;UAEzD,IAAI2E,QAAoC,GAAG,IAAI,CAAA;UAE/C,IAAIvF,IAAI,CAACyG,OAAO,EAAE;IACdlB,QAAAA,QAAQ,GAAGC,MAAM,CAACxF,IAAI,CAACyG,OAAO,CAAC,CAAA;IAE/B,QAAA,IAAI,CAAClB,QAAQ,CAAC+C,EAAE,CAAC,UAAU,CAAC,EAAE;IAC1B,UAAA,OAAA;IACJ,SAAA;IAEA,QAAA,IAAIuC,WAAW,EAAE;IACb,UAAA,IAAI,CAACI,eAAe,CAACjL,IAAI,CAAC,CAAA;IAC1B6K,UAAAA,WAAW,GAAG,KAAK,CAAA;IACvB,SAAA;IAEA,QAAA,IAAI,CAAC7K,IAAI,CAACY,WAAW,EAAE,EAAE;cACrB,IAAI,CAACsK,UAAU,CAAClL,IAAI,EAAE+K,QAAQ,EAAExF,QAAQ,CAAC,CAAA;IAC7C,SAAC,MAAM,IAAIvF,IAAI,CAACkE,OAAO,EAAE;cACrB,IAAI,CAAC,IAAI,CAACiH,gBAAgB,CAACnL,IAAI,EAAEuF,QAAQ,CAAC,EAAE;IACxCyF,YAAAA,iBAAiB,GAAG,KAAK,CAAA;IAC7B,WAAA;IACJ,SAAC,MAAM;cACH,IAAI,CAACI,kBAAkB,CAACpL,IAAI,EAAE+K,QAAQ,EAAExF,QAAQ,CAAC,CAAA;IACrD,SAAA;IACJ,OAAA;IAEA,MAAA,IAAIyF,iBAAiB,EAAE;IACnB,QAAA,MAAMK,cAAc,GAAGrL,IAAI,CAACT,QAAQ,CAACP,MAAM,CAAA;YAC3CgB,IAAI,CAACT,QAAQ,CAAC+L,OAAO,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;IAC5B,UAAA,MAAMtK,KAAK,GAAGlB,IAAI,CAACT,QAAQ,CAACiM,CAAC,CAAC,CAAA;IAE9B,UAAA,IAAItK,KAAK,EAAE;IACP,YAAA,IAAIsK,CAAC,KAAKH,cAAc,GAAG,CAAC,EAAE;IAC1BP,cAAAA,YAAY,CAAC5J,KAAK,EAAE,IAAI,CAAC,CAAA;IAC7B,aAAC,MAAM;kBACH,MAAMuK,SAAS,GAAGzL,IAAI,CAACT,QAAQ,CAACiM,CAAC,GAAG,CAAC,CAAC,CAAA;IAEtC,cAAA,IAAIC,SAAS,EAAE;IACXX,gBAAAA,YAAY,CAAC5J,KAAK,EAAEuK,SAAS,CAAC,CAAA;IAClC,eAAA;IACJ,aAAA;IACJ,WAAA;IACJ,SAAC,CAAC,CAAA;IAEF,QAAA,IAAIzL,IAAI,CAACkE,OAAO,IAAIqB,QAAQ,EAAE;IAC1B,UAAA,IAAI,CAACmG,qBAAqB,CAAC1L,IAAI,EAAE+K,QAAQ,CAAC,CAAA;IAC9C,SAAA;IACJ,OAAA;SACH,CAAA;IAEDD,IAAAA,YAAY,CAAC,IAAI,CAACnL,IAAI,EAAE,IAAI,CAAC,CAAA;IACjC,GAAA;;IAQA;IACJ;IACA;IACA;IACA;IACA;IAeA,CAAA;;IAEO,MAAMuI,iBAAiB,SAAS0C,mBAAmB,CAAC;IAMvD/L,EAAAA,WAAWA,CAACc,IAAU,EAAEgM,WAAiB,EAAEC,UAAkB,EAAE;QAC3D,KAAK,CAACjM,IAAI,CAAC,CAAA;QAEX,IAAI,CAACgM,WAAW,GAAGA,WAAW,CAAA;QAC9B,IAAI,CAACC,UAAU,GAAGA,UAAU,CAAA;IAChC,GAAA;IAEOvD,EAAAA,QAAQA,GAAc;QACzB,IAAI,CAACwD,SAAS,GAAG,EAAE,CAAA;QACnB,IAAI,CAACC,OAAO,GAAG,CAAC,CAAA;QAEhB,IAAI,CAAChL,OAAO,EAAE,CAAA;IAEd,IAAA,OAAO,IAAI,CAACiH,gBAAgB,CAAC,IAAI,CAAC8D,SAAS,CAAC,CAAA;IAChD,GAAA;MAEU9D,gBAAgBA,CAAC8D,SAAoB,EAAa;QACxD,IAAIE,WAAW,GAAG,CAAC,CAAC,CAAA;QACpB,IAAIC,KAAK,GAAG,EAAE,CAAA;QACd,MAAM9G,QAAmB,GAAG,EAAE,CAAA;IAE9B,IAAA,KAAK,MAAMhH,QAAQ,IAAI2N,SAAS,EAAE;UAC9B,IAAI3N,QAAQ,CAACoI,GAAG,KAAKyF,WAAW,IAAIC,KAAK,CAAChN,MAAM,EAAE;YAC9C,IAAIgN,KAAK,CAAChN,MAAM,EAAE;IACd,UAAA,IAAI,CAACiN,wBAAwB,CACzB/G,QAAQ,EACR8G,KAAK,EACLD,WAAW,EACX7N,QAAQ,CAACoI,GACb,CAAC,CAAA;IACL,SAAA;YAEAyF,WAAW,GAAG7N,QAAQ,CAACoI,GAAG,CAAA;IAC1B0F,QAAAA,KAAK,GAAG,EAAE,CAAA;IACd,OAAA;IAEAA,MAAAA,KAAK,CAAC7L,IAAI,CAACjC,QAAQ,CAAC,CAAA;IACxB,KAAA;IAEA,IAAA,IAAI,CAAC+N,wBAAwB,CACzB/G,QAAQ,EACR8G,KAAK,EACLD,WAAW,EACX,IAAI,CAACH,UACT,CAAC,CAAA;IAED,IAAA,OAAO1G,QAAQ,CAAA;IACnB,GAAA;IAEUiG,EAAAA,gBAAgBA,CAACnL,IAAU,EAAEuF,QAAgB,EAAW;IAC9D,IAAA,IAAIvF,IAAI,KAAK,IAAI,CAAC2L,WAAW,EAAE;IAC3B;IACA;IACA,MAAA,OAAO,KAAK,CAAA;IAChB,KAAA;;IAEA;QACA,IAAI3L,IAAI,CAACT,QAAQ,CAAC,CAAC,CAAC,KAAK,IAAI,CAACoM,WAAW,EAAE;IACvC,MAAA,IAAI,CAACO,WAAW,CAAClM,IAAI,EAAEzC,QAAQ,CAACO,MAAM,EAAE,IAAI,CAACqO,MAAM,CAAC5G,QAAQ,CAAC,CAAC,CAAA;IAClE,KAAA;;IAEA;IACA,IAAA,OAAO,IAAI,CAAA;IACf,GAAA;IAEU6F,EAAAA,kBAAkBA,CACxBpL,IAAU,EACV+K,QAAc,EACdxF,QAAgB,EACZ;IACJ,IAAA,MAAMe,GAAG,GAAG,IAAI,CAAC6F,MAAM,CAAC5G,QAAQ,CAAC,CAAA;IAEjC,IAAA,IAAIvF,IAAI,KAAK,IAAI,CAAC2L,WAAW,EAAE;IAC3B;UACA,IAAI,CAACO,WAAW,CAAClM,IAAI,EAAEzC,QAAQ,CAACS,IAAI,EAAEsI,GAAG,CAAC,CAAA;IAC9C,KAAC,MAAM;UACH,IAAI,CAAC4F,WAAW,CAAClM,IAAI,EAAEzC,QAAQ,CAACO,MAAM,EAAEwI,GAAG,CAAC,CAAA;;IAE5C;IACA,MAAA,IAAIyE,QAAQ,KAAK,IAAI,CAACY,WAAW,EAAE;YAC/B,IAAI,CAACO,WAAW,CAAClM,IAAI,EAAEzC,QAAQ,CAACK,KAAK,EAAE0I,GAAG,CAAC,CAAA;IAC/C,OAAA;IACJ,KAAA;IACJ,GAAA;MAEU2E,eAAeA,CAACjL,IAAU,EAAQ;IACxC,IAAA,IAAIA,IAAI,KAAK,IAAI,CAAC2L,WAAW,EAAE;UAC3B,IAAI,CAACO,WAAW,CACZlM,IAAI,EACJzC,QAAQ,CAACG,MAAM,EACf,IAAI,CAACyO,MAAM,CAAC3G,MAAM,CAACxF,IAAI,CAACyG,OAAO,CAAC,CACpC,CAAC,CAAA;IACL,KAAA;IACJ,GAAA;IAEUiF,EAAAA,qBAAqBA,CAAC1L,IAAU,EAAE+K,QAAc,EAAQ;QAC9D,IAAI/K,IAAI,KAAK,IAAI,CAAC2L,WAAW,IAAIZ,QAAQ,KAAK,IAAI,CAACY,WAAW,EAAE;IAC5D;IACA,MAAA,IAAI,CAACO,WAAW,CAAClM,IAAI,EAAEzC,QAAQ,CAACS,IAAI,EAAE,IAAI,CAAC8N,OAAO,CAAC,CAAA;IACvD,KAAC,MAAM;IACH,MAAA,IAAI,CAACI,WAAW,CAAClM,IAAI,EAAEzC,QAAQ,CAACK,KAAK,EAAE,IAAI,CAACkO,OAAO,CAAC,CAAA;IACxD,KAAA;IACJ,GAAA;IAEUZ,EAAAA,UAAUA,CAAClL,IAAU,EAAE+K,QAAc,EAAExF,QAAgB,EAAQ;IACrE,IAAA,MAAMe,GAAG,GAAG,IAAI,CAAC6F,MAAM,CAAC5G,QAAQ,CAAC,CAAA;IAEjC,IAAA,IAAIvF,IAAI,KAAK,IAAI,CAAC2L,WAAW,EAAE;IAC3B;UACA,IAAI,CAACO,WAAW,CAAClM,IAAI,EAAEzC,QAAQ,CAACS,IAAI,EAAEsI,GAAG,CAAC,CAAA;IAC9C,KAAC,MAAM;UACH,IAAI,CAAC4F,WAAW,CAAClM,IAAI,EAAEzC,QAAQ,CAACO,MAAM,EAAEwI,GAAG,CAAC,CAAA;IAChD,KAAA;QAEA,IAAIyE,QAAQ,KAAK,IAAI,CAACY,WAAW,IAAI3L,IAAI,KAAK,IAAI,CAAC2L,WAAW,EAAE;IAC5D;UACA,IAAI,CAACO,WAAW,CAAClM,IAAI,EAAEzC,QAAQ,CAACS,IAAI,EAAEsI,GAAG,CAAC,CAAA;IAC9C,KAAC,MAAM;UACH,IAAI,CAAC4F,WAAW,CAAClM,IAAI,EAAEzC,QAAQ,CAACK,KAAK,EAAE0I,GAAG,CAAC,CAAA;IAC/C,KAAA;IACJ,GAAA;MAEQ6F,MAAMA,CAAC5G,QAA6B,EAAU;IAClD,IAAA,MAAMa,MAAM,GAAGb,QAAQ,CAACa,MAAM,EAAE,CAAA;IAEhC,IAAA,OAAOA,MAAM,GAAGA,MAAM,CAACE,GAAG,GAAG,CAAC,CAAA;IAClC,GAAA;IAEQ4F,EAAAA,WAAWA,CAAClM,IAAU,EAAE9B,QAAgB,EAAEoI,GAAW,EAAQ;IACjE,IAAA,MAAMQ,IAAI,GAAG;UACTR,GAAG;IACH8B,MAAAA,MAAM,EAAE,CAAC;UACTpI,IAAI;IACJ9B,MAAAA,QAAAA;SACH,CAAA;IAED,IAAA,IAAI,CAAC2N,SAAS,CAAC1L,IAAI,CAAC2G,IAAI,CAAC,CAAA;QACzB,IAAI,CAACgF,OAAO,GAAGxF,GAAG,CAAA;IACtB,GAAA;MAEQ2F,wBAAwBA,CAC5B/G,QAAmB,EACnBkH,gBAA2B,EAC3B9F,GAAW,EACX8B,MAAc,EACV;IACJ;QACA,MAAMiE,aAAa,GAAGC,IAAI,CAACC,GAAG,CAACH,gBAAgB,CAACpN,MAAM,EAAE,CAAC,CAAC,CAAA;IAE1D,IAAA,MAAMwN,UAAU,GAAGF,IAAI,CAACG,KAAK,CAAC,CAACrE,MAAM,GAAG9B,GAAG,IAAI+F,aAAa,CAAC,CAAA;QAC7D,IAAIK,OAAO,GAAGpG,GAAG,CAAA;QAEjB,IAAIkF,CAAC,GAAG,CAAC,CAAA;QACT,OAAOA,CAAC,GAAGa,aAAa,EAAE;IACtB,MAAA,MAAMnO,QAAQ,GAAGkO,gBAAgB,CAACZ,CAAC,CAAC,CAAA;IAEpC,MAAA,IAAItN,QAAQ,EAAE;YACVgH,QAAQ,CAAC/E,IAAI,CAAC;IACVmG,UAAAA,GAAG,EAAEoG,OAAO;cACZtE,MAAM,EAAEsE,OAAO,GAAGF,UAAU;cAC5BxM,IAAI,EAAE9B,QAAQ,CAAC8B,IAAI;cACnB9B,QAAQ,EAAEA,QAAQ,CAACA,QAAAA;IACvB,SAAC,CAAC,CAAA;IACN,OAAA;IAEAwO,MAAAA,OAAO,IAAIF,UAAU,CAAA;IACrBhB,MAAAA,CAAC,IAAI,CAAC,CAAA;IACV,KAAA;IACJ,GAAA;IACJ,CAAA;IAEA,MAAMhF,WAAW,CAAC;MAKd3H,WAAWA,CACP8N,QAAgB,EAChBC,OAAe,EACfC,OAAe,EACfC,KAAa,EACbpG,UAAmB,EACrB;QACE,IAAI,CAACkG,OAAO,GAAGA,OAAO,CAAA;QACtB,IAAI,CAACC,OAAO,GAAGA,OAAO,CAAA;QAEtB,IAAI,CAACtH,QAAQ,GAAGC,MAAM,CAAC,QAAQ,CAAC,CAACmB,QAAQ,CACrC,8BACJ,CAAC,CAAA;IAED,IAAA,IAAID,UAAU,EAAE;IACZ,MAAA,IAAI,CAACnB,QAAQ,CAACwH,IAAI,CAACJ,QAAQ,CAAC,CAAA;IAChC,KAAC,MAAM;IACH,MAAA,IAAI,CAACpH,QAAQ,CAACyH,IAAI,CAACL,QAAQ,CAAC,CAAA;IAChC,KAAA;QAEA,IAAI,CAACpH,QAAQ,CAAC0H,GAAG,CAAC,UAAU,EAAE,UAAU,CAAC,CAAA;IACzCH,IAAAA,KAAK,CAAClK,MAAM,CAAC,IAAI,CAAC2C,QAAQ,CAAC,CAAA;IAC/B,GAAA;IAEOsB,EAAAA,IAAIA,CAACZ,KAAa,EAAEC,KAAa,EAAQ;IAC5C,IAAA,IAAI,CAACX,QAAQ,CAACa,MAAM,CAAC;IACjBC,MAAAA,IAAI,EAAEJ,KAAK,GAAG,IAAI,CAAC2G,OAAO;IAC1BtG,MAAAA,GAAG,EAAEJ,KAAK,GAAG,IAAI,CAAC2G,OAAAA;IACtB,KAAC,CAAC,CAAA;IACN,GAAA;IAEOlK,EAAAA,MAAMA,GAAS;IAClB,IAAA,IAAI,CAAC4C,QAAQ,CAAC5C,MAAM,EAAE,CAAA;IAC1B,GAAA;IACJ;;ICnsBO,MAAMuK,KAAK,GAAI/K,CAAU,IAC5B,OAAOA,CAAC,KAAK,QAAQ,IAAIA,CAAC,GAAG,CAAC,KAAK,CAAC,CAAA;IAEjC,MAAMgL,UAAU,GAAIpL,CAAU,IAAc,OAAOA,CAAC,KAAK,UAAU,CAAA;IAEnE,MAAMqL,aAAa,GAAIvN,KAAc,IACxCA,KAAK,GAAG,MAAM,GAAG,OAAO;;ICAb,MAAMwN,gBAAgB,CAAC;MAKlCxO,WAAWA,CAACmG,UAAwB,EAAE;QAClC,IAAI,CAACA,UAAU,GAAGA,UAAU,CAAA;IAE5B,IAAA,IAAI,CAACsI,iBAAiB,GAAG,IAAI,CAACC,mBAAmB,CAC7CvI,UAAU,CAACW,OAAO,CAAC6H,UAAU,IAAI,GACrC,CAAC,CAAA;IACD,IAAA,IAAI,CAACC,iBAAiB,GAAG,IAAI,CAACF,mBAAmB,CAC7CvI,UAAU,CAACW,OAAO,CAAC+H,UAAU,IAAI,GACrC,CAAC,CAAA;IACL,GAAA;MAEOC,MAAMA,CAACC,QAAqB,EAAQ;IACvC,IAAA,IAAIA,QAAQ,IAAIA,QAAQ,CAACpO,MAAM,EAAE;IAC7B,MAAA,IAAI,CAACqO,cAAc,CAACD,QAAQ,CAAC,CAAA;IACjC,KAAC,MAAM;UACH,IAAI,CAACE,cAAc,EAAE,CAAA;IACzB,KAAA;IACJ,GAAA;IAEOA,EAAAA,cAAcA,GAAS;IAC1B,IAAA,MAAMvI,QAAQ,GAAG,IAAI,CAACP,UAAU,CAACyB,OAAO,CAAA;QACxClB,QAAQ,CAACsE,KAAK,EAAE,CAAA;IAEhB,IAAA,IAAItE,QAAQ,CAAC,CAAC,CAAC,EAAE;IACb,MAAA,IAAI,CAACwI,iBAAiB,CAClBxI,QAAQ,CAAC,CAAC,CAAC,EACX,IAAI,CAACP,UAAU,CAACrF,IAAI,CAACJ,QAAQ,EAC7B,IAAI,EACJ,CACJ,CAAC,CAAA;IACL,KAAA;IACJ,GAAA;MAEOsO,cAAcA,CAAC7N,IAAU,EAAQ;IACpC;IACA,IAAA,MAAMgO,WAAW,GAAGxI,MAAM,CAACxF,IAAI,CAACyG,OAAO,CAAC,CAAA;;IAExC;IACA,IAAA,MAAMwH,EAAE,GAAG,IAAI,CAACC,QAAQ,CAAClO,IAAI,EAAEA,IAAI,CAAC8C,QAAQ,EAAE,CAAC,CAAA;IAC/C,IAAA,IAAI,CAACqL,cAAc,CAACnO,IAAI,EAAEiO,EAAE,CAAC,CAAA;;IAE7B;IACAD,IAAAA,WAAW,CAACrQ,KAAK,CAACsQ,EAAE,CAAC,CAAA;;IAErB;QACAD,WAAW,CAACrL,MAAM,EAAE,CAAA;;IAEpB;QACA,IAAI3C,IAAI,CAACT,QAAQ,EAAE;IACf,MAAA,IAAI,CAACwO,iBAAiB,CAClBE,EAAE,EACFjO,IAAI,CAACT,QAAQ,EACb,KAAK,EACLS,IAAI,CAAC8C,QAAQ,EAAE,GAAG,CACtB,CAAC,CAAA;IACL,KAAA;IACJ,GAAA;MAEQiL,iBAAiBA,CACrBtH,OAAgB,EAChBlH,QAAgB,EAChB6O,UAAmB,EACnBnN,KAAa,EACT;IACJ,IAAA,MAAMoN,EAAE,GAAG,IAAI,CAACC,QAAQ,CAACF,UAAU,CAAC,CAAA;IACpC3H,IAAAA,OAAO,CAAC8H,WAAW,CAACF,EAAE,CAAC,CAAA;IAEvB,IAAA,KAAK,MAAMnN,KAAK,IAAI3B,QAAQ,EAAE;UAC1B,MAAM0O,EAAE,GAAG,IAAI,CAACC,QAAQ,CAAChN,KAAK,EAAED,KAAK,CAAC,CAAA;IACtCoN,MAAAA,EAAE,CAACE,WAAW,CAACN,EAAE,CAAC,CAAA;IAElB,MAAA,IAAI,CAACE,cAAc,CAACjN,KAAK,EAAE+M,EAAE,CAAC,CAAA;IAE9B,MAAA,IAAI/M,KAAK,CAACN,WAAW,EAAE,EAAE;IACrB,QAAA,IAAI,CAACmN,iBAAiB,CAACE,EAAE,EAAE/M,KAAK,CAAC3B,QAAQ,EAAE,KAAK,EAAE0B,KAAK,GAAG,CAAC,CAAC,CAAA;IAChE,OAAA;IACJ,KAAA;IACJ,GAAA;IAEQkN,EAAAA,cAAcA,CAACnO,IAAU,EAAEiO,EAAe,EAAQ;QACtDjO,IAAI,CAACyG,OAAO,GAAGwH,EAAE,CAAA;QACjBzI,MAAM,CAACyI,EAAE,CAAC,CAACvP,IAAI,CAAC,MAAM,EAAEsB,IAAI,CAAC,CAAA;IACjC,GAAA;MAEQsO,QAAQA,CAACF,UAAmB,EAAoB;IACpD,IAAA,IAAII,WAAW,CAAA;IACf,IAAA,IAAIC,IAAI,CAAA;QAER,IAAI,CAACL,UAAU,EAAE;IACbI,MAAAA,WAAW,GAAG,EAAE,CAAA;IAChBC,MAAAA,IAAI,GAAG,OAAO,CAAA;IAClB,KAAC,MAAM;IACHD,MAAAA,WAAW,GAAG,aAAa,CAAA;IAC3BC,MAAAA,IAAI,GAAG,MAAM,CAAA;IAEb,MAAA,IAAI,IAAI,CAACzJ,UAAU,CAACW,OAAO,CAAC+I,GAAG,EAAE;IAC7BF,QAAAA,WAAW,IAAI,aAAa,CAAA;IAChC,OAAA;IACJ,KAAA;IAEA,IAAA,IAAI,IAAI,CAACxJ,UAAU,CAACW,OAAO,CAACgJ,WAAW,EAAE;IACrCH,MAAAA,WAAW,IAAI,aAAa,CAAA;IAChC,KAAA;IAEA,IAAA,MAAMH,EAAE,GAAGO,QAAQ,CAACC,aAAa,CAAC,IAAI,CAAC,CAAA;IACvCR,IAAAA,EAAE,CAACS,SAAS,GAAI,CAAA,cAAA,EAAgBN,WAAY,CAAC,CAAA,CAAA;IAE7CH,IAAAA,EAAE,CAACU,YAAY,CAAC,MAAM,EAAEN,IAAI,CAAC,CAAA;IAE7B,IAAA,OAAOJ,EAAE,CAAA;IACb,GAAA;IAEQH,EAAAA,QAAQA,CAAClO,IAAU,EAAEiB,KAAa,EAAiB;IACvD,IAAA,MAAM+N,UAAU,GAAGC,OAAO,CACtB,IAAI,CAACjK,UAAU,CAACkK,iBAAiB,CAACC,cAAc,CAACnP,IAAI,CACzD,CAAC,CAAA;IAED,IAAA,MAAMoP,cAAc,GAChBpP,IAAI,CAACa,QAAQ,EAAE,IACdb,IAAI,CAACZ,aAAa,IAAI,IAAI,CAAC4F,UAAU,CAACW,OAAO,CAAC0J,eAAgB,CAAA;QAEnE,MAAMpB,EAAE,GAAGmB,cAAc,GACnB,IAAI,CAACE,cAAc,CAACtP,IAAI,EAAEiB,KAAK,EAAE+N,UAAU,CAAC,GAC5C,IAAI,CAACO,YAAY,CAACvP,IAAI,EAAEiB,KAAK,EAAE+N,UAAU,CAAC,CAAA;IAEhD,IAAA,IAAI,IAAI,CAAChK,UAAU,CAACW,OAAO,CAAC6J,UAAU,EAAE;IACpC,MAAA,IAAI,CAACxK,UAAU,CAACW,OAAO,CAAC6J,UAAU,CAACxP,IAAI,EAAEwF,MAAM,CAACyI,EAAE,CAAC,EAAEe,UAAU,CAAC,CAAA;IACpE,KAAA;IAEA,IAAA,OAAOf,EAAE,CAAA;IACb,GAAA;MAEQwB,yBAAyBA,CAC7BhJ,OAAoB,EACpBtI,IAAY,EACZ8C,KAAa,EACb+N,UAAmB,EACrB;IACEvI,IAAAA,OAAO,CAACsI,YAAY,CAAC,YAAY,EAAE5Q,IAAI,CAAC,CAAA;QACxCsI,OAAO,CAACsI,YAAY,CAAC,YAAY,EAAG,CAAE9N,EAAAA,KAAM,EAAC,CAAC,CAAA;QAC9CwF,OAAO,CAACsI,YAAY,CAAC,eAAe,EAAE3B,aAAa,CAAC4B,UAAU,CAAC,CAAC,CAAA;IAChEvI,IAAAA,OAAO,CAACsI,YAAY,CAAC,MAAM,EAAE,UAAU,CAAC,CAAA;IAC5C,GAAA;IAEQO,EAAAA,cAAcA,CAClBtP,IAAU,EACViB,KAAa,EACb+N,UAAmB,EACN;IACb,IAAA,MAAMU,aAAa,GAAG,IAAI,CAACC,gBAAgB,CAAC3P,IAAI,CAAC,CAAA;QACjD,MAAM4P,aAAa,GAAG,IAAI,CAACC,gBAAgB,CAAC7P,IAAI,EAAEgP,UAAU,CAAC,CAAA;IAE7D,IAAA,MAAMc,WAAW,GAAG9P,IAAI,CAACkE,OAAO,GAC1B,IAAI,CAACoJ,iBAAiB,GACtB,IAAI,CAACG,iBAAiB,CAAA;;IAE5B;IACA,IAAA,MAAMQ,EAAE,GAAGW,QAAQ,CAACC,aAAa,CAAC,IAAI,CAAC,CAAA;IACvCZ,IAAAA,EAAE,CAACa,SAAS,GAAI,CAAA,cAAA,EAAgBc,aAAc,CAAC,CAAA,CAAA;IAC/C3B,IAAAA,EAAE,CAACc,YAAY,CAAC,MAAM,EAAE,MAAM,CAAC,CAAA;;IAE/B;IACA,IAAA,MAAMgB,GAAG,GAAGnB,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC,CAAA;QACzCkB,GAAG,CAACjB,SAAS,GAAG,8BAA8B,CAAA;IAC9CiB,IAAAA,GAAG,CAAChB,YAAY,CAAC,MAAM,EAAE,MAAM,CAAC,CAAA;IAEhCd,IAAAA,EAAE,CAACM,WAAW,CAACwB,GAAG,CAAC,CAAA;;IAEnB;IACA,IAAA,MAAMC,UAAU,GAAGpB,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC,CAAA;QAC9CmB,UAAU,CAAClB,SAAS,GAAGY,aAAa,CAAA;IAEpC,IAAA,IAAII,WAAW,EAAE;UACbE,UAAU,CAACzB,WAAW,CAACuB,WAAW,CAACG,SAAS,CAAC,IAAI,CAAC,CAAC,CAAA;IACvD,KAAA;IAEA,IAAA,IAAI,IAAI,CAACjL,UAAU,CAACW,OAAO,CAACuK,UAAU,EAAE;IACpCH,MAAAA,GAAG,CAACxB,WAAW,CAACyB,UAAU,CAAC,CAAA;IAC/B,KAAA;;IAEA;IACA,IAAA,MAAMG,SAAS,GAAG,IAAI,CAACC,eAAe,CAClCpQ,IAAI,CAAC7B,IAAI,EACT6Q,UAAU,EACV,IAAI,EACJ/N,KACJ,CAAC,CAAA;QACDkP,SAAS,CAACpB,YAAY,CAAC,eAAe,EAAE3B,aAAa,CAACpN,IAAI,CAACkE,OAAO,CAAC,CAAC,CAAA;IACpE6L,IAAAA,GAAG,CAACxB,WAAW,CAAC4B,SAAS,CAAC,CAAA;QAE1B,IAAI,CAAC,IAAI,CAACnL,UAAU,CAACW,OAAO,CAACuK,UAAU,EAAE;IACrCH,MAAAA,GAAG,CAACxB,WAAW,CAACyB,UAAU,CAAC,CAAA;IAC/B,KAAA;IAEA,IAAA,OAAO/B,EAAE,CAAA;IACb,GAAA;IAEQsB,EAAAA,YAAYA,CAChBvP,IAAU,EACViB,KAAa,EACb+N,UAAmB,EACN;IACb,IAAA,MAAMqB,SAAS,GAAG,CAAC,eAAe,CAAC,CAAA;IAEnC,IAAA,IAAIrB,UAAU,EAAE;IACZqB,MAAAA,SAAS,CAAClQ,IAAI,CAAC,iBAAiB,CAAC,CAAA;IACrC,KAAA;IAEA,IAAA,MAAMqO,WAAW,GAAG6B,SAAS,CAACC,IAAI,CAAC,GAAG,CAAC,CAAA;;IAEvC;IACA,IAAA,MAAMrC,EAAE,GAAGW,QAAQ,CAACC,aAAa,CAAC,IAAI,CAAC,CAAA;QACvCZ,EAAE,CAACa,SAAS,GAAGN,WAAW,CAAA;IAC1BP,IAAAA,EAAE,CAACc,YAAY,CAAC,MAAM,EAAE,MAAM,CAAC,CAAA;;IAE/B;IACA,IAAA,MAAMgB,GAAG,GAAGnB,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC,CAAA;QACzCkB,GAAG,CAACjB,SAAS,GAAG,8BAA8B,CAAA;IAC9CiB,IAAAA,GAAG,CAAChB,YAAY,CAAC,MAAM,EAAE,MAAM,CAAC,CAAA;IAEhCd,IAAAA,EAAE,CAACM,WAAW,CAACwB,GAAG,CAAC,CAAA;;IAEnB;IACA,IAAA,MAAMI,SAAS,GAAG,IAAI,CAACC,eAAe,CAClCpQ,IAAI,CAAC7B,IAAI,EACT6Q,UAAU,EACV,KAAK,EACL/N,KACJ,CAAC,CAAA;IACD8O,IAAAA,GAAG,CAACxB,WAAW,CAAC4B,SAAS,CAAC,CAAA;IAE1B,IAAA,OAAOlC,EAAE,CAAA;IACb,GAAA;MAEQmC,eAAeA,CACnBzD,QAAgB,EAChBqC,UAAmB,EACnBnO,QAAiB,EACjBI,KAAa,EACE;IACf,IAAA,MAAMkP,SAAS,GAAGvB,QAAQ,CAACC,aAAa,CAAC,MAAM,CAAC,CAAA;QAEhD,IAAI0B,OAAO,GAAG,4BAA4B,CAAA;IAE1C,IAAA,IAAI1P,QAAQ,EAAE;IACV0P,MAAAA,OAAO,IAAI,sBAAsB,CAAA;IACrC,KAAA;IAEAA,IAAAA,OAAO,IAAK,CAAA,qBAAA,EACR,IAAI,CAACvL,UAAU,CAACW,OAAO,CAACuK,UAAU,GAAG,MAAM,GAAG,OACjD,CAAC,CAAA,CAAA;QAEFC,SAAS,CAACrB,SAAS,GAAGyB,OAAO,CAAA;IAE7B,IAAA,IAAIvB,UAAU,EAAE;UACZ,MAAMwB,QAAQ,GAAG,IAAI,CAACxL,UAAU,CAACW,OAAO,CAAC6K,QAAQ,CAAA;UAEjD,IAAIA,QAAQ,KAAKvR,SAAS,EAAE;YACxBkR,SAAS,CAACpB,YAAY,CAAC,UAAU,EAAG,CAAEyB,EAAAA,QAAS,EAAC,CAAC,CAAA;IACrD,OAAA;IACJ,KAAA;QAEA,IAAI,CAACf,yBAAyB,CAACU,SAAS,EAAExD,QAAQ,EAAE1L,KAAK,EAAE+N,UAAU,CAAC,CAAA;IAEtE,IAAA,IAAI,IAAI,CAAChK,UAAU,CAACW,OAAO,CAACe,UAAU,EAAE;UACpCyJ,SAAS,CAACM,WAAW,GAAG9D,QAAQ,CAAA;IACpC,KAAC,MAAM;UACHwD,SAAS,CAACO,SAAS,GAAG/D,QAAQ,CAAA;IAClC,KAAA;IAEA,IAAA,OAAOwD,SAAS,CAAA;IACpB,GAAA;MAEQR,gBAAgBA,CAAC3P,IAAU,EAAU;IACzC,IAAA,MAAMuQ,OAAO,GAAG,CAAC,gBAAgB,EAAE,eAAe,CAAC,CAAA;IAEnD,IAAA,IAAI,CAACvQ,IAAI,CAACkE,OAAO,EAAE;IACfqM,MAAAA,OAAO,CAACpQ,IAAI,CAAC,eAAe,CAAC,CAAA;IACjC,KAAA;IAEA,IAAA,IAAI,IAAI,CAAC6E,UAAU,CAACW,OAAO,CAACuK,UAAU,EAAE;IACpCK,MAAAA,OAAO,CAACpQ,IAAI,CAAC,qBAAqB,CAAC,CAAA;IACvC,KAAC,MAAM;IACHoQ,MAAAA,OAAO,CAACpQ,IAAI,CAAC,sBAAsB,CAAC,CAAA;IACxC,KAAA;IAEA,IAAA,OAAOoQ,OAAO,CAACD,IAAI,CAAC,GAAG,CAAC,CAAA;IAC5B,GAAA;IAEQT,EAAAA,gBAAgBA,CAAC7P,IAAU,EAAEgP,UAAmB,EAAU;IAC9D,IAAA,MAAMuB,OAAO,GAAG,CAAC,eAAe,CAAC,CAAA;IAEjC,IAAA,IAAI,CAACvQ,IAAI,CAACkE,OAAO,EAAE;IACfqM,MAAAA,OAAO,CAACpQ,IAAI,CAAC,eAAe,CAAC,CAAA;IACjC,KAAA;IAEA,IAAA,IAAI6O,UAAU,EAAE;IACZuB,MAAAA,OAAO,CAACpQ,IAAI,CAAC,iBAAiB,CAAC,CAAA;IACnC,KAAA;QAEA,IAAIH,IAAI,CAAC2Q,UAAU,EAAE;IACjBJ,MAAAA,OAAO,CAACpQ,IAAI,CAAC,gBAAgB,CAAC,CAAA;IAClC,KAAA;IAEA,IAAA,OAAOoQ,OAAO,CAACD,IAAI,CAAC,GAAG,CAAC,CAAA;IAC5B,GAAA;MAEQ/C,mBAAmBA,CACvB1N,KAAkB,EACY;IAC9B,IAAA,IAAI,OAAOA,KAAK,KAAK,QAAQ,EAAE;IAC3B;IACA,MAAA,MAAMkQ,GAAG,GAAGnB,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC,CAAA;UACzCkB,GAAG,CAACW,SAAS,GAAG7Q,KAAK,CAAA;IAErB,MAAA,OAAO+O,QAAQ,CAACgC,cAAc,CAACb,GAAG,CAACW,SAAS,CAAC,CAAA;IACjD,KAAC,MAAM;IACH,MAAA,OAAOlL,MAAM,CAAC3F,KAAK,CAAC,CAAC,CAAC,CAAC,CAAA;IAC3B,KAAA;IACJ,GAAA;IACJ;;ICtUe,MAAMgR,UAAU,CAAC;MAG5BhS,WAAWA,CAACmG,UAAwB,EAAE;QAClC,IAAI,CAACA,UAAU,GAAGA,UAAU,CAAA;IAChC,GAAA;IAEO8L,EAAAA,WAAWA,CACdC,OAA4C,EAC5CC,UAAuB,EACvBC,UAAwC,EACpC;QACJ,IAAI,CAACF,OAAO,EAAE;IACV,MAAA,OAAA;IACJ,KAAA;IAEA,IAAA,MAAMG,GAAG,GAAG,IAAI,CAACC,aAAa,CAACH,UAAU,CAAC,CAAA;IAC1C,IAAA,IAAI,CAACI,eAAe,CAACF,GAAG,CAAC,CAAA;QACzB,IAAI,CAACG,aAAa,CAAC,IAAI,EAAEL,UAAU,EAAEE,GAAG,CAAC,CAAA;QAEzC,MAAMI,WAAW,GAAGA,MAAY;IAC5B,MAAA,IAAI,CAACC,kBAAkB,CAACL,GAAG,CAAC,CAAA;UAC5B,IAAI,CAACG,aAAa,CAAC,KAAK,EAAEL,UAAU,EAAEE,GAAG,CAAC,CAAA;SAC7C,CAAA;QAED,MAAMM,aAAa,GAAI9S,IAAyB,IAAW;IACvD4S,MAAAA,WAAW,EAAE,CAAA;IACb,MAAA,IAAI,CAACtM,UAAU,CAACyM,QAAQ,CAAC,IAAI,CAACC,SAAS,CAAChT,IAAI,CAAC,EAAEsS,UAAU,CAAC,CAAA;IAE1D,MAAA,IAAIC,UAAU,IAAI,OAAOA,UAAU,KAAK,UAAU,EAAE;IAChDA,QAAAA,UAAU,EAAE,CAAA;IAChB,OAAA;SACH,CAAA;QAED,MAAMU,WAAW,GAAIC,KAAmB,IAAW;IAC/CN,MAAAA,WAAW,EAAE,CAAA;IAEb,MAAA,IAAI,IAAI,CAACtM,UAAU,CAACW,OAAO,CAACkM,YAAY,EAAE;YACtC,IAAI,CAAC7M,UAAU,CAACW,OAAO,CAACkM,YAAY,CAACD,KAAK,CAAC,CAAA;IAC/C,OAAA;SACH,CAAA;QAED,IAAI,CAACE,aAAa,CAACf,OAAO,EAAES,aAAa,EAAEG,WAAW,CAAC,CAAA;IAC3D,GAAA;MAEQP,eAAeA,CAACF,GAAwB,EAAQ;IACpD,IAAA,IAAIA,GAAG,EAAE;IACLA,MAAAA,GAAG,CAACvK,QAAQ,CAAC,gBAAgB,CAAC,CAAA;IAClC,KAAA;IACJ,GAAA;MAEQ4K,kBAAkBA,CAACL,GAAwB,EAAQ;IACvD,IAAA,IAAIA,GAAG,EAAE;IACLA,MAAAA,GAAG,CAACrJ,WAAW,CAAC,gBAAgB,CAAC,CAAA;IACrC,KAAA;IACJ,GAAA;MAEQsJ,aAAaA,CAACH,UAAuB,EAAuB;IAChE,IAAA,IAAIA,UAAU,EAAE;IACZ,MAAA,OAAOxL,MAAM,CAACwL,UAAU,CAACvK,OAAO,CAAC,CAAA;IACrC,KAAC,MAAM;IACH,MAAA,OAAO,IAAI,CAACzB,UAAU,CAACyB,OAAO,CAAA;IAClC,KAAA;IACJ,GAAA;IAEQ4K,EAAAA,aAAaA,CACjBU,SAAkB,EAClB/R,IAAiB,EACjBkR,GAAW,EACP;IACJ,IAAA,IAAI,IAAI,CAAClM,UAAU,CAACW,OAAO,CAACqM,SAAS,EAAE;IACnC,MAAA,IAAI,CAAChN,UAAU,CAACW,OAAO,CAACqM,SAAS,CAACD,SAAS,EAAE/R,IAAI,EAAEkR,GAAG,CAAC,CAAA;IAC3D,KAAA;IAEA,IAAA,IAAI,CAAClM,UAAU,CAACgF,aAAa,CAAC,mBAAmB,EAAE;UAC/C+H,SAAS;UACT/R,IAAI;IACJkR,MAAAA,GAAAA;IACJ,KAAC,CAAC,CAAA;IACN,GAAA;IAEQY,EAAAA,aAAaA,CACjBG,YAA0C,EAC1CT,aAA+C,EAC/CG,WAA2C,EACvC;IACJ,IAAA,MAAMZ,OAAO,GACT,OAAOkB,YAAY,KAAK,QAAQ,GAC1B;IAAEC,MAAAA,GAAG,EAAED,YAAAA;IAAa,KAAC,GACrBA,YAAY,CAAA;IAEtB,IAAA,MAAME,YAAiC,GAAG;IACtCC,MAAAA,MAAM,EAAE,KAAK;IACbC,MAAAA,KAAK,EAAE,KAAK;IACZC,MAAAA,QAAQ,EAAE,MAAM;IAChBC,MAAAA,OAAO,EAAEf,aAAa;IACtBgB,MAAAA,KAAK,EAAEb,WAAW;UAClB,GAAGZ,OAAAA;SACN,CAAA;QAEDoB,YAAY,CAACC,MAAM,GAAGD,YAAY,CAACC,MAAM,EAAEK,WAAW,EAAE,IAAI,KAAK,CAAA;IAEjE,IAAA,KAAKjN,MAAM,CAACkN,IAAI,CAACP,YAAY,CAAC,CAAA;IAClC,GAAA;MAEQT,SAASA,CAAChT,IAAyB,EAAc;QACrD,MAAM;IAAEiU,MAAAA,UAAAA;IAAW,KAAC,GAAG,IAAI,CAAC3N,UAAU,CAACW,OAAO,CAAA;QAE9C,MAAMiN,aAAa,GAAGA,MAAM;IACxB,MAAA,IAAI,OAAOlU,IAAI,KAAK,QAAQ,EAAE;IAC1B,QAAA,OAAOmU,IAAI,CAACC,KAAK,CAACpU,IAAI,CAAC,CAAA;IAC3B,OAAC,MAAM;IACH,QAAA,OAAOA,IAAI,CAAA;IACf,OAAA;SACH,CAAA;IAED,IAAA,MAAMqU,UAAU,GAAGH,aAAa,EAAE,CAAA;IAElC,IAAA,IAAID,UAAU,EAAE;UACZ,OAAOA,UAAU,CAACI,UAAU,CAAC,CAAA;IACjC,KAAC,MAAM;IACH,MAAA,OAAOA,UAAU,CAAA;IACrB,KAAA;IACJ,GAAA;IACJ;;IC9He,MAAMC,UAAU,CAAC;MAC5B,OAAeC,IAAI,GAAG,EAAE,CAAA;MACxB,OAAeC,EAAE,GAAG,EAAE,CAAA;MACtB,OAAeC,KAAK,GAAG,EAAE,CAAA;MACzB,OAAeC,IAAI,GAAG,EAAE,CAAA;MAIxBvU,WAAWA,CAACmG,UAAwB,EAAE;QAClC,IAAI,CAACA,UAAU,GAAGA,UAAU,CAAA;IAE5B,IAAA,IAAIA,UAAU,CAACW,OAAO,CAAC0N,eAAe,EAAE;UACpC7N,MAAM,CAACoJ,QAAQ,CAAC,CAAC0E,EAAE,CAAC,gBAAgB,EAAE,IAAI,CAACC,aAAa,CAAC,CAAA;IAC7D,KAAA;IACJ,GAAA;IAEOC,EAAAA,MAAMA,GAAS;IAClBhO,IAAAA,MAAM,CAACoJ,QAAQ,CAAC,CAAC6E,GAAG,CAAC,gBAAgB,CAAC,CAAA;IAC1C,GAAA;MAEOC,QAAQA,CAACC,YAAkB,EAAW;QACzC,OAAO,IAAI,CAACC,UAAU,CAACD,YAAY,CAAC1P,kBAAkB,EAAE,CAAC,CAAA;IAC7D,GAAA;MAEO4P,MAAMA,CAACF,YAAkB,EAAW;QACvC,OAAO,IAAI,CAACC,UAAU,CAACD,YAAY,CAACpP,sBAAsB,EAAE,CAAC,CAAA;IACjE,GAAA;MAEOuP,SAASA,CAACH,YAAkB,EAAW;IAC1C,IAAA,IAAI,CAACA,YAAY,CAAC9S,QAAQ,EAAE,EAAE;IAC1B,MAAA,OAAO,IAAI,CAAA;IACf,KAAC,MAAM;IACH;UACA,IAAI8S,YAAY,CAACzP,OAAO,EAAE;IACtB;YACA,OAAO,IAAI,CAAC0P,UAAU,CAACD,YAAY,CAAC1P,kBAAkB,EAAE,CAAC,CAAA;IAC7D,OAAC,MAAM;IACH;IACA,QAAA,IAAI,CAACe,UAAU,CAAC+O,QAAQ,CAACJ,YAAY,CAAC,CAAA;IACtC,QAAA,OAAO,KAAK,CAAA;IAChB,OAAA;IACJ,KAAA;IACJ,GAAA;MAEOK,QAAQA,CAACL,YAAkB,EAAW;QACzC,IAAIA,YAAY,CAAC9S,QAAQ,EAAE,IAAI8S,YAAY,CAACzP,OAAO,EAAE;IACjD;IACA,MAAA,IAAI,CAACc,UAAU,CAACiP,SAAS,CAACN,YAAY,CAAC,CAAA;IACvC,MAAA,OAAO,KAAK,CAAA;IAChB,KAAC,MAAM;IACH;UACA,OAAO,IAAI,CAACC,UAAU,CAACD,YAAY,CAACtP,SAAS,EAAE,CAAC,CAAA;IACpD,KAAA;IACJ,GAAA;MAEOuP,UAAUA,CAAC5T,IAAiB,EAAW;QAC1C,IAAI,CAACA,IAAI,EAAE;IACP,MAAA,OAAO,IAAI,CAAA;IACf,KAAC,MAAM;IACH,MAAA,IAAI,CAACgF,UAAU,CAAC4O,UAAU,CAAC5T,IAAI,CAAC,CAAA;UAEhC,IACI,CAAC,IAAI,CAACgF,UAAU,CAACkP,aAAa,CAACC,kBAAkB,CAC7C3O,MAAM,CAACxF,IAAI,CAACyG,OAAO,CAAC,CAAC2N,IAAI,CAAC,iBAAiB,CAC/C,CAAC,EACH;IACE,QAAA,IAAI,CAACpP,UAAU,CAACqP,YAAY,CAACrU,IAAI,CAAC,CAAA;IACtC,OAAA;IAEA,MAAA,OAAO,KAAK,CAAA;IAChB,KAAA;IACJ,GAAA;MAEQuT,aAAa,GAAIe,CAAe,IAAc;IAClD,IAAA,IAAI,CAAC,IAAI,CAACC,iBAAiB,EAAE,EAAE;IAC3B,MAAA,OAAO,IAAI,CAAA;IACf,KAAA;QAEA,MAAMZ,YAAY,GAAG,IAAI,CAAC3O,UAAU,CAACwP,eAAe,EAAE,CAAA;QACtD,IAAI,CAACb,YAAY,EAAE;IACf,MAAA,OAAO,IAAI,CAAA;IACf,KAAA;IAEA,IAAA,MAAM/T,GAAG,GAAG0U,CAAC,CAACG,KAAK,CAAA;IAEnB,IAAA,QAAQ7U,GAAG;UACP,KAAKoT,UAAU,CAACI,IAAI;IAChB,QAAA,OAAO,IAAI,CAACM,QAAQ,CAACC,YAAY,CAAC,CAAA;UAEtC,KAAKX,UAAU,CAACE,EAAE;IACd,QAAA,OAAO,IAAI,CAACW,MAAM,CAACF,YAAY,CAAC,CAAA;UAEpC,KAAKX,UAAU,CAACG,KAAK;IACjB,QAAA,OAAO,IAAI,CAACW,SAAS,CAACH,YAAY,CAAC,CAAA;UAEvC,KAAKX,UAAU,CAACC,IAAI;IAChB,QAAA,OAAO,IAAI,CAACe,QAAQ,CAACL,YAAY,CAAC,CAAA;IAEtC,MAAA;IACI,QAAA,OAAO,IAAI,CAAA;IACnB,KAAA;OACH,CAAA;IAEOY,EAAAA,iBAAiBA,GAAY;IACjC,IAAA,OACI,CAAC,IAAI,CAACvP,UAAU,CAACW,OAAO,CAAC0N,eAAe,IAAI,KAAK,KACjD,IAAI,CAACrO,UAAU,CAACkK,iBAAiB,CAACwF,aAAa,EAAE,CAAA;IAEzD,GAAA;IACJ;;IChHA,MAAMC,QAAQ,GAAGA,CAACC,WAAoB,EAAEC,UAAkB,KAAW;IACjE,EAAA,MAAMC,UAAU,GAAGA,MAAe,CAAA,cAAA,EAAgBD,UAAW,CAAC,CAAA,CAAA;IAE9D,EAAA,MAAME,aAAa,GAAGA,CAClBvK,EAAe,EACfwK,OAAe,KACgB;QAC/B,MAAMC,MAAM,GAAGzP,MAAM,CAAC9G,IAAI,CAAC8L,EAAE,EAAEwK,OAAO,CAAY,CAAA;IAElD,IAAA,IAAIC,MAAM,IAAIA,MAAM,YAAYC,YAAY,EAAE;IAC1C,MAAA,OAAOD,MAAM,CAAA;IACjB,KAAC,MAAM;IACH,MAAA,OAAO,IAAI,CAAA;IACf,KAAA;OACH,CAAA;IAED,EAAA,MAAME,YAAY,GAAGA,CAACjE,GAAW,EAAEvL,OAAgB,KAAa;IAC5D,IAAA,MAAMqP,OAAO,GAAGF,UAAU,EAAE,CAAA;QAE5B,KAAK,MAAMtK,EAAE,IAAI0G,GAAG,CAACjO,GAAG,EAAE,EAAE;IACxB,MAAA,MAAMmS,cAAc,GAAGL,aAAa,CAACvK,EAAE,EAAEwK,OAAO,CAAC,CAAA;UAEjD,IAAI,CAACI,cAAc,EAAE;YACjB,MAAMC,iBAAiB,GAAGT,WAAkC,CAAA;YAC5D,MAAMK,MAAM,GAAG,IAAII,iBAAiB,CAAC7K,EAAE,EAAE7E,OAAO,CAAC,CAAA;YAEjD,IAAI,CAACH,MAAM,CAAC9G,IAAI,CAAC8L,EAAE,EAAEwK,OAAO,CAAC,EAAE;cAC3BxP,MAAM,CAAC9G,IAAI,CAAC8L,EAAE,EAAEwK,OAAO,EAAEC,MAAM,CAAC,CAAA;IACpC,SAAA;;IAEA;YACAA,MAAM,CAACK,IAAI,EAAE,CAAA;IACjB,OAAA;IACJ,KAAA;IAEA,IAAA,OAAOpE,GAAG,CAAA;OACb,CAAA;MAED,MAAMqE,aAAa,GAAIrE,GAAW,IAAW;IACzC,IAAA,MAAM8D,OAAO,GAAGF,UAAU,EAAE,CAAA;QAE5B,KAAK,MAAMtK,EAAE,IAAI0G,GAAG,CAACjO,GAAG,EAAE,EAAE;IACxB,MAAA,MAAMgS,MAAM,GAAGF,aAAa,CAACvK,EAAE,EAAEwK,OAAO,CAAC,CAAA;IAEzC,MAAA,IAAIC,MAAM,EAAE;YACRA,MAAM,CAACO,OAAO,EAAE,CAAA;IACpB,OAAA;IAEAhQ,MAAAA,MAAM,CAACiQ,UAAU,CAACjL,EAAE,EAAEwK,OAAO,CAAC,CAAA;IAClC,KAAA;OACH,CAAA;MAED,MAAMU,YAAY,GAAGA,CACjBxE,GAAW,EACXyE,YAAoB,EACpBC,IAAe,KACL;QACV,IAAIzU,MAAM,GAAG,IAAI,CAAA;QAEjB,KAAK,MAAMqJ,EAAE,IAAI0G,GAAG,CAACjO,GAAG,EAAE,EAAE;UACxB,MAAMgS,MAAM,GAAGzP,MAAM,CAAC9G,IAAI,CAAC8L,EAAE,EAAEsK,UAAU,EAAE,CAAY,CAAA;IAEvD,MAAA,IAAIG,MAAM,IAAIA,MAAM,YAAYC,YAAY,EAAE;YAC1C,MAAMW,YAAY,GAAGZ,MAA+B,CAAA;IACpD,QAAA,MAAMa,cAAc,GAAGD,YAAY,CAACF,YAAY,CAAC,CAAA;IAEjD,QAAA,IAAIG,cAAc,IAAI,OAAOA,cAAc,KAAK,UAAU,EAAE;cACxD3U,MAAM,GAAG2U,cAAc,CAACC,KAAK,CAACd,MAAM,EAAEW,IAAI,CAAY,CAAA;IAC1D,SAAA;IACJ,OAAA;IACJ,KAAA;IAEA,IAAA,OAAOzU,MAAM,CAAA;OAChB,CAAA;;IAED;MACCqE,MAAM,CAACwQ,EAAE,CAASnB,UAAU,CAAC,GAAG,UAE7BoB,SAAkB,EAEpB;QACE,IAAI,CAACA,SAAS,EAAE;IACZ,MAAA,OAAOd,YAAY,CAAC,IAAI,EAAE,IAAI,CAAC,CAAA;IACnC,KAAC,MAAM,IAAI,OAAOc,SAAS,KAAK,QAAQ,EAAE;UACtC,MAAMtQ,OAAO,GAAGsQ,SAAoB,CAAA;IACpC,MAAA,OAAOd,YAAY,CAAC,IAAI,EAAExP,OAAO,CAAC,CAAA;IACtC,KAAC,MAAM,IAAI,OAAOsQ,SAAS,KAAK,QAAQ,IAAIA,SAAS,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;UAC9D,MAAMN,YAAY,GAAGM,SAAS,CAAA;UAE9B,IAAIN,YAAY,KAAK,SAAS,EAAE;YAC5B,OAAOJ,aAAa,CAAC,IAAI,CAAC,CAAA;IAC9B,OAAC,MAAM,IAAII,YAAY,KAAK,kBAAkB,EAAE;IAC5C,QAAA,OAAOf,WAAW,CAAA;IACtB,OAAC,MAAM;YAAA,KAAAsB,IAAAA,IAAA,GAAAnX,SAAA,CAAAC,MAAA,EAdR4W,IAAI,OAAAjX,KAAA,CAAAuX,IAAA,GAAAA,CAAAA,GAAAA,IAAA,WAAAC,IAAA,GAAA,CAAA,EAAAA,IAAA,GAAAD,IAAA,EAAAC,IAAA,EAAA,EAAA;IAAJP,UAAAA,IAAI,CAAAO,IAAA,GAAApX,CAAAA,CAAAA,GAAAA,SAAA,CAAAoX,IAAA,CAAA,CAAA;IAAA,SAAA;IAeC,QAAA,OAAOT,YAAY,CAAC,IAAI,EAAEC,YAAY,EAAEC,IAAI,CAAC,CAAA;IACjD,OAAA;IACJ,KAAC,MAAM;IACH,MAAA,OAAO3W,SAAS,CAAA;IACpB,KAAA;OACH,CAAA;IACL,CAAC,CAAA;IAEc,MAAMiW,YAAY,CAAgB;IAC7C,EAAA,OAAcP,QAAQA,CAACC,WAAoB,EAAEC,UAAkB,EAAQ;IACnEF,IAAAA,QAAQ,CAACC,WAAW,EAAEC,UAAU,CAAC,CAAA;IACrC,GAAA;MAIA,OAAiBuB,QAAQ,GAAY,EAAE,CAAA;IAMvCvX,EAAAA,WAAWA,CAAC2L,EAAe,EAAE7E,OAAsB,EAAE;IACjD,IAAA,IAAI,CAACuL,GAAG,GAAG1L,MAAM,CAACgF,EAAE,CAAC,CAAA;;IAErB;IACA,IAAA,MAAM4L,QAAQ,GAAI,IAAI,CAACvX,WAAW,CAAS,UAAU,CAAkB,CAAA;QACvE,IAAI,CAAC8G,OAAO,GAAG;IAAE,MAAA,GAAGyQ,QAAQ;UAAE,GAAGzQ,OAAAA;SAAS,CAAA;IAC9C,GAAA;IAEO6P,EAAAA,OAAOA,GAAS;QACnB,IAAI,CAAChC,MAAM,EAAE,CAAA;IACjB,GAAA;IAEO8B,EAAAA,IAAIA,GAAS;IAChB;IAAA,GAAA;IAGG9B,EAAAA,MAAMA,GAAS;IAClB;IAAA,GAAA;IAER;;ICtIA;IACA;IACA;IAIA,MAAM6C,6BAA6B,GAAI/B,CAAa,KAAoB;MACpErO,KAAK,EAAEqO,CAAC,CAACrO,KAAK;MACdC,KAAK,EAAEoO,CAAC,CAACpO,KAAK;MACdT,MAAM,EAAE6O,CAAC,CAAC7O,MAAqB;IAC/B8B,EAAAA,aAAa,EAAE+M,CAAAA;IACnB,CAAC,CAAC,CAAA;IAEF,MAAMgC,wBAAwB,GAAGA,CAC7BC,KAAY,EACZjC,CAAa,MACG;MAChBrO,KAAK,EAAEsQ,KAAK,CAACtQ,KAAK;MAClBC,KAAK,EAAEqQ,KAAK,CAACrQ,KAAK;MAClBT,MAAM,EAAE8Q,KAAK,CAAC9Q,MAAqB;IACnC8B,EAAAA,aAAa,EAAE+M,CAAAA;IACnB,CAAC,CAAC,CAAA;IAEF,MAAekC,WAAW,SAAwBtB,YAAY,CAAgB;IAMnEI,EAAAA,IAAIA,GAAS;QAChB,MAAM7O,OAAO,GAAG,IAAI,CAACyK,GAAG,CAACjO,GAAG,CAAC,CAAC,CAAC,CAAA;IAE/B,IAAA,IAAIwD,OAAO,EAAE;UACTA,OAAO,CAACgQ,gBAAgB,CAAC,WAAW,EAAE,IAAI,CAACC,SAAS,EAAE;IAClDC,QAAAA,OAAO,EAAE,KAAA;IACb,OAAC,CAAC,CAAA;UACFlQ,OAAO,CAACgQ,gBAAgB,CAAC,YAAY,EAAE,IAAI,CAACG,UAAU,EAAE;IACpDD,QAAAA,OAAO,EAAE,KAAA;IACb,OAAC,CAAC,CAAA;IACN,KAAA;QAEA,IAAI,CAACE,cAAc,GAAG,KAAK,CAAA;QAC3B,IAAI,CAACC,eAAe,GAAG,IAAI,CAAA;QAC3B,IAAI,CAACC,eAAe,GAAG,KAAK,CAAA;QAC5B,IAAI,CAACC,aAAa,GAAG,IAAI,CAAA;IAC7B,GAAA;IAEOxD,EAAAA,MAAMA,GAAS;QAClB,MAAMhJ,EAAE,GAAG,IAAI,CAAC0G,GAAG,CAACjO,GAAG,CAAC,CAAC,CAAC,CAAA;IAE1B,IAAA,IAAIuH,EAAE,EAAE;IACJ;UACCA,EAAE,CAASyM,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAACP,SAAS,EAAE;IACzDC,QAAAA,OAAO,EAAE,KAAA;IACb,OAAC,CAAC,CAAA;;IAEF;UACCnM,EAAE,CAASyM,mBAAmB,CAAC,YAAY,EAAE,IAAI,CAACL,UAAU,EAAE;IAC3DD,QAAAA,OAAO,EAAE,KAAA;IACb,OAAC,CAAC,CAAA;IACN,KAAA;QAEA,IAAI,CAACO,6BAA6B,EAAE,CAAA;IACxC,GAAA;MAYQR,SAAS,GAAIpC,CAAa,IAAW;IACzC;IACA,IAAA,IAAIA,CAAC,CAAC6C,MAAM,KAAK,CAAC,EAAE;IAChB,MAAA,OAAA;IACJ,KAAA;QAEA,MAAMhW,MAAM,GAAG,IAAI,CAACiW,eAAe,CAACf,6BAA6B,CAAC/B,CAAC,CAAC,CAAC,CAAA;IAErE,IAAA,IAAInT,MAAM,IAAImT,CAAC,CAAC+C,UAAU,EAAE;UACxB/C,CAAC,CAACgD,cAAc,EAAE,CAAA;IACtB,KAAA;OACH,CAAA;MAEOF,eAAeA,CAAC/R,YAA0B,EAAW;IACzD;QACA,IAAI,IAAI,CAACwR,cAAc,EAAE;IACrB,MAAA,IAAI,CAACU,aAAa,CAAClS,YAAY,CAAC,CAAA;IACpC,KAAA;QAEA,IAAI,CAAC2R,aAAa,GAAG3R,YAAY,CAAA;IAEjC,IAAA,IAAI,CAAC,IAAI,CAACC,YAAY,CAACD,YAAY,CAAC,EAAE;IAClC,MAAA,OAAO,KAAK,CAAA;IAChB,KAAA;QAEA,IAAI,CAACmS,gBAAgB,EAAE,CAAA;IAEvB,IAAA,OAAO,IAAI,CAAA;IACf,GAAA;IAEQA,EAAAA,gBAAgBA,GAAS;QAC7B5I,QAAQ,CAAC6H,gBAAgB,CAAC,WAAW,EAAE,IAAI,CAACgB,SAAS,EAAE;IACnDd,MAAAA,OAAO,EAAE,KAAA;IACb,KAAC,CAAC,CAAA;QACF/H,QAAQ,CAAC6H,gBAAgB,CAAC,WAAW,EAAE,IAAI,CAACiB,SAAS,EAAE;IACnDf,MAAAA,OAAO,EAAE,KAAA;IACb,KAAC,CAAC,CAAA;QACF/H,QAAQ,CAAC6H,gBAAgB,CAAC,SAAS,EAAE,IAAI,CAACkB,OAAO,EAAE;IAAEhB,MAAAA,OAAO,EAAE,KAAA;IAAM,KAAC,CAAC,CAAA;QACtE/H,QAAQ,CAAC6H,gBAAgB,CAAC,UAAU,EAAE,IAAI,CAACmB,QAAQ,EAAE;IACjDjB,MAAAA,OAAO,EAAE,KAAA;IACb,KAAC,CAAC,CAAA;IAEF,IAAA,MAAMkB,UAAU,GAAG,IAAI,CAACC,aAAa,EAAE,CAAA;IAEvC,IAAA,IAAID,UAAU,EAAE;IACZ,MAAA,IAAI,CAACE,oBAAoB,CAACF,UAAU,CAAC,CAAA;IACzC,KAAC,MAAM;UACH,IAAI,CAACd,eAAe,GAAG,IAAI,CAAA;IAC/B,KAAA;IACJ,GAAA;MAEQgB,oBAAoBA,CAACF,UAAkB,EAAQ;QACnD,IAAI,IAAI,CAACf,eAAe,EAAE;IACtBpN,MAAAA,YAAY,CAAC,IAAI,CAACoN,eAAe,CAAC,CAAA;IACtC,KAAA;IAEA,IAAA,IAAI,CAACA,eAAe,GAAGtN,MAAM,CAACC,UAAU,CAAC,MAAM;UAC3C,IAAI,IAAI,CAACuN,aAAa,EAAE;YACpB,IAAI,CAACD,eAAe,GAAG,IAAI,CAAA;IAC/B,OAAA;SACH,EAAEc,UAAU,CAAC,CAAA;QAEd,IAAI,CAACd,eAAe,GAAG,KAAK,CAAA;IAChC,GAAA;MAEQU,SAAS,GAAInD,CAAa,IAAW;QACzC,IAAI,CAAC0D,eAAe,CAAC1D,CAAC,EAAE+B,6BAA6B,CAAC/B,CAAC,CAAC,CAAC,CAAA;OAC5D,CAAA;IAEO0D,EAAAA,eAAeA,CACnB1D,CAA0B,EAC1BjP,YAA0B,EACtB;QACJ,IAAI,IAAI,CAACwR,cAAc,EAAE;IACrB,MAAA,IAAI,CAACjQ,SAAS,CAACvB,YAAY,CAAC,CAAA;UAE5B,IAAIiP,CAAC,CAAC+C,UAAU,EAAE;YACd/C,CAAC,CAACgD,cAAc,EAAE,CAAA;IACtB,OAAA;IACA,MAAA,OAAA;IACJ,KAAA;IAEA,IAAA,IAAI,CAAC,IAAI,CAACP,eAAe,EAAE;IACvB,MAAA,OAAA;IACJ,KAAA;QAEA,IAAI,IAAI,CAACC,aAAa,EAAE;IACpB,MAAA,IAAI,CAACH,cAAc,GAAG,IAAI,CAAC7Q,UAAU,CAAC,IAAI,CAACgR,aAAa,CAAC,KAAK,KAAK,CAAA;IACvE,KAAA;QAEA,IAAI,IAAI,CAACH,cAAc,EAAE;IACrB,MAAA,IAAI,CAACjQ,SAAS,CAACvB,YAAY,CAAC,CAAA;UAE5B,IAAIiP,CAAC,CAAC+C,UAAU,EAAE;YACd/C,CAAC,CAACgD,cAAc,EAAE,CAAA;IACtB,OAAA;IACJ,KAAC,MAAM;IACH,MAAA,IAAI,CAACC,aAAa,CAAClS,YAAY,CAAC,CAAA;IACpC,KAAA;IACJ,GAAA;MAEQsS,OAAO,GAAIrD,CAAa,IAAW;IACvC,IAAA,IAAI,CAACiD,aAAa,CAAClB,6BAA6B,CAAC/B,CAAC,CAAC,CAAC,CAAA;OACvD,CAAA;MAEOiD,aAAaA,CAAClS,YAA0B,EAAQ;QACpD,IAAI,CAAC6R,6BAA6B,EAAE,CAAA;QACpC,IAAI,CAACH,eAAe,GAAG,KAAK,CAAA;QAC5B,IAAI,CAACC,aAAa,GAAG,IAAI,CAAA;QAEzB,IAAI,IAAI,CAACH,cAAc,EAAE;UACrB,IAAI,CAACA,cAAc,GAAG,KAAK,CAAA;IAC3B,MAAA,IAAI,CAACrP,SAAS,CAACnC,YAAY,CAAC,CAAA;IAChC,KAAA;IACJ,GAAA;IAEQ6R,EAAAA,6BAA6BA,GAAG;IACpC;QACCtI,QAAQ,CAASqI,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAACQ,SAAS,EAAE;IAC/Dd,MAAAA,OAAO,EAAE,KAAA;IACb,KAAC,CAAC,CAAA;IACF;QACC/H,QAAQ,CAASqI,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAACS,SAAS,EAAE;IAC/Df,MAAAA,OAAO,EAAE,KAAA;IACb,KAAC,CAAC,CAAA;IACF;QACC/H,QAAQ,CAASqI,mBAAmB,CAAC,SAAS,EAAE,IAAI,CAACU,OAAO,EAAE;IAC3DhB,MAAAA,OAAO,EAAE,KAAA;IACb,KAAC,CAAC,CAAA;IACF;QACC/H,QAAQ,CAASqI,mBAAmB,CAAC,UAAU,EAAE,IAAI,CAACW,QAAQ,EAAE;IAC7DjB,MAAAA,OAAO,EAAE,KAAA;IACb,KAAC,CAAC,CAAA;IACN,GAAA;MAEQC,UAAU,GAAItC,CAAa,IAAW;QAC1C,IAAI,CAACA,CAAC,EAAE;IACJ,MAAA,OAAA;IACJ,KAAA;IAEA,IAAA,IAAIA,CAAC,CAAC2D,OAAO,CAACjZ,MAAM,GAAG,CAAC,EAAE;IACtB,MAAA,OAAA;IACJ,KAAA;IAEA,IAAA,MAAMuX,KAAK,GAAGjC,CAAC,CAAC4D,cAAc,CAAC,CAAC,CAAC,CAAA;QAEjC,IAAI,CAAC3B,KAAK,EAAE;IACR,MAAA,OAAA;IACJ,KAAA;QAEA,IAAI,CAACa,eAAe,CAACd,wBAAwB,CAACC,KAAK,EAAEjC,CAAC,CAAC,CAAC,CAAA;OAC3D,CAAA;MAEOoD,SAAS,GAAIpD,CAAa,IAAW;QACzC,IAAI,CAACA,CAAC,EAAE;IACJ,MAAA,OAAA;IACJ,KAAA;IAEA,IAAA,IAAIA,CAAC,CAAC2D,OAAO,CAACjZ,MAAM,GAAG,CAAC,EAAE;IACtB,MAAA,OAAA;IACJ,KAAA;IAEA,IAAA,MAAMuX,KAAK,GAAGjC,CAAC,CAAC4D,cAAc,CAAC,CAAC,CAAC,CAAA;QAEjC,IAAI,CAAC3B,KAAK,EAAE;IACR,MAAA,OAAA;IACJ,KAAA;QAEA,IAAI,CAACyB,eAAe,CAAC1D,CAAC,EAAEgC,wBAAwB,CAACC,KAAK,EAAEjC,CAAC,CAAC,CAAC,CAAA;OAC9D,CAAA;MAEOsD,QAAQ,GAAItD,CAAa,IAAW;QACxC,IAAI,CAACA,CAAC,EAAE;IACJ,MAAA,OAAA;IACJ,KAAA;IAEA,IAAA,IAAIA,CAAC,CAAC2D,OAAO,CAACjZ,MAAM,GAAG,CAAC,EAAE;IACtB,MAAA,OAAA;IACJ,KAAA;IAEA,IAAA,MAAMuX,KAAK,GAAGjC,CAAC,CAAC4D,cAAc,CAAC,CAAC,CAAC,CAAA;QAEjC,IAAI,CAAC3B,KAAK,EAAE;IACR,MAAA,OAAA;IACJ,KAAA;QAEA,IAAI,CAACgB,aAAa,CAACjB,wBAAwB,CAACC,KAAK,EAAEjC,CAAC,CAAC,CAAC,CAAA;OACzD,CAAA;IACL;;IC9Pe,MAAM6D,gBAAgB,CAAC;MAIlCtZ,WAAWA,CAACmG,UAAwB,EAAE;QAClC,IAAI,CAACA,UAAU,GAAGA,UAAU,CAAA;IAChC,GAAA;IAEOoT,EAAAA,SAASA,GAAS;QACrB,MAAMC,KAAK,GAAGxF,IAAI,CAACyF,SAAS,CAAC,IAAI,CAACC,QAAQ,EAAE,CAAC,CAAA;IAE7C,IAAA,IAAI,IAAI,CAACvT,UAAU,CAACW,OAAO,CAAC6S,qBAAqB,EAAE;UAC/C,IAAI,CAACxT,UAAU,CAACW,OAAO,CAAC6S,qBAAqB,CAACH,KAAK,CAAC,CAAA;IACxD,KAAC,MAAM,IAAI,IAAI,CAACI,oBAAoB,EAAE,EAAE;UACpCC,YAAY,CAACC,OAAO,CAAC,IAAI,CAACC,UAAU,EAAE,EAAEP,KAAK,CAAC,CAAA;IAClD,KAAA;IACJ,GAAA;IAEOQ,EAAAA,mBAAmBA,GAAsB;IAC5C,IAAA,MAAMC,QAAQ,GAAG,IAAI,CAACC,eAAe,EAAE,CAAA;IAEvC,IAAA,IAAID,QAAQ,EAAE;IACV,MAAA,OAAO,IAAI,CAACE,UAAU,CAACF,QAAQ,CAAC,CAAA;IACpC,KAAC,MAAM;IACH,MAAA,OAAO,IAAI,CAAA;IACf,KAAA;IACJ,GAAA;IAEOP,EAAAA,QAAQA,GAAe;QAC1B,MAAMU,cAAc,GAAGA,MAAgB;UACnC,MAAMC,SAAmB,GAAG,EAAE,CAAA;UAE9B,IAAI,CAAClU,UAAU,CAACrF,IAAI,CAACmB,OAAO,CAAEd,IAAU,IAAK;IACzC,QAAA,IAAIA,IAAI,CAACkE,OAAO,IAAIlE,IAAI,CAACmD,EAAE,IAAInD,IAAI,CAACY,WAAW,EAAE,EAAE;IAC/CsY,UAAAA,SAAS,CAAC/Y,IAAI,CAACH,IAAI,CAACmD,EAAE,CAAC,CAAA;IAC3B,SAAA;IACA,QAAA,OAAO,IAAI,CAAA;IACf,OAAC,CAAC,CAAA;IAEF,MAAA,OAAO+V,SAAS,CAAA;SACnB,CAAA;QAED,MAAMC,kBAAkB,GAAGA,MAAgB;UACvC,MAAMC,eAAyB,GAAG,EAAE,CAAA;UAEpC,IAAI,CAACpU,UAAU,CAACqU,gBAAgB,EAAE,CAAC/N,OAAO,CAAEtL,IAAI,IAAK;IACjD,QAAA,IAAIA,IAAI,CAACmD,EAAE,IAAI,IAAI,EAAE;IACjBiW,UAAAA,eAAe,CAACjZ,IAAI,CAACH,IAAI,CAACmD,EAAE,CAAC,CAAA;IACjC,SAAA;IACJ,OAAC,CAAC,CAAA;IAEF,MAAA,OAAOiW,eAAe,CAAA;SACzB,CAAA;QAED,OAAO;UACHE,UAAU,EAAEL,cAAc,EAAE;UAC5BM,aAAa,EAAEJ,kBAAkB,EAAC;SACrC,CAAA;IACL,GAAA;;IAEA;IACJ;IACA;IACA;IACA;MAEWK,eAAeA,CAACnB,KAAiB,EAAW;QAC/C,IAAI,CAACA,KAAK,EAAE;IACR,MAAA,OAAO,KAAK,CAAA;IAChB,KAAC,MAAM;UACH,IAAIoB,gBAAgB,GAAG,KAAK,CAAA;UAE5B,IAAIpB,KAAK,CAACiB,UAAU,EAAE;YAClBG,gBAAgB,GAAG,IAAI,CAACC,gBAAgB,CAACrB,KAAK,CAACiB,UAAU,CAAC,CAAA;IAC9D,OAAA;UAEA,IAAIjB,KAAK,CAACkB,aAAa,EAAE;YACrB,IAAI,CAACI,cAAc,EAAE,CAAA;IACrB,QAAA,IAAI,CAACC,kBAAkB,CAACvB,KAAK,CAACkB,aAAa,CAAC,CAAA;IAChD,OAAA;IAEA,MAAA,OAAOE,gBAAgB,CAAA;IAC3B,KAAA;IACJ,GAAA;IAEOI,EAAAA,uBAAuBA,CAC1BxB,KAAiB,EACjByB,UAAsB,EAClB;IACJ,IAAA,IAAIzB,KAAK,EAAE;IACP,MAAA,IAAI,CAAC0B,yBAAyB,CAC1B1B,KAAK,CAACiB,UAAU,EAChBjB,KAAK,CAACkB,aAAa,EACnBO,UACJ,CAAC,CAAA;IACL,KAAC,MAAM;IACHA,MAAAA,UAAU,EAAE,CAAA;IAChB,KAAA;IACJ,GAAA;IAEOE,EAAAA,qBAAqBA,GAAkB;IAC1C,IAAA,MAAM3B,KAAK,GAAG,IAAI,CAACQ,mBAAmB,EAAE,CAAA;IAExC,IAAA,IAAIR,KAAK,IAAIA,KAAK,CAACkB,aAAa,EAAE;IAC9B,MAAA,OAAOlB,KAAK,CAACkB,aAAa,CAAC,CAAC,CAAC,IAAI,IAAI,CAAA;IACzC,KAAC,MAAM;IACH,MAAA,OAAO,IAAI,CAAA;IACf,KAAA;IACJ,GAAA;MAEQP,UAAUA,CAACF,QAAgB,EAAc;IAC7C,IAAA,MAAMT,KAAK,GAAGxF,IAAI,CAACC,KAAK,CAACgG,QAAQ,CAA4B,CAAA;;IAE7D;IACA,IAAA,IAAIT,KAAK,IAAIA,KAAK,CAACkB,aAAa,IAAIrM,KAAK,CAACmL,KAAK,CAACkB,aAAa,CAAC,EAAE;IAC5D;IACAlB,MAAAA,KAAK,CAACkB,aAAa,GAAG,CAAClB,KAAK,CAACkB,aAAa,CAAC,CAAA;IAC/C,KAAA;IAEA,IAAA,OAAOlB,KAAK,CAAA;IAChB,GAAA;IAEQU,EAAAA,eAAeA,GAAkB;IACrC,IAAA,IAAI,IAAI,CAAC/T,UAAU,CAACW,OAAO,CAACsU,qBAAqB,EAAE;UAC/C,OAAO,IAAI,CAACjV,UAAU,CAACW,OAAO,CAACsU,qBAAqB,EAAE,CAAA;IAC1D,KAAC,MAAM,IAAI,IAAI,CAACxB,oBAAoB,EAAE,EAAE;UACpC,OAAOC,YAAY,CAACwB,OAAO,CAAC,IAAI,CAACtB,UAAU,EAAE,CAAC,CAAA;IAClD,KAAC,MAAM;IACH,MAAA,OAAO,IAAI,CAAA;IACf,KAAA;IACJ,GAAA;MAEQc,gBAAgBA,CAACS,OAAiB,EAAW;QACjD,IAAIV,gBAAgB,GAAG,KAAK,CAAA;IAE5B,IAAA,KAAK,MAAMzW,MAAM,IAAImX,OAAO,EAAE;UAC1B,MAAMna,IAAI,GAAG,IAAI,CAACgF,UAAU,CAACjC,WAAW,CAACC,MAAM,CAAC,CAAA;IAEhD,MAAA,IAAIhD,IAAI,EAAE;IACN,QAAA,IAAI,CAACA,IAAI,CAACX,cAAc,EAAE;cACtBW,IAAI,CAACkE,OAAO,GAAG,IAAI,CAAA;IACvB,SAAC,MAAM;IACHuV,UAAAA,gBAAgB,GAAG,IAAI,CAAA;IAC3B,SAAA;IACJ,OAAA;IACJ,KAAA;IAEA,IAAA,OAAOA,gBAAgB,CAAA;IAC3B,GAAA;MAEQG,kBAAkBA,CAACO,OAAiB,EAAW;QACnD,IAAIC,WAAW,GAAG,CAAC,CAAA;IAEnB,IAAA,KAAK,MAAMpX,MAAM,IAAImX,OAAO,EAAE;UAC1B,MAAMna,IAAI,GAAG,IAAI,CAACgF,UAAU,CAACjC,WAAW,CAACC,MAAM,CAAC,CAAA;IAEhD,MAAA,IAAIhD,IAAI,EAAE;IACNoa,QAAAA,WAAW,IAAI,CAAC,CAAA;YAEhB,IAAI,CAACpV,UAAU,CAACkK,iBAAiB,CAACmL,cAAc,CAACra,IAAI,CAAC,CAAA;IAC1D,OAAA;IACJ,KAAA;QAEA,OAAOoa,WAAW,KAAK,CAAC,CAAA;IAC5B,GAAA;IAEQT,EAAAA,cAAcA,GAAS;IAC3B,IAAA,MAAMzK,iBAAiB,GAAG,IAAI,CAAClK,UAAU,CAACkK,iBAAiB,CAAA;IAE3D,IAAA,MAAMoL,aAAa,GAAGpL,iBAAiB,CAACmK,gBAAgB,EAAE,CAAA;IAE1DiB,IAAAA,aAAa,CAAChP,OAAO,CAAEtL,IAAI,IAAK;IAC5BkP,MAAAA,iBAAiB,CAACqL,mBAAmB,CAACva,IAAI,CAAC,CAAA;IAC/C,KAAC,CAAC,CAAA;IACN,GAAA;IAEQ+Z,EAAAA,yBAAyBA,CAC7BS,YAAsB,EACtBF,aAAuB,EACvBR,UAAsB,EAClB;QACJ,IAAIW,YAAY,GAAG,CAAC,CAAA;QACpB,IAAIN,OAAO,GAAGK,YAAY,CAAA;QAE1B,MAAMtB,SAAS,GAAGA,MAAY;UAC1B,MAAMwB,WAAW,GAAG,EAAE,CAAA;IAEtB,MAAA,KAAK,MAAM1X,MAAM,IAAImX,OAAO,EAAE;YAC1B,MAAMna,IAAI,GAAG,IAAI,CAACgF,UAAU,CAACjC,WAAW,CAACC,MAAM,CAAC,CAAA;YAEhD,IAAI,CAAChD,IAAI,EAAE;IACP0a,UAAAA,WAAW,CAACva,IAAI,CAAC6C,MAAM,CAAC,CAAA;IAC5B,SAAC,MAAM;IACH,UAAA,IAAI,CAAChD,IAAI,CAAC2Q,UAAU,EAAE;gBAClB,IAAI3Q,IAAI,CAACX,cAAc,EAAE;kBACrBsb,eAAe,CAAC3a,IAAI,CAAC,CAAA;IACzB,aAAC,MAAM;kBACH,IAAI,CAACgF,UAAU,CAACoE,SAAS,CAACpJ,IAAI,EAAE,KAAK,EAAE,IAAI,CAAC,CAAA;IAChD,aAAA;IACJ,WAAA;IACJ,SAAA;IACJ,OAAA;IAEAma,MAAAA,OAAO,GAAGO,WAAW,CAAA;IAErB,MAAA,IAAI,IAAI,CAACd,kBAAkB,CAACU,aAAa,CAAC,EAAE;IACxC,QAAA,IAAI,CAACtV,UAAU,CAAC8E,gBAAgB,CAAC,IAAI,CAAC,CAAA;IAC1C,OAAA;UAEA,IAAI2Q,YAAY,KAAK,CAAC,EAAE;IACpBX,QAAAA,UAAU,EAAE,CAAA;IAChB,OAAA;SACH,CAAA;QAED,MAAMa,eAAe,GAAI3a,IAAU,IAAW;IAC1Cya,MAAAA,YAAY,IAAI,CAAC,CAAA;UACjB,IAAI,CAACzV,UAAU,CAACoE,SAAS,CAACpJ,IAAI,EAAE,KAAK,EAAE,MAAM;IACzCya,QAAAA,YAAY,IAAI,CAAC,CAAA;IACjBvB,QAAAA,SAAS,EAAE,CAAA;IACf,OAAC,CAAC,CAAA;SACL,CAAA;IAEDA,IAAAA,SAAS,EAAE,CAAA;IACf,GAAA;IAEQN,EAAAA,UAAUA,GAAW;QACzB,IAAI,OAAO,IAAI,CAAC5T,UAAU,CAACW,OAAO,CAACyS,SAAS,KAAK,QAAQ,EAAE;IACvD,MAAA,OAAO,IAAI,CAACpT,UAAU,CAACW,OAAO,CAACyS,SAAS,CAAA;IAC5C,KAAC,MAAM;IACH,MAAA,OAAO,MAAM,CAAA;IACjB,KAAA;IACJ,GAAA;IAEQK,EAAAA,oBAAoBA,GAAY;QACpC,MAAMmC,WAAW,GAAGA,MAAe;IAC/B;UACA,IAAIlC,YAAY,IAAI,IAAI,EAAE;IACtB,QAAA,OAAO,KAAK,CAAA;IAChB,OAAC,MAAM;IACH;YACA,IAAI;cACA,MAAM9Y,GAAG,GAAG,eAAe,CAAA;IAC3Bib,UAAAA,cAAc,CAAClC,OAAO,CAAC/Y,GAAG,EAAE,OAAO,CAAC,CAAA;IACpCib,UAAAA,cAAc,CAACC,UAAU,CAAClb,GAAG,CAAC,CAAA;aACjC,CAAC,OAAO4S,KAAK,EAAE;IACZ,UAAA,OAAO,KAAK,CAAA;IAChB,SAAA;IAEA,QAAA,OAAO,IAAI,CAAA;IACf,OAAA;SACH,CAAA;IAED,IAAA,IAAI,IAAI,CAACuI,qBAAqB,IAAI,IAAI,EAAE;IACpC,MAAA,IAAI,CAACA,qBAAqB,GAAGH,WAAW,EAAE,CAAA;IAC9C,KAAA;QAEA,OAAO,IAAI,CAACG,qBAAqB,CAAA;IACrC,GAAA;IACJ;;ICxQe,MAAMC,aAAa,CAAC;MAO/Bnc,WAAWA,CAACmG,UAAwB,EAAE;QAClC,IAAI,CAACA,UAAU,GAAGA,UAAU,CAAA;IAC5B,IAAA,IAAI,CAAC+G,WAAW,GAAG,CAAC,CAAC,CAAA;QACrB,IAAI,CAACkP,aAAa,GAAG,KAAK,CAAA;IAC9B,GAAA;IAEOC,EAAAA,cAAcA,GAAS;QAC1B,IAAI,CAACC,UAAU,EAAE,CAAA;QACjB,IAAI,CAACC,sBAAsB,EAAE,CAAA;QAC7B,IAAI,CAACC,wBAAwB,EAAE,CAAA;IACnC,GAAA;MAEOC,SAASA,CAAChV,GAAW,EAAQ;QAChC,IAAI,CAAC6U,UAAU,EAAE,CAAA;QAEjB,IAAI,IAAI,CAACI,aAAa,IAAI,IAAI,CAACA,aAAa,CAAC,CAAC,CAAC,EAAE;UAC7C,IAAI,CAACA,aAAa,CAAC,CAAC,CAAC,CAACC,SAAS,GAAGlV,GAAG,CAAA;IACzC,KAAC,MAAM;UACH,MAAMF,MAAM,GAAG,IAAI,CAACpB,UAAU,CAACkM,GAAG,CAAC9K,MAAM,EAAE,CAAA;UAC3C,MAAMqV,OAAO,GAAGrV,MAAM,GAAGA,MAAM,CAACE,GAAG,GAAG,CAAC,CAAA;UAEvCd,MAAM,CAACoJ,QAAQ,CAAC,CAAC4M,SAAS,CAAClV,GAAG,GAAGmV,OAAO,CAAC,CAAA;IAC7C,KAAA;IACJ,GAAA;MAEOtH,kBAAkBA,CAAC5O,QAAgB,EAAW;QACjD,IAAI,CAAC4V,UAAU,EAAE,CAAA;IAEjB,IAAA,IAAIO,aAAqB,CAAA;IACzB,IAAA,IAAIC,UAAkB,CAAA;IACtB,IAAA,IAAIC,UAAkB,CAAA;IACtB,IAAA,IAAIC,OAAe,CAAA;QAEnB,MAAMC,QAAQ,GAAGvW,QAAQ,CAACmF,MAAM,EAAE,IAAI,CAAC,CAAA;QAEvC,IAAI,IAAI,CAAC6Q,aAAa,EAAE;IACpBM,MAAAA,OAAO,GAAG,CAAC,CAAA;UACXF,UAAU,GAAG,IAAI,CAACJ,aAAa,CAAC7Q,MAAM,EAAE,IAAI,CAAC,CAAA;IAE7C,MAAA,MAAMtE,MAAM,GAAGb,QAAQ,CAACa,MAAM,EAAE,CAAA;UAChC,MAAM2V,WAAW,GAAG3V,MAAM,GAAGA,MAAM,CAACE,GAAG,GAAG,CAAC,CAAA;IAE3CsV,MAAAA,UAAU,GAAGG,WAAW,GAAG,IAAI,CAACC,eAAe,CAAA;UAC/CN,aAAa,GAAGE,UAAU,GAAGE,QAAQ,CAAA;IACzC,KAAC,MAAM;UACHD,OAAO,GAAGrW,MAAM,CAACgE,MAAM,CAAC,CAACgS,SAAS,EAAE,IAAI,CAAC,CAAA;UAEzC,MAAMS,YAAY,GAAGzW,MAAM,CAACgE,MAAM,CAAC,CAACkB,MAAM,EAAE,IAAI,CAAC,CAAA;UACjDiR,UAAU,GAAGE,OAAO,GAAGI,YAAY,CAAA;IAEnC,MAAA,MAAM7V,MAAM,GAAGb,QAAQ,CAACa,MAAM,EAAE,CAAA;IAEhCwV,MAAAA,UAAU,GAAGxV,MAAM,GAAGA,MAAM,CAACE,GAAG,GAAG,CAAC,CAAA;UACpCoV,aAAa,GAAGE,UAAU,GAAGE,QAAQ,CAAA;IACzC,KAAA;IAEA,IAAA,OAAOJ,aAAa,IAAIC,UAAU,IAAIC,UAAU,IAAIC,OAAO,CAAA;IAC/D,GAAA;IAEOK,EAAAA,aAAaA,GAAW;IAC3B,IAAA,IAAI,CAAC,IAAI,CAACX,aAAa,EAAE;IACrB,MAAA,OAAO,CAAC,CAAA;IACZ,KAAC,MAAM;UACH,OAAO,IAAI,CAACA,aAAa,CAACY,UAAU,EAAE,IAAI,CAAC,CAAA;IAC/C,KAAA;IACJ,GAAA;IAEQC,EAAAA,gBAAgBA,GAAS;QAC7B,MAAMC,qBAAqB,GAAGA,MAAqB;IAC/C,MAAA,MAAMC,aAAa,GAAG,CAAC,UAAU,EAAE,YAAY,CAAC,CAAA;UAEhD,MAAMC,WAAW,GAAIrL,GAAW,IAAc;IAC1C,QAAA,KAAK,MAAMsL,IAAI,IAAIF,aAAa,EAAE;IAC9B,UAAA,MAAMG,aAAa,GAAGvL,GAAG,CAACjE,GAAG,CAACuP,IAAI,CAAC,CAAA;IACnC,UAAA,IACIC,aAAa,KAAK,MAAM,IACxBA,aAAa,KAAK,QAAQ,EAC5B;IACE,YAAA,OAAO,IAAI,CAAA;IACf,WAAA;IACJ,SAAA;IAEA,QAAA,OAAO,KAAK,CAAA;WACf,CAAA;UAED,IAAIF,WAAW,CAAC,IAAI,CAACvX,UAAU,CAACkM,GAAG,CAAC,EAAE;IAClC,QAAA,OAAO,IAAI,CAAClM,UAAU,CAACkM,GAAG,CAAA;IAC9B,OAAA;IAEA,MAAA,KAAK,MAAM1G,EAAE,IAAI,IAAI,CAACxF,UAAU,CAACkM,GAAG,CAACwL,OAAO,EAAE,CAACzZ,GAAG,EAAE,EAAE;IAClD,QAAA,MAAMiO,GAAG,GAAG1L,MAAM,CAACgF,EAAE,CAAC,CAAA;IACtB,QAAA,IAAI+R,WAAW,CAACrL,GAAG,CAAC,EAAE;IAClB,UAAA,OAAOA,GAAG,CAAA;IACd,SAAA;IACJ,OAAA;IAEA,MAAA,OAAO,IAAI,CAAA;SACd,CAAA;QAED,MAAMyL,yBAAyB,GAAGA,MAAY;UAC1C,IAAI,CAACX,eAAe,GAAG,CAAC,CAAA;UACxB,IAAI,CAACT,aAAa,GAAG,IAAI,CAAA;SAC5B,CAAA;IAED,IAAA,IAAI,IAAI,CAACvW,UAAU,CAACkM,GAAG,CAACjE,GAAG,CAAC,UAAU,CAAC,KAAK,OAAO,EAAE;IACjD0P,MAAAA,yBAAyB,EAAE,CAAA;IAC/B,KAAA;IAEA,IAAA,MAAMpB,aAAa,GAAGc,qBAAqB,EAAE,CAAA;IAE7C,IAAA,IACId,aAAa,IACbA,aAAa,CAACvc,MAAM,IACpBuc,aAAa,CAAC,CAAC,CAAC,EAAEqB,OAAO,KAAK,MAAM,EACtC;UACE,IAAI,CAACrB,aAAa,GAAGA,aAAa,CAAA;UAElC,MAAMnV,MAAM,GAAG,IAAI,CAACmV,aAAa,CAACnV,MAAM,EAAE,CAAA;UAC1C,IAAI,CAAC4V,eAAe,GAAG5V,MAAM,GAAGA,MAAM,CAACE,GAAG,GAAG,CAAC,CAAA;IAClD,KAAC,MAAM;IACHqW,MAAAA,yBAAyB,EAAE,CAAA;IAC/B,KAAA;QAEA,IAAI,CAAC1B,aAAa,GAAG,IAAI,CAAA;IAC7B,GAAA;IAEQE,EAAAA,UAAUA,GAAS;IACvB,IAAA,IAAI,CAAC,IAAI,CAACF,aAAa,EAAE;UACrB,IAAI,CAACmB,gBAAgB,EAAE,CAAA;IAC3B,KAAA;IACJ,GAAA;MAEQS,uCAAuCA,CAAC/V,IAAa,EAAQ;QACjE,MAAMgW,YAAY,GAAG,IAAI,CAACvB,aAAa,IAAI,IAAI,CAACA,aAAa,CAAC,CAAC,CAAC,CAAA;QAEhE,IAAI,CAACuB,YAAY,EAAE;IACf,MAAA,OAAA;IACJ,KAAA;IAEA,IAAA,MAAMC,cAAc,GAChB,IAAI,CAACf,eAAe,GAAGc,YAAY,CAACE,YAAY,GAAGlW,IAAI,CAACsB,MAAM,CAAA;QAElE,IAAI2U,cAAc,GAAG,EAAE,EAAE;UACrBD,YAAY,CAACtB,SAAS,IAAI,EAAE,CAAA;IAC5B,MAAA,IAAI,CAACxW,UAAU,CAACiY,eAAe,EAAE,CAAA;IACjC,MAAA,IAAI,CAAClR,WAAW,GAAG,CAAC,CAAC,CAAA;SACxB,MAAM,IAAIjF,IAAI,CAACR,GAAG,GAAG,IAAI,CAAC0V,eAAe,GAAG,EAAE,EAAE;UAC7Cc,YAAY,CAACtB,SAAS,IAAI,EAAE,CAAA;IAC5B,MAAA,IAAI,CAACxW,UAAU,CAACiY,eAAe,EAAE,CAAA;IACjC,MAAA,IAAI,CAAClR,WAAW,GAAG,CAAC,CAAC,CAAA;IACzB,KAAA;IACJ,GAAA;MAEQmR,mCAAmCA,CAACpW,IAAa,EAAQ;QAC7D,MAAM0U,SAAS,GAAGhW,MAAM,CAACoJ,QAAQ,CAAC,CAAC4M,SAAS,EAAE,IAAI,CAAC,CAAA;IACnD,IAAA,MAAM2B,WAAW,GAAGrW,IAAI,CAACR,GAAG,GAAGkV,SAAS,CAAA;QAExC,IAAI2B,WAAW,GAAG,EAAE,EAAE;UAClB3X,MAAM,CAACoJ,QAAQ,CAAC,CAAC4M,SAAS,CAACA,SAAS,GAAG,EAAE,CAAC,CAAA;IAC9C,KAAC,MAAM;UACH,MAAMS,YAAY,GAAGzW,MAAM,CAACgE,MAAM,CAAC,CAACkB,MAAM,EAAE,IAAI,CAAC,CAAA;UAEjD,IAAIuR,YAAY,IAAInV,IAAI,CAACsB,MAAM,GAAGoT,SAAS,CAAC,GAAG,EAAE,EAAE;YAC/ChW,MAAM,CAACoJ,QAAQ,CAAC,CAAC4M,SAAS,CAACA,SAAS,GAAG,EAAE,CAAC,CAAA;IAC9C,OAAA;IACJ,KAAA;IACJ,GAAA;IAEQJ,EAAAA,sBAAsBA,GAAS;QACnC,MAAMnW,WAAW,GAAG,IAAI,CAACD,UAAU,CAACoY,UAAU,CAACnY,WAAW,CAAA;QAE1D,IAAIA,WAAW,IAAIA,WAAW,CAACqB,GAAG,KAAK,IAAI,CAACyF,WAAW,EAAE;IACrD,MAAA,IAAI,CAACA,WAAW,GAAG9G,WAAW,CAACqB,GAAG,CAAA;UAElC,IAAI,IAAI,CAACiV,aAAa,EAAE;IACpB,QAAA,IAAI,CAACsB,uCAAuC,CAAC5X,WAAW,CAAC,CAAA;IAC7D,OAAC,MAAM;IACH,QAAA,IAAI,CAACiY,mCAAmC,CAACjY,WAAW,CAAC,CAAA;IACzD,OAAA;IACJ,KAAA;IACJ,GAAA;IAEQoW,EAAAA,wBAAwBA,GAAS;QACrC,MAAMhW,YAAY,GAAG,IAAI,CAACL,UAAU,CAACoY,UAAU,CAAC/X,YAAY,CAAA;QAE5D,IAAI,CAACA,YAAY,EAAE;IACf,MAAA,OAAA;IACJ,KAAA;QAEA,IAAI,IAAI,CAACkW,aAAa,EAAE;IACpB,MAAA,IAAI,CAAC8B,mCAAmC,CAAChY,YAAY,CAAC,CAAA;IAC1D,KAAC,MAAM;IACH,MAAA,IAAI,CAACiY,qCAAqC,CAACjY,YAAY,CAAC,CAAA;IAC5D,KAAA;IACJ,GAAA;MAEQgY,mCAAmCA,CACvChY,YAA0B,EACtB;QACJ,IACIA,YAAY,CAACY,KAAK,KAAKhH,SAAS,IAChCoG,YAAY,CAACa,KAAK,KAAKjH,SAAS,EAClC;IACE,MAAA,OAAA;IACJ,KAAA;IAEA,IAAA,MAAMsc,aAAa,GAAG,IAAI,CAACA,aAAa,CAAA;QACxC,MAAMgC,kBAAkB,GAAGhC,aAAa,IAAIA,aAAa,CAACnV,MAAM,EAAE,CAAA;IAElE,IAAA,IAAI,EAAEmV,aAAa,IAAIgC,kBAAkB,CAAC,EAAE;IACxC,MAAA,OAAA;IACJ,KAAA;IAEA,IAAA,MAAMT,YAAY,GAAGvB,aAAa,CAAC,CAAC,CAAC,CAAA;QAErC,IAAI,CAACuB,YAAY,EAAE;IACf,MAAA,OAAA;IACJ,KAAA;IAEA,IAAA,MAAMU,cAAc,GAChBV,YAAY,CAACX,UAAU,GAAGW,YAAY,CAACW,WAAW,GAClDX,YAAY,CAACY,WAAW,CAAA;IAC5B,IAAA,MAAMC,aAAa,GAAGb,YAAY,CAACX,UAAU,GAAG,CAAC,CAAA;QAEjD,MAAMyB,SAAS,GAAGL,kBAAkB,CAAClX,IAAI,GAAGyW,YAAY,CAACW,WAAW,CAAA;IACpE,IAAA,MAAMI,QAAQ,GAAGN,kBAAkB,CAAClX,IAAI,CAAA;QACxC,MAAMyX,eAAe,GAAGzY,YAAY,CAACY,KAAK,GAAG2X,SAAS,GAAG,EAAE,CAAA;QAC3D,MAAMG,cAAc,GAAG1Y,YAAY,CAACY,KAAK,GAAG4X,QAAQ,GAAG,EAAE,CAAA;QAEzD,IAAIC,eAAe,IAAIN,cAAc,EAAE;IACnCV,MAAAA,YAAY,CAACX,UAAU,GAAG7P,IAAI,CAACC,GAAG,CAC9BuQ,YAAY,CAACX,UAAU,GAAG,EAAE,EAC5BW,YAAY,CAACY,WACjB,CAAC,CAAA;IACL,KAAC,MAAM,IAAIK,cAAc,IAAIJ,aAAa,EAAE;IACxCb,MAAAA,YAAY,CAACX,UAAU,GAAG7P,IAAI,CAAC0R,GAAG,CAAClB,YAAY,CAACX,UAAU,GAAG,EAAE,EAAE,CAAC,CAAC,CAAA;IACvE,KAAA;IACJ,GAAA;MAEQmB,qCAAqCA,CACzCjY,YAA0B,EACtB;QACJ,IACIA,YAAY,CAACY,KAAK,KAAKhH,SAAS,IAChCoG,YAAY,CAACa,KAAK,KAAKjH,SAAS,EAClC;IACE,MAAA,OAAA;IACJ,KAAA;IAEA,IAAA,MAAMgf,SAAS,GAAGzY,MAAM,CAACoJ,QAAQ,CAAC,CAAA;QAElC,MAAMuN,UAAU,GAAG8B,SAAS,CAAC9B,UAAU,EAAE,IAAI,CAAC,CAAA;QAC9C,MAAM+B,WAAW,GAAG1Y,MAAM,CAACgE,MAAM,CAAC,CAACiB,KAAK,EAAE,IAAI,CAAC,CAAA;IAE/C,IAAA,MAAMkT,aAAa,GAAGxB,UAAU,GAAG,CAAC,CAAA;QAEpC,MAAM2B,eAAe,GAAGzY,YAAY,CAACY,KAAK,GAAGiY,WAAW,GAAG,EAAE,CAAA;QAC7D,MAAMH,cAAc,GAAG1Y,YAAY,CAACY,KAAK,GAAGkW,UAAU,GAAG,EAAE,CAAA;IAE3D,IAAA,IAAI2B,eAAe,EAAE;IACjBG,MAAAA,SAAS,CAAC9B,UAAU,CAACA,UAAU,GAAG,EAAE,CAAC,CAAA;IACzC,KAAC,MAAM,IAAI4B,cAAc,IAAIJ,aAAa,EAAE;IACxCM,MAAAA,SAAS,CAAC9B,UAAU,CAAC7P,IAAI,CAAC0R,GAAG,CAAC7B,UAAU,GAAG,EAAE,EAAE,CAAC,CAAC,CAAC,CAAA;IACtD,KAAA;IACJ,GAAA;IACJ;;IChRe,MAAMgC,iBAAiB,CAAC;MAKnCtf,WAAWA,CAACmG,UAAwB,EAAE;QAClC,IAAI,CAACA,UAAU,GAAGA,UAAU,CAAA;IAC5B,IAAA,IAAI,CAACsV,aAAa,GAAG,IAAI8D,GAAG,EAAU,CAAA;QACtC,IAAI,CAAC1W,KAAK,EAAE,CAAA;IAChB,GAAA;IAEO8M,EAAAA,eAAeA,GAAiB;IACnC,IAAA,MAAM8F,aAAa,GAAG,IAAI,CAACjB,gBAAgB,EAAE,CAAA;QAE7C,IAAIiB,aAAa,CAACtb,MAAM,EAAE;IACtB,MAAA,OAAOsb,aAAa,CAAC,CAAC,CAAC,IAAI,KAAK,CAAA;IACpC,KAAC,MAAM;IACH,MAAA,OAAO,KAAK,CAAA;IAChB,KAAA;IACJ,GAAA;IAEOjB,EAAAA,gBAAgBA,GAAW;QAC9B,IAAI,IAAI,CAACgF,kBAAkB,EAAE;IACzB,MAAA,OAAO,CAAC,IAAI,CAACA,kBAAkB,CAAC,CAAA;IACpC,KAAC,MAAM;UACH,MAAM/D,aAAqB,GAAG,EAAE,CAAA;IAEhC,MAAA,IAAI,CAACA,aAAa,CAAChP,OAAO,CAAEnI,EAAE,IAAK;YAC/B,MAAMnD,IAAI,GAAG,IAAI,CAACgF,UAAU,CAACjC,WAAW,CAACI,EAAE,CAAC,CAAA;IAC5C,QAAA,IAAInD,IAAI,EAAE;IACNsa,UAAAA,aAAa,CAACna,IAAI,CAACH,IAAI,CAAC,CAAA;IAC5B,SAAA;IACJ,OAAC,CAAC,CAAA;IAEF,MAAA,OAAOsa,aAAa,CAAA;IACxB,KAAA;IACJ,GAAA;MAEOgE,qBAAqBA,CAAC9e,MAAY,EAAU;QAC/C,IAAI,IAAI,CAAC6e,kBAAkB,EAAE;UACzB,IAAI7e,MAAM,CAAC+B,UAAU,CAAC,IAAI,CAAC8c,kBAAkB,CAAC,EAAE;IAC5C,QAAA,OAAO,CAAC,IAAI,CAACA,kBAAkB,CAAC,CAAA;IACpC,OAAC,MAAM;IACH,QAAA,OAAO,EAAE,CAAA;IACb,OAAA;IACJ,KAAC,MAAM;UACH,MAAM/D,aAAa,GAAG,EAAE,CAAA;IAExB,MAAA,KAAK,MAAMnX,EAAE,IAAI,IAAI,CAACmX,aAAa,EAAE;IACjC,QAAA,IACIlc,MAAM,CAACC,SAAS,CAACC,cAAc,CAACC,IAAI,CAAC,IAAI,CAAC+b,aAAa,EAAEnX,EAAE,CAAC,EAC9D;cACE,MAAMnD,IAAI,GAAG,IAAI,CAACgF,UAAU,CAACjC,WAAW,CAACI,EAAE,CAAC,CAAA;cAC5C,IAAInD,IAAI,IAAIR,MAAM,CAAC+B,UAAU,CAACvB,IAAI,CAAC,EAAE;IACjCsa,YAAAA,aAAa,CAACna,IAAI,CAACH,IAAI,CAAC,CAAA;IAC5B,WAAA;IACJ,SAAA;IACJ,OAAA;IAEA,MAAA,OAAOsa,aAAa,CAAA;IACxB,KAAA;IACJ,GAAA;MAEOnL,cAAcA,CAACnP,IAAU,EAAW;IACvC,IAAA,IAAIA,IAAI,CAACmD,EAAE,IAAI,IAAI,EAAE;UACjB,OAAO,IAAI,CAACmX,aAAa,CAACiE,GAAG,CAACve,IAAI,CAACmD,EAAE,CAAC,CAAA;IAC1C,KAAC,MAAM,IAAI,IAAI,CAACkb,kBAAkB,EAAE;UAChC,OAAO,IAAI,CAACA,kBAAkB,CAAC5X,OAAO,KAAKzG,IAAI,CAACyG,OAAO,CAAA;IAC3D,KAAC,MAAM;IACH,MAAA,OAAO,KAAK,CAAA;IAChB,KAAA;IACJ,GAAA;IAEOiB,EAAAA,KAAKA,GAAS;IACjB,IAAA,IAAI,CAAC4S,aAAa,CAAC5S,KAAK,EAAE,CAAA;QAC1B,IAAI,CAAC2W,kBAAkB,GAAG,IAAI,CAAA;IAClC,GAAA;MAEO9D,mBAAmBA,CAACva,IAAU,EAAiC;IAAA,IAAA,IAA/B+D,eAAe,GAAAhF,SAAA,CAAAC,MAAA,GAAA,CAAA,IAAAD,SAAA,CAAA,CAAA,CAAA,KAAAE,SAAA,GAAAF,SAAA,CAAA,CAAA,CAAA,GAAG,KAAK,CAAA;IAC1D,IAAA,IAAIiB,IAAI,CAACmD,EAAE,IAAI,IAAI,EAAE;IACjB,MAAA,IACI,IAAI,CAACkb,kBAAkB,IACvBre,IAAI,CAACyG,OAAO,KAAK,IAAI,CAAC4X,kBAAkB,CAAC5X,OAAO,EAClD;YACE,IAAI,CAAC4X,kBAAkB,GAAG,IAAI,CAAA;IAClC,OAAA;IACJ,KAAC,MAAM;UACH,IAAI,CAAC/D,aAAa,CAAChX,MAAM,CAACtD,IAAI,CAACmD,EAAE,CAAC,CAAA;IAElC,MAAA,IAAIY,eAAe,EAAE;YACjB/D,IAAI,CAACc,OAAO,CAAC,MAAM;IACf,UAAA,IAAId,IAAI,CAACmD,EAAE,IAAI,IAAI,EAAE;gBACjB,IAAI,CAACmX,aAAa,CAAChX,MAAM,CAACtD,IAAI,CAACmD,EAAE,CAAC,CAAA;IACtC,WAAA;IACA,UAAA,OAAO,IAAI,CAAA;IACf,SAAC,CAAC,CAAA;IACN,OAAA;IACJ,KAAA;IACJ,GAAA;MAEOkX,cAAcA,CAACra,IAAU,EAAQ;IACpC,IAAA,IAAIA,IAAI,CAACmD,EAAE,IAAI,IAAI,EAAE;UACjB,IAAI,CAACmX,aAAa,CAACkE,GAAG,CAACxe,IAAI,CAACmD,EAAE,CAAC,CAAA;IACnC,KAAC,MAAM;UACH,IAAI,CAACkb,kBAAkB,GAAGre,IAAI,CAAA;IAClC,KAAA;IACJ,GAAA;IAEO0U,EAAAA,aAAaA,GAAY;IAC5B,IAAA,MAAM+J,aAAa,GAAG7P,QAAQ,CAAC6P,aAAa,CAAA;IAE5C,IAAA,OAAOxP,OAAO,CACVwP,aAAa,IACTA,aAAa,CAAC7B,OAAO,KAAK,MAAM,IAChC,IAAI,CAAC5X,UAAU,CAAC0Z,gBAAgB,CAACD,aAA4B,CACrE,CAAC,CAAA;IACL,GAAA;IACJ;;IClHO,MAAME,WAAW,CAAC;IAKrB9f,EAAAA,WAAWA,CAACmB,IAAU,EAAEgF,UAAwB,EAAE;IAC9C,IAAA,IAAI,CAACsQ,IAAI,CAACtV,IAAI,EAAEgF,UAAU,CAAC,CAAA;IAC/B,GAAA;IAEOsQ,EAAAA,IAAIA,CAACtV,IAAU,EAAEgF,UAAwB,EAAQ;QACpD,IAAI,CAAChF,IAAI,GAAGA,IAAI,CAAA;QAChB,IAAI,CAACgF,UAAU,GAAGA,UAAU,CAAA;IAE5B,IAAA,IAAI,CAAChF,IAAI,CAACyG,OAAO,EAAE;UACf,MAAMA,OAAO,GAAG,IAAI,CAACzB,UAAU,CAACyB,OAAO,CAACxD,GAAG,CAAC,CAAC,CAAC,CAAA;IAE9C,MAAA,IAAIwD,OAAO,EAAE;YACTzG,IAAI,CAACyG,OAAO,GAAGA,OAAO,CAAA;IAC1B,OAAA;IACJ,KAAA;QAEA,IAAIzG,IAAI,CAACyG,OAAO,EAAE;UACd,IAAI,CAAClB,QAAQ,GAAGC,MAAM,CAACxF,IAAI,CAACyG,OAAO,CAAC,CAAA;IACxC,KAAA;IACJ,GAAA;MAEOwC,WAAWA,CAAC/K,QAAgB,EAAY;IAC3C,IAAA,IAAI,IAAI,CAAC0gB,sBAAsB,CAAC1gB,QAAQ,CAAC,EAAE;IACvC,MAAA,OAAO,IAAI2gB,cAAc,CACrB,IAAI,CAACtZ,QAAQ,EACb,IAAI,CAACP,UAAU,CAAC2F,cAAc,EAClC,CAAC,CAAA;IACL,KAAC,MAAM;IACH,MAAA,OAAO,IAAImU,aAAa,CAAC,IAAI,CAAC9e,IAAI,EAAE,IAAI,CAACuF,QAAQ,EAAErH,QAAQ,CAAC,CAAA;IAChE,KAAA;IACJ,GAAA;MAEO6gB,MAAMA,CAACC,YAAqB,EAAQ;IACvC,IAAA,MAAMC,GAAG,GAAG,IAAI,CAACC,KAAK,EAAE,CAAA;IAExBD,IAAAA,GAAG,CAACtY,QAAQ,CAAC,iBAAiB,CAAC,CAAA;IAE/B,IAAA,MAAMwY,KAAK,GAAG,IAAI,CAACC,OAAO,EAAE,CAAA;IAC5BD,IAAAA,KAAK,CAAC3C,IAAI,CAAC,UAAU,EAAE,IAAI,CAACxX,UAAU,CAACW,OAAO,CAAC6K,QAAQ,IAAI,IAAI,CAAC,CAAA;IAChE2O,IAAAA,KAAK,CAAC3C,IAAI,CAAC,eAAe,EAAE,MAAM,CAAC,CAAA;IAEnC,IAAA,IAAIwC,YAAY,EAAE;IACdG,MAAAA,KAAK,CAACE,OAAO,CAAC,OAAO,CAAC,CAAA;IAC1B,KAAA;IACJ,GAAA;IAEOC,EAAAA,QAAQA,GAAS;IACpB,IAAA,MAAML,GAAG,GAAG,IAAI,CAACC,KAAK,EAAE,CAAA;IAExBD,IAAAA,GAAG,CAACpX,WAAW,CAAC,iBAAiB,CAAC,CAAA;IAElC,IAAA,MAAMsX,KAAK,GAAG,IAAI,CAACC,OAAO,EAAE,CAAA;IAC5BD,IAAAA,KAAK,CAACI,UAAU,CAAC,UAAU,CAAC,CAAA;IAC5BJ,IAAAA,KAAK,CAAC3C,IAAI,CAAC,eAAe,EAAE,OAAO,CAAC,CAAA;IAEpC2C,IAAAA,KAAK,CAACE,OAAO,CAAC,MAAM,CAAC,CAAA;IACzB,GAAA;IAEUG,EAAAA,KAAKA,GAAwB;IACnC,IAAA,OAAO,IAAI,CAACja,QAAQ,CAAChG,QAAQ,CAAC,UAAU,CAAC,CAAA;IAC7C,GAAA;IAEU6f,EAAAA,OAAOA,GAAwB;IACrC,IAAA,OAAO,IAAI,CAAC7Z,QAAQ,CACfhG,QAAQ,CAAC,iBAAiB,CAAC,CAC3B6U,IAAI,CAAC,mBAAmB,CAAC,CAAA;IAClC,GAAA;IAEU8K,EAAAA,KAAKA,GAAwB;QACnC,OAAO,IAAI,CAAC3Z,QAAQ,CAAA;IACxB,GAAA;MAEUqZ,sBAAsBA,CAAC1gB,QAAkB,EAAW;IAC1D,IAAA,OAAOA,QAAQ,KAAKX,QAAQ,CAACO,MAAM,CAAA;IACvC,GAAA;IACJ,CAAA;IAEO,MAAM2hB,aAAa,SAASd,WAAW,CAAC;MACpCe,IAAIA,CACPzO,UAAmC,EAG/B;IAAA,IAAA,IAFJ5H,KAAK,GAAAtK,SAAA,CAAAC,MAAA,GAAA,CAAA,IAAAD,SAAA,CAAA,CAAA,CAAA,KAAAE,SAAA,GAAAF,SAAA,CAAA,CAAA,CAAA,GAAG,IAAI,CAAA;IAAA,IAAA,IACZ4gB,cAA+B,GAAA5gB,SAAA,CAAAC,MAAA,GAAA,CAAA,IAAAD,SAAA,CAAA,CAAA,CAAA,KAAAE,SAAA,GAAAF,SAAA,CAAA,CAAA,CAAA,GAAG,MAAM,CAAA;IAExC,IAAA,IAAI,IAAI,CAACiB,IAAI,CAACkE,OAAO,EAAE;IACnB,MAAA,OAAA;IACJ,KAAA;IAEA,IAAA,IAAI,CAAClE,IAAI,CAACkE,OAAO,GAAG,IAAI,CAAA;IAExB,IAAA,MAAM0b,OAAO,GAAG,IAAI,CAACC,SAAS,EAAE,CAAA;IAChCD,IAAAA,OAAO,CAAC/X,WAAW,CAAC,eAAe,CAAC,CAAA;IACpC+X,IAAAA,OAAO,CAAC5S,IAAI,CAAC,EAAE,CAAC,CAAA;IAEhB,IAAA,MAAM8S,QAAQ,GAAGF,OAAO,CAAC3c,GAAG,CAAC,CAAC,CAAC,CAAA;IAE/B,IAAA,IAAI6c,QAAQ,EAAE;UACV,MAAMxS,iBAAiB,GACnB,IAAI,CAACtI,UAAU,CAAC+a,QAAQ,CAACzS,iBAAiB,CAAA;IAE9C,MAAA,IAAIA,iBAAiB,EAAE;IACnB,QAAA,MAAM0S,IAAI,GAAG1S,iBAAiB,CAAC2C,SAAS,CAAC,IAAI,CAAC,CAAA;IAC9C6P,QAAAA,QAAQ,CAACvR,WAAW,CAACyR,IAAI,CAAC,CAAA;IAC9B,OAAA;IACJ,KAAA;QAEA,MAAMC,MAAM,GAAGA,MAAY;IACvB,MAAA,MAAMhB,GAAG,GAAG,IAAI,CAACC,KAAK,EAAE,CAAA;IACxBD,MAAAA,GAAG,CAACpX,WAAW,CAAC,eAAe,CAAC,CAAA;IAEhC,MAAA,MAAMqY,UAAU,GAAG,IAAI,CAACd,OAAO,EAAE,CAAA;IACjCc,MAAAA,UAAU,CAAC1D,IAAI,CAAC,eAAe,EAAE,MAAM,CAAC,CAAA;IAExC,MAAA,IAAIvL,UAAU,EAAE;IACZA,QAAAA,UAAU,CAAC,IAAI,CAACjR,IAAI,CAAC,CAAA;IACzB,OAAA;IAEA,MAAA,IAAI,CAACgF,UAAU,CAACgF,aAAa,CAAC,WAAW,EAAE;YACvChK,IAAI,EAAE,IAAI,CAACA,IAAAA;IACf,OAAC,CAAC,CAAA;SACL,CAAA;IAED,IAAA,IAAIqJ,KAAK,EAAE;UACP,IAAI,CAACmW,KAAK,EAAE,CAACW,SAAS,CAACR,cAAc,EAAEM,MAAM,CAAC,CAAA;IAClD,KAAC,MAAM;IACH,MAAA,IAAI,CAACT,KAAK,EAAE,CAACY,IAAI,EAAE,CAAA;IACnBH,MAAAA,MAAM,EAAE,CAAA;IACZ,KAAA;IACJ,GAAA;IAEOI,EAAAA,KAAKA,GAGJ;IAAA,IAAA,IAFJhX,KAAK,GAAAtK,SAAA,CAAAC,MAAA,GAAA,CAAA,IAAAD,SAAA,CAAA,CAAA,CAAA,KAAAE,SAAA,GAAAF,SAAA,CAAA,CAAA,CAAA,GAAG,IAAI,CAAA;IAAA,IAAA,IACZ4gB,cAA2C,GAAA5gB,SAAA,CAAAC,MAAA,GAAA,CAAA,IAAAD,SAAA,CAAA,CAAA,CAAA,KAAAE,SAAA,GAAAF,SAAA,CAAA,CAAA,CAAA,GAAG,MAAM,CAAA;IAEpD,IAAA,IAAI,CAAC,IAAI,CAACiB,IAAI,CAACkE,OAAO,EAAE;IACpB,MAAA,OAAA;IACJ,KAAA;IAEA,IAAA,IAAI,CAAClE,IAAI,CAACkE,OAAO,GAAG,KAAK,CAAA;IAEzB,IAAA,MAAM0b,OAAO,GAAG,IAAI,CAACC,SAAS,EAAE,CAAA;IAChCD,IAAAA,OAAO,CAACjZ,QAAQ,CAAC,eAAe,CAAC,CAAA;IACjCiZ,IAAAA,OAAO,CAAC5S,IAAI,CAAC,EAAE,CAAC,CAAA;IAEhB,IAAA,MAAM8S,QAAQ,GAAGF,OAAO,CAAC3c,GAAG,CAAC,CAAC,CAAC,CAAA;IAE/B,IAAA,IAAI6c,QAAQ,EAAE;UACV,MAAMrS,iBAAiB,GACnB,IAAI,CAACzI,UAAU,CAAC+a,QAAQ,CAACtS,iBAAiB,CAAA;IAE9C,MAAA,IAAIA,iBAAiB,EAAE;IACnB,QAAA,MAAMuS,IAAI,GAAGvS,iBAAiB,CAACwC,SAAS,CAAC,IAAI,CAAC,CAAA;IAC9C6P,QAAAA,QAAQ,CAACvR,WAAW,CAACyR,IAAI,CAAC,CAAA;IAC9B,OAAA;IACJ,KAAA;QAEA,MAAMM,OAAO,GAAGA,MAAY;IACxB,MAAA,MAAMrB,GAAG,GAAG,IAAI,CAACC,KAAK,EAAE,CAAA;IACxBD,MAAAA,GAAG,CAACtY,QAAQ,CAAC,eAAe,CAAC,CAAA;IAE7B,MAAA,MAAMuZ,UAAU,GAAG,IAAI,CAACd,OAAO,EAAE,CAAA;IACjCc,MAAAA,UAAU,CAAC1D,IAAI,CAAC,eAAe,EAAE,OAAO,CAAC,CAAA;IAEzC,MAAA,IAAI,CAACxX,UAAU,CAACgF,aAAa,CAAC,YAAY,EAAE;YACxChK,IAAI,EAAE,IAAI,CAACA,IAAAA;IACf,OAAC,CAAC,CAAA;SACL,CAAA;IAED,IAAA,IAAIqJ,KAAK,EAAE;UACP,IAAI,CAACmW,KAAK,EAAE,CAACe,OAAO,CAACZ,cAAc,EAAEW,OAAO,CAAC,CAAA;IACjD,KAAC,MAAM;IACH,MAAA,IAAI,CAACd,KAAK,EAAE,CAACgB,IAAI,EAAE,CAAA;IACnBF,MAAAA,OAAO,EAAE,CAAA;IACb,KAAA;IACJ,GAAA;MAEU1B,sBAAsBA,CAAC1gB,QAAkB,EAAW;QAC1D,OAAO,CAAC,IAAI,CAAC8B,IAAI,CAACkE,OAAO,IAAIhG,QAAQ,KAAKX,QAAQ,CAACO,MAAM,CAAA;IAC7D,GAAA;IAEQ+hB,EAAAA,SAASA,GAAW;IACxB,IAAA,OAAO,IAAI,CAACta,QAAQ,CACfhG,QAAQ,CAAC,iBAAiB,CAAC,CAC3B6U,IAAI,CAAC,kBAAkB,CAAC,CAAA;IACjC,GAAA;IACJ,CAAA;IAEO,MAAMyK,cAAc,CAAqB;IAG5ChgB,EAAAA,WAAWA,CAAC0G,QAAyB,EAAE4W,UAAkB,EAAE;IACvD,IAAA,MAAMsE,IAAI,GAAGlb,QAAQ,CAAChG,QAAQ,CAAC,iBAAiB,CAAC,CAAA;QAEjD,MAAMmhB,OAAO,GAAGnb,QAAQ,CAACkF,KAAK,EAAE,IAAI,CAAC,CAAA;IACrC,IAAA,MAAMA,KAAK,GAAG6B,IAAI,CAAC0R,GAAG,CAAC0C,OAAO,GAAGvE,UAAU,GAAG,CAAC,EAAE,CAAC,CAAC,CAAA;QAEnD,MAAML,QAAQ,GAAG2E,IAAI,CAACE,WAAW,EAAE,IAAI,CAAC,CAAA;QACxC,MAAMjW,MAAM,GAAG4B,IAAI,CAAC0R,GAAG,CAAClC,QAAQ,GAAG,CAAC,EAAE,CAAC,CAAC,CAAA;IAExC,IAAA,IAAI,CAAC8E,KAAK,GAAGpb,MAAM,CAAC,qCAAqC,CAAC,CAAA;IAC1Dib,IAAAA,IAAI,CAAC7d,MAAM,CAAC,IAAI,CAACge,KAAK,CAAC,CAAA;IAEvB,IAAA,IAAI,CAACA,KAAK,CAAC3T,GAAG,CAAC;UAAExC,KAAK;IAAEC,MAAAA,MAAAA;IAAO,KAAC,CAAC,CAAA;IACrC,GAAA;IAEO/H,EAAAA,MAAMA,GAAS;IAClB,IAAA,IAAI,CAACie,KAAK,CAACje,MAAM,EAAE,CAAA;IACvB,GAAA;IACJ,CAAA;IAEA,MAAMmc,aAAa,CAAqB;IAKpCjgB,EAAAA,WAAWA,CAACmB,IAAU,EAAEuF,QAAyB,EAAErH,QAAkB,EAAE;QACnE,IAAI,CAACqH,QAAQ,GAAGA,QAAQ,CAAA;QAExB,IAAI,CAACvF,IAAI,GAAGA,IAAI,CAAA;IAChB,IAAA,IAAI,CAAC6gB,MAAM,GAAGrb,MAAM,CACf,CAAA;AACb,gEAAA,CACQ,CAAC,CAAA;IAED,IAAA,IAAItH,QAAQ,KAAKX,QAAQ,CAACK,KAAK,EAAE;UAC7B,IAAI,CAACkjB,SAAS,EAAE,CAAA;IACpB,KAAC,MAAM,IAAI5iB,QAAQ,KAAKX,QAAQ,CAACG,MAAM,EAAE;UACrC,IAAI,CAACqjB,UAAU,EAAE,CAAA;IACrB,KAAC,MAAM,IAAI7iB,QAAQ,KAAKX,QAAQ,CAACO,MAAM,EAAE;UACrC,IAAIkC,IAAI,CAACa,QAAQ,EAAE,IAAIb,IAAI,CAACkE,OAAO,EAAE;YACjC,IAAI,CAAC8c,oBAAoB,EAAE,CAAA;IAC/B,OAAC,MAAM;YACH,IAAI,CAACC,UAAU,EAAE,CAAA;IACrB,OAAA;IACJ,KAAA;IACJ,GAAA;IAEOte,EAAAA,MAAMA,GAAS;IAClB,IAAA,IAAI,CAACke,MAAM,CAACle,MAAM,EAAE,CAAA;IACxB,GAAA;IAEOme,EAAAA,SAASA,GAAS;QACrB,IAAI,CAACvb,QAAQ,CAAC5H,KAAK,CAAC,IAAI,CAACkjB,MAAM,CAAC,CAAA;IACpC,GAAA;IAEOE,EAAAA,UAAUA,GAAS;QACtB,IAAI,CAACxb,QAAQ,CAAC9H,MAAM,CAAC,IAAI,CAACojB,MAAM,CAAC,CAAA;IACrC,GAAA;IAEOG,EAAAA,oBAAoBA,GAAS;QAChC,MAAME,YAAY,GAAG,IAAI,CAAClhB,IAAI,CAACT,QAAQ,CAAC,CAAC,CAAC,EAAEkH,OAAO,CAAA;IAEnD,IAAA,IAAIya,YAAY,EAAE;UACd1b,MAAM,CAAC0b,YAAY,CAAC,CAACzjB,MAAM,CAAC,IAAI,CAACojB,MAAM,CAAC,CAAA;IAC5C,KAAA;IACJ,GAAA;IAEOI,EAAAA,UAAUA,GAAS;QACtB,IAAI,CAAC1b,QAAQ,CAAC5H,KAAK,CAAC,IAAI,CAACkjB,MAAM,CAAC,CAAA;IAChC,IAAA,IAAI,CAACA,MAAM,CAACla,QAAQ,CAAC,eAAe,CAAC,CAAA;IACzC,GAAA;IACJ;;ICrPA,MAAMwa,mBAAmB,GAAG,yBAAyB,CAAA;IACrD,MAAMC,cAAc,GAAG,sBAAsB,CAAA;IAEtC,MAAMC,YAAY,SAAS7K,WAAW,CAAgB;IACzD,EAAA,OAAiBJ,QAAQ,GAAkB;IACvCuJ,IAAAA,cAAc,EAAE,MAAM;IACtBjZ,IAAAA,UAAU,EAAE,IAAI;IAChB4a,IAAAA,QAAQ,EAAE,KAAK;IAAE;IACjBpR,IAAAA,UAAU,EAAE,IAAI;IAChB;IACA;IACAxC,IAAAA,UAAU,EAAEzO,SAAS;IACrBP,IAAAA,IAAI,EAAEO,SAAS;IACf0T,IAAAA,UAAU,EAAE1T,SAAS;IACrBsiB,IAAAA,OAAO,EAAEtiB,SAAS;IAClB0P,IAAAA,WAAW,EAAE,KAAK;IAClB0E,IAAAA,eAAe,EAAE,IAAI;IACrBlU,IAAAA,SAAS,EAAEP,IAAI;IACfmH,IAAAA,SAAS,EAAE9G,SAAS;IAAE;IACtBsJ,IAAAA,WAAW,EAAEtJ,SAAS;IAAE;IACxBuiB,IAAAA,eAAe,EAAEviB,SAAS;IAC1BuQ,IAAAA,UAAU,EAAEvQ,SAAS;IACrBqI,IAAAA,UAAU,EAAErI,SAAS;IACrB6I,IAAAA,UAAU,EAAE7I,SAAS;IACrBgb,IAAAA,qBAAqB,EAAEhb,SAAS;IAChC2G,IAAAA,cAAc,EAAE3G,SAAS;IACzB4S,IAAAA,YAAY,EAAE5S,SAAS;IACvB+S,IAAAA,SAAS,EAAE/S,SAAS;IACpBuZ,IAAAA,qBAAqB,EAAEvZ,SAAS;IAChCuO,IAAAA,UAAU,EAAE,UAAU;IACtBlE,IAAAA,eAAe,EAAE,GAAG;IAAE;IACtB;IACA;IACAoF,IAAAA,GAAG,EAAEzP,SAAS;IAAE;IAChBmZ,IAAAA,SAAS,EAAE,KAAK;IAAE;IAClBqJ,IAAAA,UAAU,EAAE,IAAI;IAChBpS,IAAAA,eAAe,EAAE,KAAK;IACtBhG,IAAAA,KAAK,EAAE,IAAI;IAAE;IACbqY,IAAAA,aAAa,EAAE,GAAG;IAAE;IACpBlR,IAAAA,QAAQ,EAAE,CAAC;IACXmR,IAAAA,cAAc,EAAE,IAAA;OACnB,CAAA;MAcMC,MAAMA,CAAC5hB,IAAU,EAA6C;IAAA,IAAA,IAA3C6hB,UAA0B,GAAA9iB,SAAA,CAAAC,MAAA,GAAA,CAAA,IAAAD,SAAA,CAAA,CAAA,CAAA,KAAAE,SAAA,GAAAF,SAAA,CAAA,CAAA,CAAA,GAAG,IAAI,CAAA;QACvD,IAAI,CAACiB,IAAI,EAAE;UACP,MAAM8hB,KAAK,CAACX,mBAAmB,CAAC,CAAA;IACpC,KAAA;QAEA,MAAM9X,KAAK,GAAGwY,UAAU,IAAI,IAAI,CAAClc,OAAO,CAAC0D,KAAK,CAAA;QAE9C,IAAIrJ,IAAI,CAACkE,OAAO,EAAE;IACd,MAAA,IAAI,CAAC+P,SAAS,CAACjU,IAAI,EAAEqJ,KAAK,CAAC,CAAA;IAC/B,KAAC,MAAM;IACH,MAAA,IAAI,CAAC0K,QAAQ,CAAC/T,IAAI,EAAEqJ,KAAK,CAAC,CAAA;IAC9B,KAAA;QAEA,OAAO,IAAI,CAAC5C,OAAO,CAAA;IACvB,GAAA;IAEOsb,EAAAA,OAAOA,GAAS;QACnB,OAAO,IAAI,CAACpiB,IAAI,CAAA;IACpB,GAAA;IAEOiU,EAAAA,UAAUA,CACb5T,IAAiB,EACjBgiB,YAAgC,EAC1B;IACN,IAAA,IAAI,CAACC,YAAY,CAACjiB,IAAI,EAAEgiB,YAAY,CAAC,CAAA;QACrC,OAAO,IAAI,CAACvb,OAAO,CAAA;IACvB,GAAA;IAEO+N,EAAAA,eAAeA,GAAiB;IACnC,IAAA,OAAO,IAAI,CAACtF,iBAAiB,CAACsF,eAAe,EAAE,CAAA;IACnD,GAAA;IAEO0N,EAAAA,MAAMA,GAAW;QACpB,OAAOrP,IAAI,CAACyF,SAAS,CAAC,IAAI,CAAC3Y,IAAI,CAAC6B,OAAO,EAAE,CAAC,CAAA;IAC9C,GAAA;IAEOiQ,EAAAA,QAAQA,CAAC/S,IAAgB,EAAEsS,UAAuB,EAAU;IAC/D,IAAA,IAAI,CAACmR,UAAU,CAACzjB,IAAI,EAAEsS,UAAU,CAAC,CAAA;QACjC,OAAO,IAAI,CAACvK,OAAO,CAAA;IACvB,GAAA;;IAEA;IACJ;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEW2b,EAAAA,eAAeA,CAClBC,MAA4B,EAC5BC,MAA4C,EAC5CC,MAA8B,EACxB;IACN,IAAA,IAAI,OAAOF,MAAM,KAAK,QAAQ,EAAE;IAC5B;UACA,IAAI,CAACG,iBAAiB,CAClBH,MAAM,EACNC,MAAM,EACNC,MAAM,IAAI,IACd,CAAC,CAAA;IACL,KAAC,MAAM;IACH;UACA,IAAI,CAACC,iBAAiB,CAClB,IAAI,EACJH,MAAM,EACNC,MACJ,CAAC,CAAA;IACL,KAAA;QAEA,OAAO,IAAI,CAAC7b,OAAO,CAAA;IACvB,GAAA;MAEOgc,MAAMA,CAACxR,UAAwC,EAAU;QAC5D,IAAI,CAACuR,iBAAiB,CAAC,IAAI,EAAE,IAAI,EAAEvR,UAAU,CAAC,CAAA;QAC9C,OAAO,IAAI,CAACxK,OAAO,CAAA;IACvB,GAAA;IAEON,EAAAA,OAAOA,GAAW;IACrB,IAAA,IAAI,CAAC2D,gBAAgB,CAAC,IAAI,CAAC,CAAA;QAC3B,OAAO,IAAI,CAACrD,OAAO,CAAA;IACvB,GAAA;MAEO1D,WAAWA,CAACC,MAAc,EAAe;IAC5C,IAAA,OAAO,IAAI,CAACrD,IAAI,CAACoD,WAAW,CAACC,MAAM,CAAC,CAAA;IACxC,GAAA;MAEOhB,aAAaA,CAAC7D,IAAY,EAAe;IAC5C,IAAA,OAAO,IAAI,CAACwB,IAAI,CAACqC,aAAa,CAAC7D,IAAI,CAAC,CAAA;IACxC,GAAA;MAEO+D,sBAAsBA,CAAC/D,IAAY,EAAQ;IAC9C,IAAA,OAAO,IAAI,CAACwB,IAAI,CAACuC,sBAAsB,CAAC/D,IAAI,CAAC,CAAA;IACjD,GAAA;IAEOwF,EAAAA,kBAAkBA,CAAC/D,GAAW,EAAEC,KAAc,EAAU;QAC3D,OAAO,IAAI,CAACF,IAAI,CAACgE,kBAAkB,CAAC/D,GAAG,EAAEC,KAAK,CAAC,CAAA;IACnD,GAAA;MAEO6iB,oBAAoBA,CACvBjc,OAA0C,EAC/B;QACX,OAAO,IAAI,CAACkc,OAAO,CAACnd,MAAM,CAACiB,OAAO,CAAC,CAAC,CAAA;IACxC,GAAA;MAEOxE,iBAAiBA,CAAClB,QAAiC,EAAe;IACrE,IAAA,OAAO,IAAI,CAACpB,IAAI,CAACsC,iBAAiB,CAAClB,QAAQ,CAAC,CAAA;IAChD,GAAA;IAEOgT,EAAAA,QAAQA,CACX/T,IAAU,EACVqiB,MAAmC,EACnCC,MAAyB,EACnB;QACN,IAAI,CAACtiB,IAAI,EAAE;UACP,MAAM8hB,KAAK,CAACX,mBAAmB,CAAC,CAAA;IACpC,KAAA;QAEA,MAAMyB,WAAW,GAAGA,MAA0C;IAC1D,MAAA,IAAI3R,UAAmC,CAAA;IACvC,MAAA,IAAI5H,KAAqB,CAAA;IAEzB,MAAA,IAAI8D,UAAU,CAACkV,MAAM,CAAC,EAAE;IACpBpR,QAAAA,UAAU,GAAGoR,MAAiC,CAAA;IAC9ChZ,QAAAA,KAAK,GAAG,IAAI,CAAA;IAChB,OAAC,MAAM;IACHA,QAAAA,KAAK,GAAGgZ,MAAiB,CAAA;IACzBpR,QAAAA,UAAU,GAAGqR,MAA0B,CAAA;IAC3C,OAAA;UAEA,IAAIjZ,KAAK,IAAI,IAAI,EAAE;IACfA,QAAAA,KAAK,GAAG,IAAI,CAAC1D,OAAO,CAAC0D,KAAK,IAAI,KAAK,CAAA;IACvC,OAAA;IAEA,MAAA,OAAO,CAACA,KAAK,EAAE4H,UAAU,CAAC,CAAA;SAC7B,CAAA;QAED,MAAM,CAAC5H,KAAK,EAAE4H,UAAU,CAAC,GAAG2R,WAAW,EAAE,CAAA;QAEzC,IAAI,CAACxZ,SAAS,CAACpJ,IAAI,EAAEqJ,KAAK,EAAE4H,UAAU,CAAC,CAAA;QACvC,OAAO,IAAI,CAACxK,OAAO,CAAA;IACvB,GAAA;IAEOwN,EAAAA,SAASA,CAACjU,IAAU,EAAE6hB,UAA2B,EAAU;QAC9D,IAAI,CAAC7hB,IAAI,EAAE;UACP,MAAM8hB,KAAK,CAACX,mBAAmB,CAAC,CAAA;IACpC,KAAA;QAEA,MAAM9X,KAAK,GAAGwY,UAAU,IAAI,IAAI,CAAClc,OAAO,CAAC0D,KAAK,CAAA;QAE9C,IAAIrJ,IAAI,CAACa,QAAQ,EAAE,IAAIb,IAAI,CAACZ,aAAa,EAAE;IACvC,MAAA,IAAIqgB,aAAa,CAACzf,IAAI,EAAE,IAAI,CAAC,CAACqgB,KAAK,CAC/BhX,KAAK,EACL,IAAI,CAAC1D,OAAO,CAACga,cACjB,CAAC,CAAA;UAED,IAAI,CAACvH,SAAS,EAAE,CAAA;IACpB,KAAA;QAEA,OAAO,IAAI,CAAC3R,OAAO,CAAA;IACvB,GAAA;IAEOtB,EAAAA,UAAUA,GAAY;IACzB,IAAA,OAAO,IAAI,CAACiY,UAAU,CAACjY,UAAU,CAAA;IACrC,GAAA;IAEO8X,EAAAA,eAAeA,GAAW;IAC7B,IAAA,IAAI,CAACG,UAAU,CAACjX,OAAO,EAAE,CAAA;QACzB,OAAO,IAAI,CAACM,OAAO,CAAA;IACvB,GAAA;IAEOoc,EAAAA,YAAYA,CACfC,WAAqB,EACrBC,YAAkB,EACP;IACX,IAAA,MAAMC,OAAO,GAAGD,YAAY,CAAC3gB,QAAQ,CAAC0gB,WAAW,CAAC,CAAA;IAElD,IAAA,IAAIE,OAAO,EAAE;IACT,MAAA,IAAI,CAAClZ,gBAAgB,CAACiZ,YAAY,CAACvjB,MAAM,CAAC,CAAA;IAC9C,KAAA;IAEA,IAAA,OAAOwjB,OAAO,CAAA;IAClB,GAAA;IAEOC,EAAAA,aAAaA,CAChBH,WAAqB,EACrBC,YAAkB,EACP;QACX,IAAI,CAACA,YAAY,EAAE;IACf,MAAA,MAAMjB,KAAK,CAACV,cAAc,GAAG,cAAc,CAAC,CAAA;IAChD,KAAA;IAEA,IAAA,MAAM4B,OAAO,GAAGD,YAAY,CAACxgB,SAAS,CAACugB,WAAW,CAAC,CAAA;IAEnD,IAAA,IAAIE,OAAO,EAAE;IACT,MAAA,IAAI,CAAClZ,gBAAgB,CAACiZ,YAAY,CAACvjB,MAAM,CAAC,CAAA;IAC9C,KAAA;IAEA,IAAA,OAAOwjB,OAAO,CAAA;IAClB,GAAA;IAEOE,EAAAA,aAAaA,CAChBJ,WAAqB,EACrBC,YAAkB,EACP;QACX,IAAI,CAACA,YAAY,EAAE;IACf,MAAA,MAAMjB,KAAK,CAACV,cAAc,GAAG,cAAc,CAAC,CAAA;IAChD,KAAA;IAEA,IAAA,MAAM4B,OAAO,GAAGD,YAAY,CAACvgB,SAAS,CAACsgB,WAAW,CAAC,CAAA;IAEnD,IAAA,IAAIE,OAAO,EAAE;IACT,MAAA,IAAI,CAAClZ,gBAAgB,CAACkZ,OAAO,CAACxjB,MAAM,CAAC,CAAA;IACzC,KAAA;IAEA,IAAA,OAAOwjB,OAAO,CAAA;IAClB,GAAA;MAEOG,UAAUA,CAACnjB,IAAU,EAAU;QAClC,IAAI,CAACA,IAAI,EAAE;UACP,MAAM8hB,KAAK,CAACX,mBAAmB,CAAC,CAAA;IACpC,KAAA;IAEA,IAAA,IAAI,CAACnhB,IAAI,CAACR,MAAM,EAAE;UACd,MAAMsiB,KAAK,CAAC,oBAAoB,CAAC,CAAA;IACrC,KAAA;QAEA,IAAI,CAAC5S,iBAAiB,CAACqL,mBAAmB,CAACva,IAAI,EAAE,IAAI,CAAC,CAAC;;IAEvD,IAAA,MAAMR,MAAM,GAAGQ,IAAI,CAACR,MAAM,CAAA;QAC1BQ,IAAI,CAAC2C,MAAM,EAAE,CAAA;IACb,IAAA,IAAI,CAACmH,gBAAgB,CAACtK,MAAM,CAAC,CAAA;QAE7B,OAAO,IAAI,CAACiH,OAAO,CAAA;IACvB,GAAA;IAEO2c,EAAAA,UAAUA,CAACN,WAAqB,EAAEO,eAAsB,EAAQ;IACnE,IAAA,MAAMrS,UAAU,GAAGqS,eAAe,IAAI,IAAI,CAAC1jB,IAAI,CAAA;IAE/C,IAAA,MAAMK,IAAI,GAAGgR,UAAU,CAACpO,MAAM,CAACkgB,WAAW,CAAC,CAAA;IAE3C,IAAA,IAAI,CAAChZ,gBAAgB,CAACkH,UAAU,CAAC,CAAA;IAEjC,IAAA,OAAOhR,IAAI,CAAA;IACf,GAAA;IAEOsjB,EAAAA,WAAWA,CAACR,WAAqB,EAAEO,eAAsB,EAAQ;IACpE,IAAA,MAAMrS,UAAU,GAAGqS,eAAe,IAAI,IAAI,CAAC1jB,IAAI,CAAA;IAE/C,IAAA,MAAMK,IAAI,GAAGgR,UAAU,CAACnO,OAAO,CAACigB,WAAW,CAAC,CAAA;IAE5C,IAAA,IAAI,CAAChZ,gBAAgB,CAACkH,UAAU,CAAC,CAAA;IAEjC,IAAA,OAAOhR,IAAI,CAAA;IACf,GAAA;IAEOujB,EAAAA,UAAUA,CAACvjB,IAAU,EAAEtB,IAAc,EAAU;QAClD,IAAI,CAACsB,IAAI,EAAE;UACP,MAAM8hB,KAAK,CAACX,mBAAmB,CAAC,CAAA;IACpC,KAAA;IAEA,IAAA,MAAMqC,WAAW,GACb,OAAO9kB,IAAI,KAAK,QAAQ,IAAIA,IAAI,CAACyE,EAAE,IAAIzE,IAAI,CAACyE,EAAE,KAAKnD,IAAI,CAACmD,EAAE,CAAA;IAE9D,IAAA,IAAIqgB,WAAW,EAAE;IACb,MAAA,IAAI,CAAC7jB,IAAI,CAAC0D,mBAAmB,CAACrD,IAAI,CAAC,CAAA;IACvC,KAAA;IAEAA,IAAAA,IAAI,CAACV,OAAO,CAACZ,IAAI,CAAC,CAAA;IAElB,IAAA,IAAI8kB,WAAW,EAAE;IACb,MAAA,IAAI,CAAC7jB,IAAI,CAACuD,cAAc,CAAClD,IAAI,CAAC,CAAA;IAClC,KAAA;IAEA,IAAA,IACI,OAAOtB,IAAI,KAAK,QAAQ,IACxBA,IAAI,CAAC,UAAU,CAAC,IAChBA,IAAI,CAAC,UAAU,CAAC,YAAYC,KAAK,EACnC;UACEqB,IAAI,CAACD,cAAc,EAAE,CAAA;IAErB,MAAA,IAAIrB,IAAI,CAACa,QAAQ,CAACP,MAAM,EAAE;IACtBgB,QAAAA,IAAI,CAACF,YAAY,CAACpB,IAAI,CAACa,QAAkB,CAAC,CAAA;IAC9C,OAAA;IACJ,KAAA;IAEA,IAAA,IAAI,CAACuK,gBAAgB,CAAC9J,IAAI,CAAC,CAAA;QAE3B,OAAO,IAAI,CAACyG,OAAO,CAAA;IACvB,GAAA;MAEQgd,uBAAuBA,CAACC,OAAa,EAAW;IACpD,IAAA,MAAM/P,YAAY,GAAG,IAAI,CAACa,eAAe,EAAE,CAAA;QAE3C,IAAI,CAACb,YAAY,EAAE;IACf,MAAA,OAAO,KAAK,CAAA;IAChB,KAAC,MAAM;UACH,OAAO+P,OAAO,KAAK/P,YAAY,IAAI+P,OAAO,CAACniB,UAAU,CAACoS,YAAY,CAAC,CAAA;IACvE,KAAA;IACJ,GAAA;IAEOvS,EAAAA,QAAQA,CAACpB,IAAU,EAAEsB,UAAgB,EAAEpD,QAAgB,EAAU;QACpE,IAAI,CAAC8B,IAAI,EAAE;UACP,MAAM8hB,KAAK,CAACX,mBAAmB,CAAC,CAAA;IACpC,KAAA;QAEA,IAAI,CAAC7f,UAAU,EAAE;IACb,MAAA,MAAMwgB,KAAK,CAACV,cAAc,GAAG,YAAY,CAAC,CAAA;IAC9C,KAAA;IAEA,IAAA,MAAMuC,aAAa,GAAGnlB,WAAW,CAACN,QAAQ,CAAC,CAAA;QAE3C,IAAIylB,aAAa,KAAK1kB,SAAS,EAAE;UAC7B,IAAI,CAACU,IAAI,CAACyB,QAAQ,CAACpB,IAAI,EAAEsB,UAAU,EAAEqiB,aAAa,CAAC,CAAA;IACnD,MAAA,IAAI,CAAC7Z,gBAAgB,CAAC,IAAI,CAAC,CAAA;IAC/B,KAAA;QAEA,OAAO,IAAI,CAACrD,OAAO,CAAA;IACvB,GAAA;IAEOoS,EAAAA,mBAAmBA,GAAsB;IAC5C,IAAA,OAAO,IAAI,CAAC+K,gBAAgB,CAAC/K,mBAAmB,EAAE,CAAA;IACtD,GAAA;IAEOwB,EAAAA,cAAcA,CAACra,IAAU,EAAEgf,YAAsB,EAAU;QAC9D,IAAI,CAAChf,IAAI,EAAE;UACP,MAAM8hB,KAAK,CAACX,mBAAmB,CAAC,CAAA;IACpC,KAAA;IAEA,IAAA,IAAI,CAACjS,iBAAiB,CAACmL,cAAc,CAACra,IAAI,CAAC,CAAA;IAE3C,IAAA,IAAI,CAACgI,sBAAsB,CAAChI,IAAI,CAAC,CAAC+e,MAAM,CACpCC,YAAY,KAAK/f,SAAS,GAAG,IAAI,GAAG+f,YACxC,CAAC,CAAA;QAED,IAAI,CAAC5G,SAAS,EAAE,CAAA;QAEhB,OAAO,IAAI,CAAC3R,OAAO,CAAA;IACvB,GAAA;IAEO4S,EAAAA,gBAAgBA,GAAW;IAC9B,IAAA,OAAO,IAAI,CAACnK,iBAAiB,CAACmK,gBAAgB,EAAE,CAAA;IACpD,GAAA;MAEOlK,cAAcA,CAACnP,IAAU,EAAW;QACvC,IAAI,CAACA,IAAI,EAAE;UACP,MAAM8hB,KAAK,CAACX,mBAAmB,CAAC,CAAA;IACpC,KAAA;IAEA,IAAA,OAAO,IAAI,CAACjS,iBAAiB,CAACC,cAAc,CAACnP,IAAI,CAAC,CAAA;IACtD,GAAA;MAEOua,mBAAmBA,CAACva,IAAU,EAAU;QAC3C,IAAI,CAACA,IAAI,EAAE;UACP,MAAM8hB,KAAK,CAACX,mBAAmB,CAAC,CAAA;IACpC,KAAA;IAEA,IAAA,IAAI,CAACjS,iBAAiB,CAACqL,mBAAmB,CAACva,IAAI,CAAC,CAAA;QAEhD,IAAI,CAACgI,sBAAsB,CAAChI,IAAI,CAAC,CAACsf,QAAQ,EAAE,CAAA;QAC5C,IAAI,CAAClH,SAAS,EAAE,CAAA;QAEhB,OAAO,IAAI,CAAC3R,OAAO,CAAA;IACvB,GAAA;MAEO4N,YAAYA,CAACrU,IAAU,EAAU;QACpC,IAAI,CAACA,IAAI,EAAE;UACP,MAAM8hB,KAAK,CAACX,mBAAmB,CAAC,CAAA;IACpC,KAAA;QAEA,MAAM0C,UAAU,GAAGre,MAAM,CAACxF,IAAI,CAACyG,OAAO,CAAC,CAACL,MAAM,EAAE,CAAA;QAChD,MAAM0d,OAAO,GAAGD,UAAU,GAAGA,UAAU,CAACvd,GAAG,GAAG,CAAC,CAAA;QAE/C,MAAMyd,UAAU,GAAG,IAAI,CAAC7S,GAAG,CAAC9K,MAAM,EAAE,CAAA;QACpC,MAAMqV,OAAO,GAAGsI,UAAU,GAAGA,UAAU,CAACzd,GAAG,GAAG,CAAC,CAAA;IAE/C,IAAA,MAAMA,GAAG,GAAGwd,OAAO,GAAGrI,OAAO,CAAA;IAE7B,IAAA,IAAI,CAACvH,aAAa,CAACoH,SAAS,CAAChV,GAAG,CAAC,CAAA;QAEjC,OAAO,IAAI,CAACG,OAAO,CAAA;IACvB,GAAA;IAEO8R,EAAAA,QAAQA,GAAsB;IACjC,IAAA,OAAO,IAAI,CAACqL,gBAAgB,CAACrL,QAAQ,EAAE,CAAA;IAC3C,GAAA;MAEOyL,QAAQA,CAAC3L,KAAiB,EAAU;IACvC,IAAA,IAAI,CAACuL,gBAAgB,CAACpK,eAAe,CAACnB,KAAK,CAAC,CAAA;IAC5C,IAAA,IAAI,CAACvO,gBAAgB,CAAC,IAAI,CAAC,CAAA;QAE3B,OAAO,IAAI,CAACrD,OAAO,CAAA;IACvB,GAAA;IAEOwd,EAAAA,SAASA,CAACC,MAAc,EAAErkB,KAAc,EAAU;IACpD,IAAA,IAAI,CAAC8F,OAAO,CAAwCue,MAAM,CAAC,GAAGrkB,KAAK,CAAA;QACpE,OAAO,IAAI,CAAC4G,OAAO,CAAA;IACvB,GAAA;IAEOiN,EAAAA,QAAQA,GAAW;IACtB,IAAA,MAAMC,YAAY,GAAG,IAAI,CAACa,eAAe,EAAE,CAAA;IAC3C,IAAA,IAAIb,YAAY,EAAE;IACd,MAAA,IAAI,CAACwQ,UAAU,CAACzQ,QAAQ,CAACC,YAAY,CAAC,CAAA;IAC1C,KAAA;QAEA,OAAO,IAAI,CAAClN,OAAO,CAAA;IACvB,GAAA;IAEOoN,EAAAA,MAAMA,GAAW;IACpB,IAAA,MAAMF,YAAY,GAAG,IAAI,CAACa,eAAe,EAAE,CAAA;IAC3C,IAAA,IAAIb,YAAY,EAAE;IACd,MAAA,IAAI,CAACwQ,UAAU,CAACtQ,MAAM,CAACF,YAAY,CAAC,CAAA;IACxC,KAAA;QAEA,OAAO,IAAI,CAAClN,OAAO,CAAA;IACvB,GAAA;IAEO2d,EAAAA,UAAUA,GAAW;IACxB,IAAA,OAAOC,OAAW,CAAA;IACtB,GAAA;IAEOra,EAAAA,aAAaA,CAChBsa,SAAiB,EACjBC,MAAgC,EACpB;QACZ,MAAMxa,KAAK,GAAGvE,MAAM,CAACgf,KAAK,CAACF,SAAS,EAAEC,MAAM,CAAC,CAAA;IAC7C,IAAA,IAAI,CAAC9d,OAAO,CAAC4Y,OAAO,CAACtV,KAAK,CAAC,CAAA;IAC3B,IAAA,OAAOA,KAAK,CAAA;IAChB,GAAA;MAEOX,SAASA,CACZpJ,IAAU,EAGN;IAAA,IAAA,IAFJqJ,KAAK,GAAAtK,SAAA,CAAAC,MAAA,GAAA,CAAA,IAAAD,SAAA,CAAA,CAAA,CAAA,KAAAE,SAAA,GAAAF,SAAA,CAAA,CAAA,CAAA,GAAG,IAAI,CAAA;QAAA,IACZkS,UAAmC,GAAAlS,SAAA,CAAAC,MAAA,GAAAD,CAAAA,GAAAA,SAAA,MAAAE,SAAA,CAAA;QAEnC,MAAMwlB,UAAU,GAAGA,CACfC,KAAW,EACXC,MAAe,EACfC,WAAoC,KAC7B;UACP,MAAMC,aAAa,GAAG,IAAIpF,aAAa,CAACiF,KAAK,EAAE,IAAI,CAAC,CAAA;IACpDG,MAAAA,aAAa,CAACnF,IAAI,CACdkF,WAAW,EACXD,MAAM,EACN,IAAI,CAAChf,OAAO,CAACga,cACjB,CAAC,CAAA;SACJ,CAAA;QAED,IAAI3f,IAAI,CAACa,QAAQ,EAAE,IAAIb,IAAI,CAACZ,aAAa,EAAE;UACvC,IAAIY,IAAI,CAACX,cAAc,EAAE;YACrB,IAAI,CAACylB,kBAAkB,CAAC9kB,IAAI,EAAEqJ,KAAK,EAAE4H,UAAU,CAAC,CAAA;IACpD,OAAC,MAAM;IACH,QAAA,IAAIzR,MAAM,GAAGQ,IAAI,CAACR,MAAM,CAAA;IAExB,QAAA,OAAOA,MAAM,EAAE;IACX;cACA,IAAIA,MAAM,CAACA,MAAM,EAAE;IACfilB,YAAAA,UAAU,CAACjlB,MAAM,EAAE,KAAK,EAAE,IAAI,CAAC,CAAA;IACnC,WAAA;cACAA,MAAM,GAAGA,MAAM,CAACA,MAAM,CAAA;IAC1B,SAAA;IAEAilB,QAAAA,UAAU,CAACzkB,IAAI,EAAEqJ,KAAK,EAAE4H,UAAU,CAAC,CAAA;YACnC,IAAI,CAACmH,SAAS,EAAE,CAAA;IACpB,OAAA;IACJ,KAAA;IACJ,GAAA;;IAEA;IACJ;IACA;IACA;MACWtO,gBAAgBA,CAAC8D,QAAqB,EAAQ;QACjD,MAAMoR,YAAY,GAAG,IAAI,CAAC9P,iBAAiB,CAACwF,aAAa,EAAE,CAAA;QAC3D,MAAMqQ,UAAU,GAAGnX,QAAQ,GACrB,IAAI,CAAC6V,uBAAuB,CAAC7V,QAAQ,CAAC,GACtC,KAAK,CAAA;IAEX,IAAA,IAAI,CAACmS,QAAQ,CAACpS,MAAM,CAACC,QAAQ,CAAC,CAAA;IAE9B,IAAA,IAAImX,UAAU,EAAE;IACZ,MAAA,IAAI,CAACC,iBAAiB,CAAChG,YAAY,CAAC,CAAA;IACxC,KAAA;IAEA,IAAA,IAAI,CAAChV,aAAa,CAAC,cAAc,CAAC,CAAA;IACtC,GAAA;MAEOhC,sBAAsBA,CAAChI,IAAU,EAAe;IACnD,IAAA,IAAIA,IAAI,CAACa,QAAQ,EAAE,EAAE;IACjB,MAAA,OAAO,IAAI4e,aAAa,CAACzf,IAAI,EAAE,IAAI,CAAC,CAAA;IACxC,KAAC,MAAM;IACH,MAAA,OAAO,IAAI2e,WAAW,CAAC3e,IAAI,EAAE,IAAI,CAAC,CAAA;IACtC,KAAA;IACJ,GAAA;MAEO8F,eAAeA,CAACP,QAA6B,EAAsB;IACtE,IAAA,MAAMvF,IAAI,GAAG,IAAI,CAAC2iB,OAAO,CAACpd,QAAQ,CAAC,CAAA;IACnC,IAAA,IAAIvF,IAAI,EAAE;IACN,MAAA,OAAO,IAAI,CAACgI,sBAAsB,CAAChI,IAAI,CAAC,CAAA;IAC5C,KAAC,MAAM;IACH,MAAA,OAAO,IAAI,CAAA;IACf,KAAA;IACJ,GAAA;MAEO0e,gBAAgBA,CAACjY,OAAoB,EAAW;QACnD,MAAMzG,IAAI,GAAG,IAAI,CAAC2iB,OAAO,CAACnd,MAAM,CAACiB,OAAO,CAAC,CAAC,CAAA;QAE1C,OAAOzG,IAAI,IAAI,IAAI,IAAIA,IAAI,CAACL,IAAI,KAAK,IAAI,CAACA,IAAI,CAAA;IAClD,GAAA;IAEOgL,EAAAA,cAAcA,GAAW;IAC5B,IAAA,OAAO,IAAI,CAACuJ,aAAa,CAACgI,aAAa,EAAE,CAAA;IAC7C,GAAA;IAEO5G,EAAAA,IAAIA,GAAS;QAChB,KAAK,CAACA,IAAI,EAAE,CAAA;IAEZ,IAAA,IAAI,CAAC7O,OAAO,GAAG,IAAI,CAACyK,GAAG,CAAA;QACvB,IAAI,CAAC+J,aAAa,GAAG,KAAK,CAAA;QAE1B,IAAI,CAACtV,OAAO,CAAC+I,GAAG,GAAG,IAAI,CAACuW,YAAY,EAAE,CAAA;IAEtC,IAAA,IAAI,IAAI,CAACtf,OAAO,CAAC+H,UAAU,IAAI,IAAI,EAAE;UACjC,IAAI,CAAC/H,OAAO,CAAC+H,UAAU,GAAG,IAAI,CAACwX,oBAAoB,EAAE,CAAA;IACzD,KAAA;IAEA,IAAA,IAAI,CAACnF,QAAQ,GAAG,IAAI1S,gBAAgB,CAAC,IAAI,CAAC,CAAA;IAC1C,IAAA,IAAI,CAAC8X,UAAU,GAAG,IAAItU,UAAU,CAAC,IAAI,CAAC,CAAA;IACtC,IAAA,IAAI,CAAC+S,gBAAgB,GAAG,IAAIzL,gBAAgB,CAAC,IAAI,CAAC,CAAA;IAClD,IAAA,IAAI,CAACjJ,iBAAiB,GAAG,IAAIiP,iBAAiB,CAAC,IAAI,CAAC,CAAA;IACpD,IAAA,IAAI,CAACf,UAAU,GAAG,IAAIrY,kBAAkB,CAAC,IAAI,CAAC,CAAA;IAC9C,IAAA,IAAI,CAACmP,aAAa,GAAG,IAAI8G,aAAa,CAAC,IAAI,CAAC,CAAA;IAC5C,IAAA,IAAI,CAACmJ,UAAU,GAAG,IAAInR,UAAU,CAAC,IAAI,CAAC,CAAA;QAEtC,IAAI,CAACoS,QAAQ,EAAE,CAAA;QAEf,IAAI,CAAC3e,OAAO,CAAC6M,EAAE,CAAC,OAAO,EAAE,IAAI,CAAC+R,WAAW,CAAC,CAAA;QAC1C,IAAI,CAAC5e,OAAO,CAAC6M,EAAE,CAAC,UAAU,EAAE,IAAI,CAACgS,cAAc,CAAC,CAAA;IAEhD,IAAA,IAAI,IAAI,CAAC3f,OAAO,CAACgc,cAAc,EAAE;UAC7B,IAAI,CAAClb,OAAO,CAAC6M,EAAE,CAAC,aAAa,EAAE,IAAI,CAACiS,iBAAiB,CAAC,CAAA;IAC1D,KAAA;IACJ,GAAA;IAEO/R,EAAAA,MAAMA,GAAS;IAClB,IAAA,IAAI,CAAC/M,OAAO,CAACoD,KAAK,EAAE,CAAA;IACpB,IAAA,IAAI,CAACpD,OAAO,CAACgN,GAAG,EAAE,CAAA;IAElB,IAAA,IAAI,CAAC0Q,UAAU,CAAC3Q,MAAM,EAAE,CAAA;QAExB,IAAI,CAAC7T,IAAI,GAAG,IAAIf,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,CAAA;QAE9B,KAAK,CAAC4U,MAAM,EAAE,CAAA;IAClB,GAAA;MAEUlO,YAAYA,CAACD,YAA0B,EAAkB;IAC/D,IAAA,IAAI,IAAI,CAACM,OAAO,CAACgJ,WAAW,EAAE;IAC1B,MAAA,OAAO,IAAI,CAACyO,UAAU,CAAC9X,YAAY,CAACD,YAAY,CAAC,CAAA;IACrD,KAAC,MAAM;IACH,MAAA,OAAO,KAAK,CAAA;IAChB,KAAA;IACJ,GAAA;MAEUW,UAAUA,CAACX,YAA0B,EAAW;IACtD,IAAA,IAAI,IAAI,CAACM,OAAO,CAACgJ,WAAW,EAAE;IAC1B,MAAA,OAAO,IAAI,CAACyO,UAAU,CAACpX,UAAU,CAACX,YAAY,CAAC,CAAA;IACnD,KAAC,MAAM;IACH,MAAA,OAAO,KAAK,CAAA;IAChB,KAAA;IACJ,GAAA;MAEUuB,SAASA,CAACvB,YAA0B,EAAW;IACrD,IAAA,IAAI,IAAI,CAACM,OAAO,CAACgJ,WAAW,EAAE;UAC1B,MAAMxN,MAAM,GAAG,IAAI,CAACic,UAAU,CAACxW,SAAS,CAACvB,YAAY,CAAC,CAAA;IAEtD,MAAA,IAAI,CAAC6O,aAAa,CAACgH,cAAc,EAAE,CAAA;IACnC,MAAA,OAAO/Z,MAAM,CAAA;IACjB,KAAC,MAAM;IACH,MAAA,OAAO,KAAK,CAAA;IAChB,KAAA;IACJ,GAAA;MAEUqG,SAASA,CAACnC,YAA0B,EAAW;IACrD,IAAA,IAAI,IAAI,CAACM,OAAO,CAACgJ,WAAW,EAAE;IAC1B,MAAA,OAAO,IAAI,CAACyO,UAAU,CAAC5V,SAAS,CAACnC,YAAY,CAAC,CAAA;IAClD,KAAC,MAAM;IACH,MAAA,OAAO,KAAK,CAAA;IAChB,KAAA;IACJ,GAAA;IAEUyS,EAAAA,aAAaA,GAAW;IAC9B,IAAA,OAAO,IAAI,CAACnS,OAAO,CAAC+b,aAAa,IAAI,CAAC,CAAA;IAC1C,GAAA;IAEQ0D,EAAAA,QAAQA,GAAS;IACrB,IAAA,IAAI,IAAI,CAACzf,OAAO,CAACjH,IAAI,EAAE;UACnB,IAAI,CAACyjB,UAAU,CAAC,IAAI,CAACxc,OAAO,CAACjH,IAAI,EAAE,IAAI,CAAC,CAAA;IAC5C,KAAC,MAAM;IACH,MAAA,MAAM6iB,OAAO,GAAG,IAAI,CAACiE,cAAc,CAAC,IAAI,CAAC,CAAA;IAEzC,MAAA,IAAIjE,OAAO,EAAE;YACT,IAAI,CAACiB,iBAAiB,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAA;IAC5C,OAAC,MAAM;IACH,QAAA,IAAI,CAACL,UAAU,CAAC,EAAE,EAAE,IAAI,CAAC,CAAA;IAC7B,OAAA;IACJ,KAAA;IACJ,GAAA;MAEQqD,cAAcA,CAACxlB,IAAiB,EAA8B;IAClE,IAAA,MAAMuhB,OAAO,GACT,IAAI,CAAC5b,OAAO,CAAC4b,OAAO,IAAK,IAAI,CAAC9a,OAAO,CAAC/H,IAAI,CAAC,KAAK,CAAmB,CAAA;QAEvE,MAAM+mB,gBAAgB,GAAIvT,GAAW,IAA0B;IAC3D,MAAA,MAAMnB,OAA4B,GAAG;IAAEmB,QAAAA,GAAAA;WAAK,CAAA;UAE5CwT,cAAc,CAAC3U,OAAO,CAAC,CAAA;IAEvB,MAAA,OAAOA,OAAO,CAAA;SACjB,CAAA;QAED,MAAM2U,cAAc,GAAI3U,OAA4B,IAAW;UAC3D,IAAI/Q,IAAI,EAAEmD,EAAE,EAAE;IACV;IACA,QAAA,MAAMzE,IAAI,GAAG;cAAEsB,IAAI,EAAEA,IAAI,CAACmD,EAAAA;aAAI,CAAA;IAC9B4N,QAAAA,OAAO,CAAC,MAAM,CAAC,GAAGrS,IAAI,CAAA;IAC1B,OAAC,MAAM;IACH;IACA,QAAA,MAAMinB,cAAc,GAAG,IAAI,CAAC3L,qBAAqB,EAAE,CAAA;IACnD,QAAA,IAAI2L,cAAc,EAAE;IAChB,UAAA,MAAMjnB,IAAI,GAAG;IAAE6a,YAAAA,aAAa,EAAEoM,cAAAA;eAAgB,CAAA;IAC9C5U,UAAAA,OAAO,CAAC,MAAM,CAAC,GAAGrS,IAAI,CAAA;IAC1B,SAAA;IACJ,OAAA;SACH,CAAA;IAED,IAAA,IAAI,OAAO6iB,OAAO,KAAK,UAAU,EAAE;UAC/B,OAAOA,OAAO,CAACvhB,IAAI,CAAC,CAAA;IACxB,KAAC,MAAM,IAAI,OAAOuhB,OAAO,KAAK,QAAQ,EAAE;UACpC,OAAOkE,gBAAgB,CAAClE,OAAO,CAAC,CAAA;SACnC,MAAM,IAAIA,OAAO,IAAI,OAAOA,OAAO,KAAK,QAAQ,EAAE;UAC/CmE,cAAc,CAACnE,OAAO,CAAC,CAAA;IACvB,MAAA,OAAOA,OAAO,CAAA;IAClB,KAAC,MAAM;IACH,MAAA,OAAO,IAAI,CAAA;IACf,KAAA;IACJ,GAAA;IAEQvH,EAAAA,qBAAqBA,GAAkB;IAC3C,IAAA,IAAI,IAAI,CAACrU,OAAO,CAACyS,SAAS,EAAE;IACxB,MAAA,OAAO,IAAI,CAACwL,gBAAgB,CAAC5J,qBAAqB,EAAE,CAAA;IACxD,KAAC,MAAM;IACH,MAAA,OAAO,IAAI,CAAA;IACf,KAAA;IACJ,GAAA;MAEQ4L,QAAQA,CAAClnB,IAAgB,EAAQ;QACrC,MAAMmnB,MAAM,GAAGA,MAAY;IACvB,MAAA,IAAI,CAAC,IAAI,CAAC5K,aAAa,EAAE;YACrB,IAAI,CAACA,aAAa,GAAG,IAAI,CAAA;IACzB,QAAA,IAAI,CAACjR,aAAa,CAAC,WAAW,CAAC,CAAA;IACnC,OAAA;SACH,CAAA;IAED,IAAA,IAAI,CAAC,IAAI,CAACrE,OAAO,CAACxG,SAAS,EAAE;IACzB,MAAA,OAAA;IACJ,KAAA;IAEA,IAAA,IAAI,CAACQ,IAAI,GAAG,IAAI,IAAI,CAACgG,OAAO,CAACxG,SAAS,CAClC,IAAI,EACJ,IAAI,EACJ,IAAI,CAACwG,OAAO,CAACxG,SACjB,CAAC,CAAA;IAED,IAAA,IAAI,CAAC+P,iBAAiB,CAACxH,KAAK,EAAE,CAAA;IAE9B,IAAA,IAAI,CAAC/H,IAAI,CAACG,YAAY,CAACpB,IAAI,CAAC,CAAA;IAE5B,IAAA,MAAM+a,gBAAgB,GAAG,IAAI,CAACD,eAAe,EAAE,CAAA;IAE/C,IAAA,IAAI,CAAC1P,gBAAgB,CAAC,IAAI,CAAC,CAAA;QAE3B,IAAI,CAAC2P,gBAAgB,EAAE;IACnBoM,MAAAA,MAAM,EAAE,CAAA;IACZ,KAAC,MAAM;IACH;IACA,MAAA,IAAI,CAAChM,uBAAuB,CAACgM,MAAM,CAAC,CAAA;IACxC,KAAA;IACJ,GAAA;;IAEA;IACA;IACQrM,EAAAA,eAAeA,GAAY;QAC/B,MAAMsM,YAAY,GAAGA,MAA0B;IAC3C;IACA,MAAA,IAAI,CAAC,IAAI,CAACngB,OAAO,CAACyS,SAAS,EAAE;IACzB,QAAA,OAAO,CAAC,KAAK,EAAE,KAAK,CAAC,CAAA;IACzB,OAAC,MAAM;YACH,MAAMC,KAAK,GAAG,IAAI,CAACuL,gBAAgB,CAAC/K,mBAAmB,EAAE,CAAA;YAEzD,IAAI,CAACR,KAAK,EAAE;IACR,UAAA,OAAO,CAAC,KAAK,EAAE,KAAK,CAAC,CAAA;IACzB,SAAC,MAAM;cACH,MAAMoB,gBAAgB,GAClB,IAAI,CAACmK,gBAAgB,CAACpK,eAAe,CAACnB,KAAK,CAAC,CAAA;;IAEhD;IACA,UAAA,OAAO,CAAC,IAAI,EAAEoB,gBAAgB,CAAC,CAAA;IACnC,SAAA;IACJ,OAAA;SACH,CAAA;QAED,MAAMsM,aAAa,GAAGA,MAAe;IACjC;IACA,MAAA,IAAI,IAAI,CAACpgB,OAAO,CAAC2b,QAAQ,KAAK,KAAK,EAAE;IACjC,QAAA,OAAO,KAAK,CAAA;IAChB,OAAA;IAEA,MAAA,MAAM0E,QAAQ,GAAG,IAAI,CAACC,mBAAmB,EAAE,CAAA;UAC3C,IAAIxM,gBAAgB,GAAG,KAAK,CAAA;UAE5B,IAAI,CAAC9Z,IAAI,CAACmB,OAAO,CAAC,CAACd,IAAU,EAAEiB,KAAa,KAAK;YAC7C,IAAIjB,IAAI,CAACX,cAAc,EAAE;IACrBoa,UAAAA,gBAAgB,GAAG,IAAI,CAAA;IACvB,UAAA,OAAO,KAAK,CAAA;aACf,MAAM,IAAI,CAACzZ,IAAI,CAACY,WAAW,EAAE,EAAE;IAC5B,UAAA,OAAO,KAAK,CAAA;IAChB,SAAC,MAAM;cACHZ,IAAI,CAACkE,OAAO,GAAG,IAAI,CAAA;cACnB,OAAOjD,KAAK,KAAK+kB,QAAQ,CAAA;IAC7B,SAAA;IACJ,OAAC,CAAC,CAAA;IAEF,MAAA,OAAOvM,gBAAgB,CAAA;SAC1B,CAAA;QAED,IAAI,CAACyM,UAAU,EAAEzM,gBAAgB,CAAC,GAAGqM,YAAY,EAAE,CAAC;;QAEpD,IAAI,CAACI,UAAU,EAAE;UACbzM,gBAAgB,GAAGsM,aAAa,EAAE,CAAA;IACtC,KAAA;IAEA,IAAA,OAAOtM,gBAAgB,CAAA;IAC3B,GAAA;;IAEA;IACA;MACQI,uBAAuBA,CAACC,UAAsB,EAAQ;QAC1D,MAAMgM,YAAY,GAAGA,MAAe;IAChC,MAAA,IAAI,CAAC,IAAI,CAACngB,OAAO,CAACyS,SAAS,EAAE;IACzB,QAAA,OAAO,KAAK,CAAA;IAChB,OAAC,MAAM;YACH,MAAMC,KAAK,GAAG,IAAI,CAACuL,gBAAgB,CAAC/K,mBAAmB,EAAE,CAAA;YAEzD,IAAI,CAACR,KAAK,EAAE;IACR,UAAA,OAAO,KAAK,CAAA;IAChB,SAAC,MAAM;cACH,IAAI,CAACuL,gBAAgB,CAAC/J,uBAAuB,CACzCxB,KAAK,EACLyB,UACJ,CAAC,CAAA;IAED,UAAA,OAAO,IAAI,CAAA;IACf,SAAA;IACJ,OAAA;SACH,CAAA;QAED,MAAMiM,aAAa,GAAGA,MAAY;IAC9B,MAAA,MAAMC,QAAQ,GAAG,IAAI,CAACC,mBAAmB,EAAE,CAAA;UAC3C,IAAIxL,YAAY,GAAG,CAAC,CAAA;UAEpB,MAAME,eAAe,GAAI3a,IAAU,IAAW;IAC1Cya,QAAAA,YAAY,IAAI,CAAC,CAAA;IACjB,QAAA,IAAI,CAACrR,SAAS,CAACpJ,IAAI,EAAE,KAAK,EAAE,MAAM;IAC9Bya,UAAAA,YAAY,IAAI,CAAC,CAAA;IACjBvB,UAAAA,SAAS,EAAE,CAAA;IACf,SAAC,CAAC,CAAA;WACL,CAAA;UAED,MAAMA,SAAS,GAAGA,MAAY;YAC1B,IAAI,CAACvZ,IAAI,CAACmB,OAAO,CAAC,CAACd,IAAU,EAAEiB,KAAa,KAAK;cAC7C,IAAIjB,IAAI,CAACX,cAAc,EAAE;IACrB,YAAA,IAAI,CAACW,IAAI,CAAC2Q,UAAU,EAAE;kBAClBgK,eAAe,CAAC3a,IAAI,CAAC,CAAA;IACzB,aAAA;IAEA,YAAA,OAAO,KAAK,CAAA;IAChB,WAAC,MAAM;gBACH,IAAI,CAACoJ,SAAS,CAACpJ,IAAI,EAAE,KAAK,EAAE,IAAI,CAAC,CAAA;gBAEjC,OAAOiB,KAAK,KAAK+kB,QAAQ,CAAA;IAC7B,WAAA;IACJ,SAAC,CAAC,CAAA;YAEF,IAAIvL,YAAY,KAAK,CAAC,EAAE;IACpBX,UAAAA,UAAU,EAAE,CAAA;IAChB,SAAA;WACH,CAAA;IAEDZ,MAAAA,SAAS,EAAE,CAAA;SACd,CAAA;IAED,IAAA,IAAI,CAAC4M,YAAY,EAAE,EAAE;IACjBC,MAAAA,aAAa,EAAE,CAAA;IACnB,KAAA;IACJ,GAAA;IAEQE,EAAAA,mBAAmBA,GAAW;IAClC,IAAA,IAAI,IAAI,CAACtgB,OAAO,CAAC2b,QAAQ,KAAK,IAAI,EAAE;IAChC,MAAA,OAAO,CAAC,CAAC,CAAA;SACZ,MAAM,IAAI,OAAO,IAAI,CAAC3b,OAAO,CAAC2b,QAAQ,KAAK,QAAQ,EAAE;IAClD,MAAA,OAAO,IAAI,CAAC3b,OAAO,CAAC2b,QAAQ,CAAA;SAC/B,MAAM,IAAI,OAAO,IAAI,CAAC3b,OAAO,CAAC2b,QAAQ,KAAK,QAAQ,EAAE;UAClD,OAAO6E,QAAQ,CAAC,IAAI,CAACxgB,OAAO,CAAC2b,QAAQ,EAAE,EAAE,CAAC,CAAA;IAC9C,KAAC,MAAM;IACH,MAAA,OAAO,CAAC,CAAA;IACZ,KAAA;IACJ,GAAA;MAEQ+D,WAAW,GACf/Q,CAAgE,IACzD;QACP,MAAM8R,WAAW,GAAG,IAAI,CAACC,cAAc,CAAC/R,CAAC,CAAC7O,MAAM,CAAC,CAAA;IAEjD,IAAA,IAAI2gB,WAAW,EAAE;IACb,MAAA,IAAIA,WAAW,CAACE,IAAI,KAAK,QAAQ,EAAE;IAC/B,QAAA,IAAI,CAAC1E,MAAM,CAACwE,WAAW,CAACpmB,IAAI,EAAE,IAAI,CAAC2F,OAAO,CAAC0D,KAAK,CAAC,CAAA;YAEjDiL,CAAC,CAACgD,cAAc,EAAE,CAAA;YAClBhD,CAAC,CAACiS,eAAe,EAAE,CAAA;IACvB,OAAC,MAAM,IAAIH,WAAW,CAACE,IAAI,KAAK,OAAO,EAAE;IACrC,QAAA,MAAMtmB,IAAI,GAAGomB,WAAW,CAACpmB,IAAI,CAAA;IAC7B,QAAA,MAAM+J,KAAK,GAAG,IAAI,CAACC,aAAa,CAAC,YAAY,EAAE;cAC3ChK,IAAI;IACJwmB,UAAAA,WAAW,EAAElS,CAAAA;IACjB,SAAC,CAAC,CAAA;IAEF,QAAA,IAAI,CAACvK,KAAK,CAACQ,kBAAkB,EAAE,EAAE;IAC7B,UAAA,IAAI,CAAC0X,YAAY,CAACjiB,IAAI,CAAC,CAAA;IAC3B,SAAA;IACJ,OAAA;IACJ,KAAA;OACH,CAAA;MAEOslB,cAAc,GAClBhR,CAAsE,IAC/D;QACP,MAAM8R,WAAW,GAAG,IAAI,CAACC,cAAc,CAAC/R,CAAC,CAAC7O,MAAM,CAAC,CAAA;IAEjD,IAAA,IAAI2gB,WAAW,EAAEE,IAAI,KAAK,OAAO,EAAE;IAC/B,MAAA,IAAI,CAACtc,aAAa,CAAC,eAAe,EAAE;YAChChK,IAAI,EAAEomB,WAAW,CAACpmB,IAAI;IACtBwmB,QAAAA,WAAW,EAAElS,CAAAA;IACjB,OAAC,CAAC,CAAA;IACN,KAAA;OACH,CAAA;MAEO+R,cAAcA,CAAC5f,OAAoB,EAAsB;IAC7D,IAAA,MAAMggB,OAAO,GAAGjhB,MAAM,CAACiB,OAAO,CAAC,CAAA;IAE/B,IAAA,MAAMmZ,OAAO,GAAG6G,OAAO,CAACC,OAAO,CAAC,iBAAiB,CAAC,CAAA;QAElD,IAAI9G,OAAO,CAAC5gB,MAAM,EAAE;IAChB,MAAA,MAAMgB,IAAI,GAAG,IAAI,CAAC2iB,OAAO,CAAC/C,OAA8B,CAAC,CAAA;IAEzD,MAAA,IAAI5f,IAAI,EAAE;YACN,OAAO;IACHsmB,UAAAA,IAAI,EAAE,QAAQ;IACdtmB,UAAAA,IAAAA;aACH,CAAA;IACL,OAAA;IACJ,KAAC,MAAM;IACH,MAAA,MAAMkR,GAAG,GAAGuV,OAAO,CAACC,OAAO,CAAC,iBAAiB,CAAC,CAAA;UAC9C,IAAIxV,GAAG,CAAClS,MAAM,EAAE;IACZ,QAAA,MAAMgB,IAAI,GAAG,IAAI,CAAC2iB,OAAO,CAACzR,GAA0B,CAAC,CAAA;IACrD,QAAA,IAAIlR,IAAI,EAAE;cACN,OAAO;IACHsmB,YAAAA,IAAI,EAAE,OAAO;IACbtmB,YAAAA,IAAAA;eACH,CAAA;IACL,SAAA;IACJ,OAAA;IACJ,KAAA;IAEA,IAAA,OAAO,IAAI,CAAA;IACf,GAAA;MAEQ2iB,OAAOA,CAACpd,QAA6B,EAAe;IACxD,IAAA,MAAM0Z,GAAG,GAAG1Z,QAAQ,CAACmhB,OAAO,CAAC,kBAAkB,CAAC,CAAA;IAChD,IAAA,IAAIzH,GAAG,CAACjgB,MAAM,KAAK,CAAC,EAAE;IAClB,MAAA,OAAO,IAAI,CAAA;IACf,KAAC,MAAM;IACH,MAAA,OAAOigB,GAAG,CAACvgB,IAAI,CAAC,MAAM,CAAC,CAAA;IAC3B,KAAA;IACJ,GAAA;MAEQ6mB,iBAAiB,GACrBjR,CAAsE,IACrE;IACD,IAAA,MAAMmM,IAAI,GAAGjb,MAAM,CAAC8O,CAAC,CAAC7O,MAAM,CAAC,CAACihB,OAAO,CAAC,gCAAgC,CAAC,CAAA;QACvE,IAAIjG,IAAI,CAACzhB,MAAM,EAAE;IACb,MAAA,MAAMgB,IAAI,GAAG,IAAI,CAAC2iB,OAAO,CAAClC,IAAI,CAAC,CAAA;IAC/B,MAAA,IAAIzgB,IAAI,EAAE;YACNsU,CAAC,CAACgD,cAAc,EAAE,CAAA;YAClBhD,CAAC,CAACiS,eAAe,EAAE,CAAA;IAEnB,QAAA,IAAI,CAACvc,aAAa,CAAC,kBAAkB,EAAE;cACnChK,IAAI;IACJwmB,UAAAA,WAAW,EAAElS,CAAAA;IACjB,SAAC,CAAC,CAAA;IACF,QAAA,OAAO,KAAK,CAAA;IAChB,OAAA;IACJ,KAAA;IAEA,IAAA,OAAO,IAAI,CAAA;OACd,CAAA;IAEO8D,EAAAA,SAASA,GAAS;IACtB,IAAA,IAAI,IAAI,CAACzS,OAAO,CAACyS,SAAS,EAAE;IACxB,MAAA,IAAI,CAACwL,gBAAgB,CAACxL,SAAS,EAAE,CAAA;IACrC,KAAA;IACJ,GAAA;MAEQ4M,iBAAiBA,CAAChG,YAAqB,EAAQ;IACnD,IAAA,MAAMhf,IAAI,GAAG,IAAI,CAACwU,eAAe,EAAE,CAAA;IACnC,IAAA,IAAIxU,IAAI,EAAE;IACN,MAAA,MAAM6F,WAAW,GAAG,IAAI,CAACmC,sBAAsB,CAAChI,IAAI,CAAC,CAAA;IACrD,MAAA,IAAI6F,WAAW,EAAE;IACbA,QAAAA,WAAW,CAACkZ,MAAM,CAACC,YAAY,CAAC,CAAA;IACpC,OAAA;IACJ,KAAA;IACJ,GAAA;IAEQ2H,EAAAA,mBAAmBA,GAAS;IAChC,IAAA,MAAM3mB,IAAI,GAAG,IAAI,CAACwU,eAAe,EAAE,CAAA;IACnC,IAAA,IAAIxU,IAAI,EAAE;IACN,MAAA,IAAI,CAACua,mBAAmB,CAACva,IAAI,CAAC,CAAA;IAClC,KAAA;IACJ,GAAA;IAEQklB,EAAAA,oBAAoBA,GAAW;IACnC,IAAA,IAAI,IAAI,CAACvf,OAAO,CAAC+I,GAAG,EAAE;IAClB;IACA,MAAA,OAAO,UAAU,CAAA;IACrB,KAAC,MAAM;IACH;IACA,MAAA,OAAO,UAAU,CAAA;IACrB,KAAA;IACJ,GAAA;IAEQuW,EAAAA,YAAYA,GAAY;IAC5B,IAAA,IAAI,IAAI,CAACtf,OAAO,CAAC+I,GAAG,IAAI,IAAI,EAAE;IAC1B,MAAA,OAAO,IAAI,CAAC/I,OAAO,CAAC+I,GAAG,CAAA;IAC3B,KAAC,MAAM;UACH,MAAMkY,OAAO,GAAG,IAAI,CAACngB,OAAO,CAAC/H,IAAI,CAAC,KAAK,CAAY,CAAA;UAEnD,IACIkoB,OAAO,KAAK,IAAI,IAChBA,OAAO,KAAK,KAAK,IACjBA,OAAO,KAAK3nB,SAAS,EACvB;IACE,QAAA,OAAO,IAAI,CAAA;IACf,OAAC,MAAM;IACH,QAAA,OAAO,KAAK,CAAA;IAChB,OAAA;IACJ,KAAA;IACJ,GAAA;IAEQgjB,EAAAA,YAAYA,CAChBjiB,IAAiB,EACjBgiB,YAAgC,EAC5B;QACJ,MAAM5J,SAAS,GAAGA,MAAY;IAC1B,MAAA,IAAI,IAAI,CAACzS,OAAO,CAACyS,SAAS,EAAE;IACxB,QAAA,IAAI,CAACwL,gBAAgB,CAACxL,SAAS,EAAE,CAAA;IACrC,OAAA;SACH,CAAA;QAED,IAAI,CAACpY,IAAI,EAAE;IACP;UACA,IAAI,CAAC2mB,mBAAmB,EAAE,CAAA;IAC1BvO,MAAAA,SAAS,EAAE,CAAA;IACX,MAAA,OAAA;IACJ,KAAA;IACA,IAAA,MAAMyO,cAAc,GAAG;IAAE7H,MAAAA,YAAY,EAAE,IAAI;IAAE8H,MAAAA,UAAU,EAAE,IAAA;SAAM,CAAA;IAC/D,IAAA,MAAMC,aAAa,GAAG;IAAE,MAAA,GAAGF,cAAc;UAAE,IAAI7E,YAAY,IAAI,EAAE,CAAA;SAAG,CAAA;QAEpE,MAAMgF,SAAS,GAAGA,MAAe;IAC7B,MAAA,IAAI,IAAI,CAACrhB,OAAO,CAAC6b,eAAe,EAAE;IAC9B,QAAA,OACI,IAAI,CAAC7b,OAAO,CAAC8b,UAAU,KAAK,IAAI,IAChC,IAAI,CAAC9b,OAAO,CAAC6b,eAAe,CAACxhB,IAAI,CAAC,CAAA;IAE1C,OAAC,MAAM;IACH,QAAA,OAAO,IAAI,CAAC2F,OAAO,CAAC8b,UAAU,KAAK,IAAI,CAAA;IAC3C,OAAA;SACH,CAAA;QAED,MAAMwF,WAAW,GAAGA,MAAY;IAC5B,MAAA,MAAMznB,MAAM,GAAGQ,IAAI,CAACR,MAAM,CAAA;UAE1B,IAAIA,MAAM,IAAIA,MAAM,CAACA,MAAM,IAAI,CAACA,MAAM,CAAC0E,OAAO,EAAE;IAC5C,QAAA,IAAI,CAAC6P,QAAQ,CAACvU,MAAM,EAAE,KAAK,CAAC,CAAA;IAChC,OAAA;SACH,CAAA;IAED,IAAA,IAAI,CAACwnB,SAAS,EAAE,EAAE;IACd,MAAA,OAAA;IACJ,KAAA;QAEA,IAAI,IAAI,CAAC9X,iBAAiB,CAACC,cAAc,CAACnP,IAAI,CAAC,EAAE;UAC7C,IAAI+mB,aAAa,CAACD,UAAU,EAAE;YAC1B,IAAI,CAACH,mBAAmB,EAAE,CAAA;IAC1B,QAAA,IAAI,CAAC3c,aAAa,CAAC,aAAa,EAAE;IAC9BhK,UAAAA,IAAI,EAAE,IAAI;IACVknB,UAAAA,aAAa,EAAElnB,IAAAA;IACnB,SAAC,CAAC,CAAA;IACN,OAAA;IACJ,KAAC,MAAM;UACH,MAAMmnB,cAAc,GAAG,IAAI,CAAC3S,eAAe,EAAE,IAAI,IAAI,CAAA;UACrD,IAAI,CAACmS,mBAAmB,EAAE,CAAA;UAC1B,IAAI,CAACtM,cAAc,CAACra,IAAI,EAAE+mB,aAAa,CAAC/H,YAAY,CAAC,CAAA;IAErD,MAAA,IAAI,CAAChV,aAAa,CAAC,aAAa,EAAE;YAC9BhK,IAAI;IACJonB,QAAAA,eAAe,EAAED,cAAAA;IACrB,OAAC,CAAC,CAAA;IACFF,MAAAA,WAAW,EAAE,CAAA;IACjB,KAAA;IAEA7O,IAAAA,SAAS,EAAE,CAAA;IACf,GAAA;IAEQ+J,EAAAA,UAAUA,CAACzjB,IAAuB,EAAEsS,UAAuB,EAAQ;IACvE,IAAA,IAAItS,IAAI,EAAE;IACN,MAAA,IAAIsS,UAAU,EAAE;IACZ,QAAA,IAAI,CAACqW,aAAa,CAACrW,UAAU,CAAC,CAAA;IAC9B,QAAA,IAAI,CAACsW,WAAW,CAAC5oB,IAAI,EAAEsS,UAAU,CAAC,CAAA;IACtC,OAAC,MAAM;IACH,QAAA,IAAI,CAAC4U,QAAQ,CAAClnB,IAAI,CAAC,CAAA;IACvB,OAAA;IAEA,MAAA,IAAI,IAAI,CAACyG,UAAU,EAAE,EAAE;IACnB,QAAA,IAAI,CAACiY,UAAU,CAACjX,OAAO,EAAE,CAAA;IAC7B,OAAA;IACJ,KAAA;IAEA,IAAA,IAAI,CAAC6D,aAAa,CAAC,gBAAgB,EAAE;IACjCud,MAAAA,SAAS,EAAE7oB,IAAI;IACf8oB,MAAAA,WAAW,EAAExW,UAAAA;IACjB,KAAC,CAAC,CAAA;IACN,GAAA;MAEQqW,aAAaA,CAACrW,UAAgB,EAAQ;QAC1C,MAAMyW,wBAAwB,GAC1B,IAAI,CAACvY,iBAAiB,CAACoP,qBAAqB,CAACtN,UAAU,CAAC,CAAA;IAC5D,IAAA,KAAK,MAAM7O,CAAC,IAAIslB,wBAAwB,EAAE;IACtC,MAAA,IAAI,CAACvY,iBAAiB,CAACqL,mBAAmB,CAACpY,CAAC,CAAC,CAAA;IACjD,KAAA;IACJ,GAAA;IAEQmlB,EAAAA,WAAWA,CAAC5oB,IAAgB,EAAEsS,UAAgB,EAAQ;IAC1DA,IAAAA,UAAU,CAAClR,YAAY,CAACpB,IAAI,CAAC,CAAA;QAE7BsS,UAAU,CAAC3R,cAAc,GAAG,KAAK,CAAA;QACjC2R,UAAU,CAACL,UAAU,GAAG,KAAK,CAAA;IAE7B,IAAA,IAAI,CAAC7G,gBAAgB,CAACkH,UAAU,CAAC,CAAA;IACrC,GAAA;IAEQwR,EAAAA,iBAAiBA,CACrBkF,YAAiD,EACjD1W,UAAuB,EACvBC,UAAwC,EACpC;QACJ,MAAMF,OAAO,GAAG2W,YAAY,IAAI,IAAI,CAAClC,cAAc,CAACxU,UAAU,CAAC,CAAA;QAE/D,IAAI,CAACmU,UAAU,CAACrU,WAAW,CAACC,OAAO,EAAEC,UAAU,EAAEC,UAAU,CAAC,CAAA;IAChE,GAAA;MAEQ6T,kBAAkBA,CACtB9kB,IAAU,EAGN;IAAA,IAAA,IAFJqJ,KAAK,GAAAtK,SAAA,CAAAC,MAAA,GAAA,CAAA,IAAAD,SAAA,CAAA,CAAA,CAAA,KAAAE,SAAA,GAAAF,SAAA,CAAA,CAAA,CAAA,GAAG,IAAI,CAAA;QAAA,IACZkS,UAAmC,GAAAlS,SAAA,CAAAC,MAAA,GAAAD,CAAAA,GAAAA,SAAA,MAAAE,SAAA,CAAA;QAEnCe,IAAI,CAAC2Q,UAAU,GAAG,IAAI,CAAA;IAEtB,IAAA,IAAI,CAAC6R,iBAAiB,CAAC,IAAI,EAAExiB,IAAI,EAAE,MAAM;UACrC,IAAI,CAACoJ,SAAS,CAACpJ,IAAI,EAAEqJ,KAAK,EAAE4H,UAAU,CAAC,CAAA;IAC3C,KAAC,CAAC,CAAA;IACN,GAAA;IACJ,CAAA;IAEAiE,YAAY,CAACP,QAAQ,CAAC0M,YAAY,EAAE,MAAM,CAAC;;;;;;;;;;"}